<?xml version="1.0" encoding="UTF-8"?>
<objectListWrapper>
  <objects>
      <objectContainer>
         <project>
            <name>[BP][MASTER][OCR]v2.2 </name>
            <description>Version 2.2.9</description>
            <author>workfusion</author>
            <runs>
               <run>
                  <blockSize>1</blockSize>
                  <campaign>
                     <active>true</active>
                     <businessRules/>
                     <campaignMaps>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content>#RuleContext.APPROVE_ALL_RULE</content>
                              <name>Approve All</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>70275a25-e2ac-4077-9b56-c197f0f14d24</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>S3 bucket</answer>
                                       <answerCode>s3_bucket_name</answerCode>
                                       <answerHtml/>
                                       <answerTypeObject>
                                          <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                          <code>FREE_TEXT</code>
                                          <description/>
                                          <optionsAvailable>false</optionsAvailable>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Free Text</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <constantable>false</constantable>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <lastModified>2018-05-29T12:13:15Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>true</required>
                                       <sequenceNumber>1</sequenceNumber>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>OCR Type</answer>
                                       <answerCode>ocr_type</answerCode>
                                       <answerHtml/>
                                       <answerTypeObject>
                                          <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                          <code>SELECT_ONE</code>
                                          <description/>
                                          <optionsAvailable>true</optionsAvailable>
                                          <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Select One</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <category/>
                                       <constantable>false</constantable>
                                       <defaultValue/>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <htmlClasses/>
                                       <lastModified>2018-05-29T12:13:15Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <options>Standard=standard|TOOD=tood</options>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>true</required>
                                       <sequenceNumber>2</sequenceNumber>
                                       <shuffle>false</shuffle>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>OCR cache datastore</answer>
                                       <answerCode>cache_datastore</answerCode>
                                       <answerHtml/>
                                       <answerTypeObject>
                                          <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                          <code>FREE_TEXT</code>
                                          <description/>
                                          <optionsAvailable>false</optionsAvailable>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Free Text</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <constantable>false</constantable>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <lastModified>2018-05-29T12:13:15Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>true</required>
                                       <sequenceNumber>3</sequenceNumber>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>Export Format</answer>
                                       <answerCode>export_format</answerCode>
                                       <answerHtml>For Standard OCR type only.&lt;br /&gt;You can use maximum 3 types at once.</answerHtml>
                                       <answerTypeObject>
                                          <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                          <code>SELECT_MULTI</code>
                                          <description/>
                                          <optionsAvailable>true</optionsAvailable>
                                          <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Select Multi</title>
                                          <valueSeparator>PIPE</valueSeparator>
                                          <valueType>MULTIVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <constantable>false</constantable>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <lastModified>2018-05-29T12:13:15Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <options>html=html|pdfSearchable=pdfSearchable|txt=txt|xml=xml|xmlForCorrectedImage=xmlForCorrectedImage</options>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>false</required>
                                       <sequenceNumber>4</sequenceNumber>
                                       <shuffle>false</shuffle>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>Document language</answer>
                                       <answerCode>document_language</answerCode>
                                       <answerHtml>English (default).&lt;br /&gt;This parameter can contain several language names separated with commas, for example "English,French,German".</answerHtml>
                                       <answerTypeObject>
                                          <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                          <code>FREE_TEXT</code>
                                          <description/>
                                          <optionsAvailable>false</optionsAvailable>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Free Text</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <constantable>false</constantable>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <lastModified>2018-05-29T12:13:15Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>false</required>
                                       <sequenceNumber>5</sequenceNumber>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>Switch for CharPosition option</answer>
                                       <answerCode>ocr_xml_char_recognition</answerCode>
                                       <answerHtml/>
                                       <answerTypeObject>
                                          <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                          <code>SELECT_ONE</code>
                                          <description/>
                                          <optionsAvailable>true</optionsAvailable>
                                          <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Select One</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <constantable>false</constantable>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <lastModified>2018-05-29T12:13:15Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <options>false=false|true=true</options>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>false</required>
                                       <sequenceNumber>6</sequenceNumber>
                                       <shuffle>false</shuffle>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>Allowed Region Types</answer>
                                       <answerCode>allowed_region_types</answerCode>
                                       <answerHtml/>
                                       <answerTypeObject>
                                          <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                          <code>SELECT_MULTI</code>
                                          <description/>
                                          <optionsAvailable>true</optionsAvailable>
                                          <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Select Multi</title>
                                          <valueSeparator>PIPE</valueSeparator>
                                          <valueType>MULTIVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <constantable>false</constantable>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <lastModified>2018-05-29T12:13:15Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <options>BT_AutoAnalysis=BT_AutoAnalysis|BT_Barcode=BT_Barcode|BT_Checkmark=BT_Checkmark|BT_CheckmarkGroup=BT_CheckmarkGroup|BT_RasterPicture=BT_RasterPicture|BT_Separator=BT_Separator|BT_SeparatorGroup=BT_SeparatorGroup|BT_Table=BT_Table|BT_Text=BT_Text|BT_VectorPicture=BT_VectorPicture</options>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>false</required>
                                       <sequenceNumber>7</sequenceNumber>
                                       <shuffle>false</shuffle>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>Change DPI</answer>
                                       <answerCode>change_dpi</answerCode>
                                       <answerHtml>From 50 to 400</answerHtml>
                                       <answerTypeObject>
                                          <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                          <code>FREE_TEXT</code>
                                          <description/>
                                          <optionsAvailable>false</optionsAvailable>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Free Text</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <constantable>false</constantable>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <lastModified>2018-05-29T12:13:15Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>false</required>
                                       <sequenceNumber>8</sequenceNumber>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>Invert Image</answer>
                                       <answerCode>invert_image</answerCode>
                                       <answerHtml/>
                                       <answerTypeObject>
                                          <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                          <code>SELECT_ONE</code>
                                          <description/>
                                          <optionsAvailable>true</optionsAvailable>
                                          <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Select One</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <constantable>false</constantable>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <lastModified>2018-05-29T12:13:15Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <options>false=false|true=true</options>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>false</required>
                                       <sequenceNumber>9</sequenceNumber>
                                       <shuffle>false</shuffle>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>Discard Color Image</answer>
                                       <answerCode>discard_color_image</answerCode>
                                       <answerHtml/>
                                       <answerTypeObject>
                                          <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                          <code>SELECT_ONE</code>
                                          <description/>
                                          <optionsAvailable>true</optionsAvailable>
                                          <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Select One</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <constantable>false</constantable>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <lastModified>2018-05-29T12:13:15Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <options>false=false|true=true</options>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>false</required>
                                       <sequenceNumber>10</sequenceNumber>
                                       <shuffle>false</shuffle>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>Remove Color Objects</answer>
                                       <answerCode>remove_color_objects</answerCode>
                                       <answerHtml/>
                                       <answerTypeObject>
                                          <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                          <code>SELECT_ONE</code>
                                          <description/>
                                          <optionsAvailable>true</optionsAvailable>
                                          <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Select One</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <constantable>false</constantable>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <lastModified>2018-05-29T12:13:15Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <options>Blue=Blue|Green=Green|Red=Red|Yellow=Yellow</options>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>false</required>
                                       <sequenceNumber>11</sequenceNumber>
                                       <shuffle>false</shuffle>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>Remove Color Objects Type</answer>
                                       <answerCode>remove_color_objects_type</answerCode>
                                       <answerHtml/>
                                       <answerTypeObject>
                                          <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                          <code>SELECT_ONE</code>
                                          <description/>
                                          <optionsAvailable>true</optionsAvailable>
                                          <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Select One</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <constantable>false</constantable>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <lastModified>2018-05-29T12:13:15Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <options>Background=Background|Full=Full|Stamp=Stamp</options>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>false</required>
                                       <sequenceNumber>12</sequenceNumber>
                                       <shuffle>false</shuffle>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>Custom Regions</answer>
                                       <answerCode>custom_regions</answerCode>
                                       <answerHtml/>
                                       <answerTypeObject>
                                          <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                          <code>FREE_TEXT</code>
                                          <description/>
                                          <optionsAvailable>false</optionsAvailable>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Free Text</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <constantable>false</constantable>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <lastModified>2018-05-29T12:13:15Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>false</required>
                                       <sequenceNumber>13</sequenceNumber>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                 </answers>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
  	 &lt;export include-original-data="true"&gt;
       &lt;single-column name="s3_bucket_name" value="public"/&gt;
       &lt;single-column name="ocr_type" value="tood" /&gt; 
       &lt;single-column name="cache_datastore" value="ocr_cache_1" /&gt; 
       &lt;single-column name="export_format" value="xmlForCorrectedImage" /&gt;
       &lt;single-column name="document_language" value="English" /&gt;
       &lt;single-column name="ocr_xml_char_recognition" value="true" /&gt; 
       &lt;single-column name="allowed_region_types" value="BT_Table|BT_Text" /&gt; 
       &lt;single-column name="custom_regions" value="" /&gt; 
       &lt;single-column name="change_dpi" value="" /&gt; 
       &lt;single-column name="invert_image" value="" /&gt; 
       &lt;single-column name="discard_color_image" value="" /&gt; 
       &lt;single-column name="remove_color_objects" value="" /&gt; 
       &lt;single-column name="remove_color_objects_type" value="" /&gt; 
  &lt;/export&gt;    
&lt;/config&gt;</content>
                                 <includedConfigs/>
                                 <inclusionCode>0789602c-ca25-45e8-b6ac-196145c89d33</inclusionCode>
                                 <jsonParams>{"s3_bucket_name":"public","ocr_type":"tood","cache_datastore":"ocr_cache_1","export_format":"xmlForCorrectedImage","document_language":"English","ocr_xml_char_recognition":"true","allowed_region_types":"BT_Table|BT_Text"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>ETL</name>
                                       <private>false</private>
                                       <publicId>0ef23179-3fa8-4750-86ca-f6da84f6e16d</publicId>
                                    </category>
                                    <contentType>NORMAL</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>[TOOD+Standard] Settings Use Case</name>
                                    <publicId>3680e631-0b78-47aa-a4d7-409ddc7bceb8</publicId>
                                    <version>
                                       <componentUuid>e579f473-c4ea-45a4-923f-972b5e9da835</componentUuid>
                                       <incrementalVersion>1.39</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-06-11T14:00:55Z</lastModified>
                                       <versionUuid>46e66ca9-8619-4e71-9a1e-36d53ae6a81c</versionUuid>
                                    </version>
                                    <answers>
                                       <answer>
                                          <allowNA>false</allowNA>
                                          <answer>S3 bucket</answer>
                                          <answerCode>s3_bucket_name</answerCode>
                                          <answerHtml/>
                                          <answerTypeObject>
                                             <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                             <code>FREE_TEXT</code>
                                             <description/>
                                             <optionsAvailable>false</optionsAvailable>
                                             <showDefaultValue>true</showDefaultValue>
                                             <showForFieldScheme>true</showForFieldScheme>
                                             <showForHumanTask>true</showForHumanTask>
                                             <showForMachineConfig>true</showForMachineConfig>
                                             <title>Free Text</title>
                                             <valueType>SINGLEVALUE</valueType>
                                          </answerTypeObject>
                                          <appendDataStoreOptions>false</appendDataStoreOptions>
                                          <autocompleteField>false</autocompleteField>
                                          <constantable>false</constantable>
                                          <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                          <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                          <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                          <lastModified>2018-05-14T14:46:32Z</lastModified>
                                          <letCustomValues>false</letCustomValues>
                                          <manualField>false</manualField>
                                          <multiValue>false</multiValue>
                                          <percentRequired>false</percentRequired>
                                          <range>false</range>
                                          <required>true</required>
                                          <sequenceNumber>1</sequenceNumber>
                                          <useBlocks>false</useBlocks>
                                          <useEmptyCell>false</useEmptyCell>
                                       </answer>
                                       <answer>
                                          <allowNA>false</allowNA>
                                          <answer>OCR Type</answer>
                                          <answerCode>ocr_type</answerCode>
                                          <answerHtml/>
                                          <answerTypeObject>
                                             <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                             <code>SELECT_ONE</code>
                                             <description/>
                                             <optionsAvailable>true</optionsAvailable>
                                             <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                             <showDefaultValue>true</showDefaultValue>
                                             <showForFieldScheme>true</showForFieldScheme>
                                             <showForHumanTask>true</showForHumanTask>
                                             <showForMachineConfig>true</showForMachineConfig>
                                             <title>Select One</title>
                                             <valueType>SINGLEVALUE</valueType>
                                          </answerTypeObject>
                                          <appendDataStoreOptions>false</appendDataStoreOptions>
                                          <autocompleteField>false</autocompleteField>
                                          <category/>
                                          <constantable>false</constantable>
                                          <defaultValue/>
                                          <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                          <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                          <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                          <htmlClasses/>
                                          <lastModified>2018-05-29T12:12:05Z</lastModified>
                                          <letCustomValues>false</letCustomValues>
                                          <manualField>false</manualField>
                                          <multiValue>false</multiValue>
                                          <options>Standard=standard|TOOD=tood</options>
                                          <percentRequired>false</percentRequired>
                                          <range>false</range>
                                          <required>true</required>
                                          <sequenceNumber>2</sequenceNumber>
                                          <shuffle>false</shuffle>
                                          <useBlocks>false</useBlocks>
                                          <useEmptyCell>false</useEmptyCell>
                                       </answer>
                                       <answer>
                                          <allowNA>false</allowNA>
                                          <answer>OCR cache datastore</answer>
                                          <answerCode>cache_datastore</answerCode>
                                          <answerHtml/>
                                          <answerTypeObject>
                                             <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                             <code>FREE_TEXT</code>
                                             <description/>
                                             <optionsAvailable>false</optionsAvailable>
                                             <showDefaultValue>true</showDefaultValue>
                                             <showForFieldScheme>true</showForFieldScheme>
                                             <showForHumanTask>true</showForHumanTask>
                                             <showForMachineConfig>true</showForMachineConfig>
                                             <title>Free Text</title>
                                             <valueType>SINGLEVALUE</valueType>
                                          </answerTypeObject>
                                          <appendDataStoreOptions>false</appendDataStoreOptions>
                                          <autocompleteField>false</autocompleteField>
                                          <constantable>false</constantable>
                                          <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                          <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                          <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                          <lastModified>2018-05-29T12:12:05Z</lastModified>
                                          <letCustomValues>false</letCustomValues>
                                          <manualField>false</manualField>
                                          <multiValue>false</multiValue>
                                          <percentRequired>false</percentRequired>
                                          <range>false</range>
                                          <required>true</required>
                                          <sequenceNumber>3</sequenceNumber>
                                          <useBlocks>false</useBlocks>
                                          <useEmptyCell>false</useEmptyCell>
                                       </answer>
                                       <answer>
                                          <allowNA>false</allowNA>
                                          <answer>Export Format</answer>
                                          <answerCode>export_format</answerCode>
                                          <answerHtml>For Standard OCR type only.&lt;br /&gt;You can use maximum 3 types at once.</answerHtml>
                                          <answerTypeObject>
                                             <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                             <code>SELECT_MULTI</code>
                                             <description/>
                                             <optionsAvailable>true</optionsAvailable>
                                             <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                             <showDefaultValue>true</showDefaultValue>
                                             <showForFieldScheme>true</showForFieldScheme>
                                             <showForHumanTask>true</showForHumanTask>
                                             <showForMachineConfig>true</showForMachineConfig>
                                             <title>Select Multi</title>
                                             <valueSeparator>PIPE</valueSeparator>
                                             <valueType>MULTIVALUE</valueType>
                                          </answerTypeObject>
                                          <appendDataStoreOptions>false</appendDataStoreOptions>
                                          <autocompleteField>false</autocompleteField>
                                          <constantable>false</constantable>
                                          <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                          <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                          <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                          <lastModified>2018-05-29T12:12:05Z</lastModified>
                                          <letCustomValues>false</letCustomValues>
                                          <manualField>false</manualField>
                                          <multiValue>false</multiValue>
                                          <options>html=html|pdfSearchable=pdfSearchable|txt=txt|xml=xml|xmlForCorrectedImage=xmlForCorrectedImage</options>
                                          <percentRequired>false</percentRequired>
                                          <range>false</range>
                                          <required>false</required>
                                          <sequenceNumber>4</sequenceNumber>
                                          <shuffle>false</shuffle>
                                          <useBlocks>false</useBlocks>
                                          <useEmptyCell>false</useEmptyCell>
                                       </answer>
                                       <answer>
                                          <allowNA>false</allowNA>
                                          <answer>Document language</answer>
                                          <answerCode>document_language</answerCode>
                                          <answerHtml>English (default).&lt;br /&gt;This parameter can contain several language names separated with commas, for example "English,French,German".</answerHtml>
                                          <answerTypeObject>
                                             <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                             <code>FREE_TEXT</code>
                                             <description/>
                                             <optionsAvailable>false</optionsAvailable>
                                             <showDefaultValue>true</showDefaultValue>
                                             <showForFieldScheme>true</showForFieldScheme>
                                             <showForHumanTask>true</showForHumanTask>
                                             <showForMachineConfig>true</showForMachineConfig>
                                             <title>Free Text</title>
                                             <valueType>SINGLEVALUE</valueType>
                                          </answerTypeObject>
                                          <appendDataStoreOptions>false</appendDataStoreOptions>
                                          <autocompleteField>false</autocompleteField>
                                          <constantable>false</constantable>
                                          <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                          <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                          <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                          <lastModified>2018-05-29T12:12:05Z</lastModified>
                                          <letCustomValues>false</letCustomValues>
                                          <manualField>false</manualField>
                                          <multiValue>false</multiValue>
                                          <percentRequired>false</percentRequired>
                                          <range>false</range>
                                          <required>false</required>
                                          <sequenceNumber>5</sequenceNumber>
                                          <useBlocks>false</useBlocks>
                                          <useEmptyCell>false</useEmptyCell>
                                       </answer>
                                       <answer>
                                          <allowNA>false</allowNA>
                                          <answer>Switch for CharPosition option</answer>
                                          <answerCode>ocr_xml_char_recognition</answerCode>
                                          <answerHtml/>
                                          <answerTypeObject>
                                             <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                             <code>SELECT_ONE</code>
                                             <description/>
                                             <optionsAvailable>true</optionsAvailable>
                                             <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                             <showDefaultValue>true</showDefaultValue>
                                             <showForFieldScheme>true</showForFieldScheme>
                                             <showForHumanTask>true</showForHumanTask>
                                             <showForMachineConfig>true</showForMachineConfig>
                                             <title>Select One</title>
                                             <valueType>SINGLEVALUE</valueType>
                                          </answerTypeObject>
                                          <appendDataStoreOptions>false</appendDataStoreOptions>
                                          <autocompleteField>false</autocompleteField>
                                          <constantable>false</constantable>
                                          <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                          <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                          <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                          <lastModified>2018-05-29T12:12:05Z</lastModified>
                                          <letCustomValues>false</letCustomValues>
                                          <manualField>false</manualField>
                                          <multiValue>false</multiValue>
                                          <options>false=false|true=true</options>
                                          <percentRequired>false</percentRequired>
                                          <range>false</range>
                                          <required>false</required>
                                          <sequenceNumber>6</sequenceNumber>
                                          <shuffle>false</shuffle>
                                          <useBlocks>false</useBlocks>
                                          <useEmptyCell>false</useEmptyCell>
                                       </answer>
                                       <answer>
                                          <allowNA>false</allowNA>
                                          <answer>Change DPI</answer>
                                          <answerCode>change_dpi</answerCode>
                                          <answerHtml>From 50 to 400</answerHtml>
                                          <answerTypeObject>
                                             <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                             <code>FREE_TEXT</code>
                                             <description/>
                                             <optionsAvailable>false</optionsAvailable>
                                             <showDefaultValue>true</showDefaultValue>
                                             <showForFieldScheme>true</showForFieldScheme>
                                             <showForHumanTask>true</showForHumanTask>
                                             <showForMachineConfig>true</showForMachineConfig>
                                             <title>Free Text</title>
                                             <valueType>SINGLEVALUE</valueType>
                                          </answerTypeObject>
                                          <appendDataStoreOptions>false</appendDataStoreOptions>
                                          <autocompleteField>false</autocompleteField>
                                          <constantable>false</constantable>
                                          <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                          <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                          <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                          <lastModified>2018-06-08T14:47:59Z</lastModified>
                                          <letCustomValues>false</letCustomValues>
                                          <manualField>false</manualField>
                                          <multiValue>false</multiValue>
                                          <percentRequired>false</percentRequired>
                                          <range>false</range>
                                          <required>false</required>
                                          <sequenceNumber>7</sequenceNumber>
                                          <useBlocks>false</useBlocks>
                                          <useEmptyCell>false</useEmptyCell>
                                       </answer>
                                       <answer>
                                          <allowNA>false</allowNA>
                                          <answer>Invert Image</answer>
                                          <answerCode>invert_image</answerCode>
                                          <answerHtml/>
                                          <answerTypeObject>
                                             <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                             <code>SELECT_ONE</code>
                                             <description/>
                                             <optionsAvailable>true</optionsAvailable>
                                             <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                             <showDefaultValue>true</showDefaultValue>
                                             <showForFieldScheme>true</showForFieldScheme>
                                             <showForHumanTask>true</showForHumanTask>
                                             <showForMachineConfig>true</showForMachineConfig>
                                             <title>Select One</title>
                                             <valueType>SINGLEVALUE</valueType>
                                          </answerTypeObject>
                                          <appendDataStoreOptions>false</appendDataStoreOptions>
                                          <autocompleteField>false</autocompleteField>
                                          <constantable>false</constantable>
                                          <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                          <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                          <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                          <lastModified>2018-06-08T14:47:59Z</lastModified>
                                          <letCustomValues>false</letCustomValues>
                                          <manualField>false</manualField>
                                          <multiValue>false</multiValue>
                                          <options>false=false|true=true</options>
                                          <percentRequired>false</percentRequired>
                                          <range>false</range>
                                          <required>false</required>
                                          <sequenceNumber>8</sequenceNumber>
                                          <shuffle>false</shuffle>
                                          <useBlocks>false</useBlocks>
                                          <useEmptyCell>false</useEmptyCell>
                                       </answer>
                                       <answer>
                                          <allowNA>false</allowNA>
                                          <answer>Discard Color Image</answer>
                                          <answerCode>discard_color_image</answerCode>
                                          <answerHtml/>
                                          <answerTypeObject>
                                             <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                             <code>SELECT_ONE</code>
                                             <description/>
                                             <optionsAvailable>true</optionsAvailable>
                                             <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                             <showDefaultValue>true</showDefaultValue>
                                             <showForFieldScheme>true</showForFieldScheme>
                                             <showForHumanTask>true</showForHumanTask>
                                             <showForMachineConfig>true</showForMachineConfig>
                                             <title>Select One</title>
                                             <valueType>SINGLEVALUE</valueType>
                                          </answerTypeObject>
                                          <appendDataStoreOptions>false</appendDataStoreOptions>
                                          <autocompleteField>false</autocompleteField>
                                          <constantable>false</constantable>
                                          <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                          <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                          <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                          <lastModified>2018-06-08T14:47:59Z</lastModified>
                                          <letCustomValues>false</letCustomValues>
                                          <manualField>false</manualField>
                                          <multiValue>false</multiValue>
                                          <options>false=false|true=true</options>
                                          <percentRequired>false</percentRequired>
                                          <range>false</range>
                                          <required>false</required>
                                          <sequenceNumber>9</sequenceNumber>
                                          <shuffle>false</shuffle>
                                          <useBlocks>false</useBlocks>
                                          <useEmptyCell>false</useEmptyCell>
                                       </answer>
                                       <answer>
                                          <allowNA>false</allowNA>
                                          <answer>Remove Color Objects</answer>
                                          <answerCode>remove_color_objects</answerCode>
                                          <answerHtml/>
                                          <answerTypeObject>
                                             <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                             <code>SELECT_ONE</code>
                                             <description/>
                                             <optionsAvailable>true</optionsAvailable>
                                             <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                             <showDefaultValue>true</showDefaultValue>
                                             <showForFieldScheme>true</showForFieldScheme>
                                             <showForHumanTask>true</showForHumanTask>
                                             <showForMachineConfig>true</showForMachineConfig>
                                             <title>Select One</title>
                                             <valueType>SINGLEVALUE</valueType>
                                          </answerTypeObject>
                                          <appendDataStoreOptions>false</appendDataStoreOptions>
                                          <autocompleteField>false</autocompleteField>
                                          <constantable>false</constantable>
                                          <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                          <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                          <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                          <lastModified>2018-06-08T14:47:59Z</lastModified>
                                          <letCustomValues>false</letCustomValues>
                                          <manualField>false</manualField>
                                          <multiValue>false</multiValue>
                                          <options>Blue=Blue|Green=Green|Red=Red|Yellow=Yellow</options>
                                          <percentRequired>false</percentRequired>
                                          <range>false</range>
                                          <required>false</required>
                                          <sequenceNumber>10</sequenceNumber>
                                          <shuffle>false</shuffle>
                                          <useBlocks>false</useBlocks>
                                          <useEmptyCell>false</useEmptyCell>
                                       </answer>
                                       <answer>
                                          <allowNA>false</allowNA>
                                          <answer>Remove Color Objects Type</answer>
                                          <answerCode>remove_color_objects_type</answerCode>
                                          <answerHtml/>
                                          <answerTypeObject>
                                             <answerTypeGroup>SELECT_FROM_LIST</answerTypeGroup>
                                             <code>SELECT_ONE</code>
                                             <description/>
                                             <optionsAvailable>true</optionsAvailable>
                                             <optionsDescription>Provide options for the answer using key=value format. For example, Option Name1=value1 or Option Name2=value2.</optionsDescription>
                                             <showDefaultValue>true</showDefaultValue>
                                             <showForFieldScheme>true</showForFieldScheme>
                                             <showForHumanTask>true</showForHumanTask>
                                             <showForMachineConfig>true</showForMachineConfig>
                                             <title>Select One</title>
                                             <valueType>SINGLEVALUE</valueType>
                                          </answerTypeObject>
                                          <appendDataStoreOptions>false</appendDataStoreOptions>
                                          <autocompleteField>false</autocompleteField>
                                          <constantable>false</constantable>
                                          <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                          <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                          <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                          <lastModified>2018-06-08T14:47:59Z</lastModified>
                                          <letCustomValues>false</letCustomValues>
                                          <manualField>false</manualField>
                                          <multiValue>false</multiValue>
                                          <options>Background=Background|Full=Full|Stamp=Stamp</options>
                                          <percentRequired>false</percentRequired>
                                          <range>false</range>
                                          <required>false</required>
                                          <sequenceNumber>11</sequenceNumber>
                                          <shuffle>false</shuffle>
                                          <useBlocks>false</useBlocks>
                                          <useEmptyCell>false</useEmptyCell>
                                       </answer>
                                       <answer>
                                          <allowNA>false</allowNA>
                                          <answer>Custom Regions</answer>
                                          <answerCode>custom_regions</answerCode>
                                          <answerHtml/>
                                          <answerTypeObject>
                                             <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                             <code>FREE_TEXT</code>
                                             <description/>
                                             <optionsAvailable>false</optionsAvailable>
                                             <showDefaultValue>true</showDefaultValue>
                                             <showForFieldScheme>true</showForFieldScheme>
                                             <showForHumanTask>true</showForHumanTask>
                                             <showForMachineConfig>true</showForMachineConfig>
                                             <title>Free Text</title>
                                             <valueType>SINGLEVALUE</valueType>
                                          </answerTypeObject>
                                          <appendDataStoreOptions>false</appendDataStoreOptions>
                                          <autocompleteField>false</autocompleteField>
                                          <constantable>false</constantable>
                                          <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                          <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                          <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                          <lastModified>2018-06-08T14:47:59Z</lastModified>
                                          <letCustomValues>false</letCustomValues>
                                          <manualField>false</manualField>
                                          <multiValue>false</multiValue>
                                          <percentRequired>false</percentRequired>
                                          <range>false</range>
                                          <required>false</required>
                                          <sequenceNumber>12</sequenceNumber>
                                          <useBlocks>false</useBlocks>
                                          <useEmptyCell>false</useEmptyCell>
                                       </answer>
                                    </answers>
                                    <machineWorkSettingType>ETL</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
  	 &lt;export include-original-data="true"&gt;
       &lt;single-column name="s3_bucket_name" value="{{s3_bucket_name}}"/&gt;
       &lt;single-column name="ocr_type" value="{{ocr_type}}" /&gt; 
       &lt;single-column name="cache_datastore" value="{{cache_datastore}}" /&gt; 
       &lt;single-column name="export_format" value="{{export_format}}" /&gt;
       &lt;single-column name="document_language" value="{{document_language}}" /&gt;
       &lt;single-column name="ocr_xml_char_recognition" value="{{ocr_xml_char_recognition}}" /&gt; 
       &lt;single-column name="custom_regions" value="{{custom_regions}}" /&gt; 
       &lt;single-column name="change_dpi" value="{{change_dpi}}" /&gt; 
       &lt;single-column name="invert_image" value="{{invert_image}}" /&gt; 
       &lt;single-column name="discard_color_image" value="{{discard_color_image}}" /&gt; 
       &lt;single-column name="remove_color_objects" value="{{remove_color_objects}}" /&gt; 
       &lt;single-column name="remove_color_objects_type" value="{{remove_color_objects_type}}" /&gt; 
  &lt;/export&gt;    
&lt;/config&gt;</content>
                                       <name>[TOOD+Standard] Settings Template</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>3c6a1028-b037-4b13-b925-5b23fd0c89dd</uuid>
                                       <version>
                                          <componentUuid>6c311f0d-988b-4163-9ec3-bf6e887bed53</componentUuid>
                                          <incrementalVersion>1.16</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2018-06-08T14:47:59Z</lastModified>
                                          <versionUuid>2d2883bc-0447-4d8d-a1ad-c68aec7af215</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>ETL</machineWorkSettingType>
                                 <name>OCR Settings</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
  	 &lt;export include-original-data="true"&gt;
       &lt;single-column name="s3_bucket_name" value="{{s3_bucket_name}}"/&gt;
       &lt;single-column name="ocr_type" value="{{ocr_type}}" /&gt; 
       &lt;single-column name="cache_datastore" value="{{cache_datastore}}" /&gt; 
       &lt;single-column name="export_format" value="{{export_format}}" /&gt;
       &lt;single-column name="document_language" value="{{document_language}}" /&gt;
       &lt;single-column name="ocr_xml_char_recognition" value="{{ocr_xml_char_recognition}}" /&gt; 
       &lt;single-column name="allowed_region_types" value="{{allowed_region_types}}" /&gt; 
       &lt;single-column name="custom_regions" value="{{custom_regions}}" /&gt; 
       &lt;single-column name="change_dpi" value="{{change_dpi}}" /&gt; 
       &lt;single-column name="invert_image" value="{{invert_image}}" /&gt; 
       &lt;single-column name="discard_color_image" value="{{discard_color_image}}" /&gt; 
       &lt;single-column name="remove_color_objects" value="{{remove_color_objects}}" /&gt; 
       &lt;single-column name="remove_color_objects_type" value="{{remove_color_objects_type}}" /&gt; 
  &lt;/export&gt;    
&lt;/config&gt;</content>
                                    <name>[TOOD+Standard] Settings Template</name>
                                    <origination>CREATED_AUTOMATICALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>MACHINE</type>
                                    <uuid>11e3f927-99e7-45cf-aad7-9af97da5a484</uuid>
                                    <version>
                                       <componentUuid>3014722e-58ba-45b4-aef0-7124d2e2d18f</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-06-08T14:38:56Z</lastModified>
                                       <versionUuid>5f368cab-238d-49bf-a061-f0bc6861c04b</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>0789602c-ca25-45e8-b6ac-196145c89d33</uuid>
                                 <version>
                                    <componentUuid>8defde52-5736-40d4-8faf-c473ecd825af</componentUuid>
                                    <incrementalVersion>1.5</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-06-11T14:00:55Z</lastModified>
                                    <versionUuid>695177c0-9199-4065-b516-f62ce8db7599</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>OCR Settings</title>
                              <type>SINGLE</type>
                              <uuid>a0f4bfa8-eab4-4402-bad9-504be172fc90</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>7d2ecf17-62a1-4c83-beff-1067a57d3a28</componentUuid>
                                 <incrementalVersion>1.5</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-06-11T14:01:40Z</lastModified>
                                 <versionUuid>fd5c71f2-4dcb-4a6d-950c-7b197a66641e</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>1</stepIndex>
                           <stepPosition>START</stepPosition>
                           <uuid>80737c88-5ef0-4229-b793-7855eaac93ce</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content>#RuleContext.APPROVE_ALL_RULE</content>
                              <name>Approve All</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>73d56933-6b36-458e-b032-4fc270a6416a</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to make request to the OCR api, with our input parameters , but before, get one OCR taskId for all pages of document and make valid OCR api URL.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="java"&gt;

	&lt;!-- reading pNG from S3 --&gt;
	&lt;script&gt;&lt;![CDATA[
		import org.json.XML;
		import java.util.List;
		import java.util.ArrayList;
		import org.json.JSONObject;
		import org.json.JSONArray;
		import com.freedomoss.workfusion.utils.gson.GsonUtils;

		static String getJSONValue(String jsonString, String key) {
			try{
				JSONObject json = new JSONObject(jsonString);
				return json.get(key).get("directUrl").toString();
			} catch (Exception e){
				return "";
			}
		}
	]]&gt;&lt;/script&gt;
  
	&lt;var-def name="jsonSize"&gt;
		&lt;var name="pages" /&gt;
	&lt;/var-def&gt;
  
	&lt;while condition="true" maxloops="${jsonSize.toInt()}" index="i"&gt;
		&lt;var-def name="jsonKey"&gt;
			&lt;template&gt;fileList-${i.toInt()}&lt;/template&gt;
		&lt;/var-def&gt;
		&lt;!-- reading pNG from S3 --&gt;
		&lt;var-def name="jsonValue-${i}"&gt;
			&lt;script return="getJSONValue(json_file_urls.toString(), jsonKey.toString())" /&gt;
		&lt;/var-def&gt;
	&lt;/while&gt;

	&lt;var-def name="pagesList"&gt;
		&lt;while condition="true" maxloops="${jsonSize.toInt()}" index="i"&gt;
			&lt;var name="jsonValue-${i}" /&gt;
		&lt;/while&gt;
	&lt;/var-def&gt;

  	&lt;var-def name="ocr_url"&gt;
  		&lt;var-global name="ocr_url"/&gt;
  	&lt;/var-def&gt;
  
    &lt;var-def name="ocr_username"&gt;
  		&lt;var-global name="ocr_username"/&gt;
  	&lt;/var-def&gt;
  
    &lt;var-def name="ocr_password"&gt;
  		&lt;var-global name="ocr_password"/&gt;
  	&lt;/var-def&gt;
  
  	&lt;var-def name="submitImage"&gt;
      	&lt;case&gt;
			&lt;if condition='${ocr_username.toString().isEmpty() || ocr_password.toString().isEmpty()}'&gt;
				&lt;http url="${ocr_url}/submitImage" method="post" multipart="true"&gt;
					&lt;http-param name="file" isfile="true"&gt;
						&lt;http url="${original_document_url}" /&gt;
					&lt;/http-param&gt;
				&lt;/http&gt;
			&lt;/if&gt;
          	&lt;else&gt;
            	&lt;http url="${ocr_url}/submitImage" method="post" multipart="true" username="${ocr_username.toString()}" password="${ocr_password.toString()}"&gt;
					&lt;http-param name="file" isfile="true"&gt;
						&lt;http url="${original_document_url}" /&gt;
					&lt;/http-param&gt;
				&lt;/http&gt;
          	&lt;/else&gt;
		&lt;/case&gt;
	&lt;/var-def&gt;
  	
	&lt;var-def name="taskId"&gt;
		&lt;xpath expression="string(//response/task/@id)"&gt;
			&lt;var name="submitImage" /&gt;
		&lt;/xpath&gt;
	&lt;/var-def&gt;
  
  	&lt;case&gt;
		&lt;if condition="${pagesList.toList().size() &amp;gt; 1}"&gt;
			&lt;loop item="pagesListElement"&gt;
				&lt;list&gt;
					&lt;var name="pagesList" /&gt;
				&lt;/list&gt;
				&lt;body&gt;
                  	&lt;http url="${ocr_url}/submitImage" method="post" multipart="true"&gt;
						&lt;http-param name="file" isfile="true"&gt;
							&lt;http url="${pagesListElement}" /&gt;
						&lt;/http-param&gt;
                      	&lt;http-param name="taskId" isfile="${taskId}" /&gt;
					&lt;/http&gt;
                  &lt;/body&gt;
			&lt;/loop&gt;
		&lt;/if&gt;
	&lt;/case&gt;
  
  	&lt;script&gt;&lt;![CDATA[
		//-------------------------------------------------------making processDocument url-------------------------------------------------------
		String url = ocr_url.toString() + "/processDocument?taskId=" + taskId.toString() + "&amp;exportFormat=" + no_cached_export_format.toString() + "&amp;language=" + document_language.toString() + "&amp;xml:writeRecognitionVariants=" + ocr_xml_char_recognition.toString() + "&amp;correctSkew=true&amp;correctOrientation=true&amp;allowedRegionTypes=" + allowed_region_types.toString() + "&amp;invertImage=" + invert_image.toString() + "&amp;discardColorImage=" + discard_color_image.toString() + "&amp;removeColorObjectsType=" + remove_color_objects_type.toString();
		StringBuilder process_document_url = new StringBuilder(url.toString());
		
		if( !custom_regions.toString().isEmpty()) {
			process_document_url.append("&amp;customRegions=" + custom_regions.toString());
		}

		if( !change_dpi.toString().isEmpty()) {
			process_document_url.append("&amp;changeDPI=" + change_dpi.toString());
		}

		if( !remove_color_objects.toString().isEmpty()) {
			process_document_url.append("&amp;removeColorObjects=" + remove_color_objects.toString());
		}
		sys.defineVariable("processDocumentUrl", process_document_url)
	]]&gt;&lt;/script&gt;
  
	&lt;var-def name="processDocument"&gt;
      	&lt;case&gt;
			&lt;if condition='${ocr_username.toString().isEmpty() || ocr_password.toString().isEmpty()}'&gt;
				&lt;http url="${processDocumentUrl.toString()}" method="get" /&gt;
			&lt;/if&gt;
          	&lt;else&gt;
            	&lt;http url="${processDocumentUrl.toString()}" method="get" username="${ocr_username.toString()}" password="${ocr_password.toString()}" /&gt;
          	&lt;/else&gt;
		&lt;/case&gt;
	&lt;/var-def&gt;
  
	&lt;export include-original-data="true"&gt;
		&lt;single-column name="ocr_task_id" value="${taskId}"/&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                 <description/>
                                 <includedConfigs/>
                                 <inclusionCode>244984e9-ae97-45d8-bea4-606c707c4e3e</inclusionCode>
                                 <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>BASIC</machineWorkSettingType>
                                 <name>[TOOD] OCR</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>244984e9-ae97-45d8-bea4-606c707c4e3e</uuid>
                                 <version>
                                    <componentUuid>e39c0408-4ef1-4448-a091-a4098ad921e4</componentUuid>
                                    <incrementalVersion>1.26</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-06-08T14:52:26Z</lastModified>
                                    <versionUuid>c0bd09e3-bfd0-4780-a3da-12e3cd12c2f3</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>[TOOD] OCR</title>
                              <type>SINGLE</type>
                              <uuid>964500c3-8ef6-4325-aa98-8a43a3d4355a</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>aa2d51d8-62b0-4114-bc55-856f662381bc</componentUuid>
                                 <incrementalVersion>1.10</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-06-11T14:01:40Z</lastModified>
                                 <versionUuid>22ced8d1-7aa7-4d55-acce-ff9c11acb938</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>2</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>a0970342-7ffe-4aec-8436-1bf83cf5da2c</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"Yes","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"cache_hit","value":"full","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'Yes' when cache_hit EQ 'full'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("cache_hit", "EQ", "full"));

    then
        $ctx.sendResultTo("Yes", $item);
end



# RuleOutcome.Definition={"outcomeId":"No","conditional":false,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[],"customConditions":[]}
rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                              <name>Cache hit?</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>eb4db687-5992-40a2-9272-0d482fa4afcf</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to look for OCR cache for each OCR export format by all input parameters, and if it full hits we go to last BP step, otherwise go to the OCR step.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;

	&lt;var-def name="document_link"&gt;
		&lt;template&gt;${sys.getVar("original_document_url")}&lt;/template&gt;
	&lt;/var-def&gt;

	&lt;script&gt;&lt;![CDATA[
		isUnsuccessfulStatusCode = {statusCode -&gt; return statusCode.toString().matches('^[45]\\d{2}')};
	]]&gt;&lt;/script&gt;

	&lt;try&gt;
		&lt;body&gt;
			&lt;var-def name="document"&gt;
				&lt;http url="${document_link}" /&gt;
			&lt;/var-def&gt;
		&lt;/body&gt;
		&lt;catch&gt;
		&lt;/catch&gt;
	&lt;/try&gt;

	&lt;case&gt;
		&lt;if condition="${isUnsuccessfulStatusCode(http.statusCode)}"&gt;
			&lt;try&gt;
				&lt;body&gt;
					&lt;var-def name="document_link"&gt;
						&lt;template&gt;${org.apache.commons.httpclient.util.URIUtil.encodeQuery(document_link.toString())}
						&lt;/template&gt;
					&lt;/var-def&gt;
					&lt;var-def name="document"&gt;
						&lt;http url="${document_link}" /&gt;
					&lt;/var-def&gt;
				&lt;/body&gt;
				&lt;catch&gt;
				&lt;/catch&gt;
			&lt;/try&gt;
		&lt;/if&gt;
	&lt;/case&gt;

	&lt;case&gt;
		&lt;if condition="${isUnsuccessfulStatusCode(http.statusCode)}"&gt;
			&lt;script&gt;&lt;![CDATA[
				throw new RuntimeException("Failed to fetch url: " + document_link + " status code: " + http.statusCode);
			]]&gt;&lt;/script&gt;
		&lt;/if&gt;
	&lt;/case&gt;

	&lt;var-def name="document_hash"&gt;
		&lt;template&gt;${sys.getVar("document_hash")}&lt;/template&gt;
	&lt;/var-def&gt;
	&lt;case&gt;
		&lt;if condition="${document_hash.toString().length() == 0}"&gt;
			&lt;var-def name="document_hash"&gt;
				&lt;script
					return="org.apache.commons.codec.digest.DigestUtils.md5Hex(document.toBinary())" /&gt;
			&lt;/var-def&gt;
		&lt;/if&gt;
	&lt;/case&gt;

	&lt;!-- If the datastore is missing --&gt;
	&lt;create-datastore name="${cache_datastore}"&gt;
		&lt;datastore-column name="key" /&gt;
		&lt;datastore-column name="ocr_type" /&gt;
		&lt;datastore-column name="export_format" /&gt;
		&lt;datastore-column name="document_language" /&gt;
		&lt;datastore-column name="ocr_xml_char_recognition" /&gt;
		&lt;datastore-column name="allowed_region_types" /&gt;
		&lt;datastore-column name="custom_regions" /&gt;
		&lt;datastore-column name="change_dpi" /&gt;
		&lt;datastore-column name="invert_image" /&gt;
		&lt;datastore-column name="discard_color_image" /&gt;
		&lt;datastore-column name="remove_color_objects" /&gt;
		&lt;datastore-column name="remove_color_objects_type" /&gt;
	&lt;/create-datastore&gt;

	&lt;script&gt;&lt;![CDATA[
		export_format_list = Arrays.asList(export_format.toString().split(","));
		sys.defineVariable("exportFormatList", export_format_list);

		no_cached_export_format_list = new ArrayList(export_format_list);

		List ocr_result_list = new ArrayList();
		sys.defineVariable("ocr_result_list", ocr_result_list);
	]]&gt;&lt;/script&gt;

	&lt;loop item="format"&gt;
		&lt;list&gt;
			&lt;var name="exportFormatList" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;var-def name="cachedRecord"&gt;
				&lt;datastore name="${cache_datastore}" max="1"&gt;
            		&lt;template&gt;
            			SELECT * FROM @this WHERE "key"='${document_hash}' AND "ocr_type"='${ocr_type}' AND "export_format"='${format}' AND "document_language"='${document_language}' AND "ocr_xml_char_recognition"='${ocr_xml_char_recognition}' AND "allowed_region_types"='${allowed_region_types}' AND "custom_regions"='${custom_regions}' AND "change_dpi"='${change_dpi}' AND "invert_image"='${invert_image}' AND "discard_color_image"='${discard_color_image}' AND "remove_color_objects"='${remove_color_objects}' AND "remove_color_objects_type"='${remove_color_objects_type}'    
          			&lt;/template&gt;
				&lt;/datastore&gt;
			&lt;/var-def&gt;
          
          	&lt;case&gt;
				&lt;if condition='${cachedRecord.toString().length() != 0}'&gt;
                  	&lt;var-def name="value"&gt;
                            &lt;xpath expression='/row/ocr_json/text()'&gt;
                                &lt;var name="cachedRecord"/&gt;
                            &lt;/xpath&gt;
                    &lt;/var-def&gt;
                  
					&lt;script&gt;&lt;![CDATA[
						no_cached_export_format_list.remove(format.toString());

						ocr_result_list.toList().add(new HashMap(new groovy.json.JsonSlurper().parseText(value.toString())));
					]]&gt;&lt;/script&gt;
				&lt;/if&gt;
			&lt;/case&gt;  
		&lt;/body&gt;
	&lt;/loop&gt;
  
  	&lt;script&gt;&lt;![CDATA[
		import com.google.gson.Gson;

		String no_cached_export_format = no_cached_export_format_list.toString().replaceAll("[\\[\\]\\s]","");
		sys.defineVariable("no_cached_export_format", no_cached_export_format);

		Gson gson = new Gson();
		String result_json = gson.toJson(ocr_result_list.toList());
		sys.defineVariable("cached_ocr_json", result_json);
	]]&gt;&lt;/script&gt;

	&lt;export include-original-data="true"&gt;
		&lt;single-column name="document_hash" value="${document_hash}" /&gt;
      	&lt;single-column name="no_cached_export_format" value="${no_cached_export_format}" /&gt;
      	&lt;case&gt;
            &lt;if condition='${no_cached_export_format_list.size() == export_format_list.size()}'&gt;
            	&lt;single-column name="cache_hit" value="none"/&gt;
            &lt;/if&gt;
          	&lt;if condition='${no_cached_export_format_list.size() == 0}'&gt;
            	&lt;single-column name="cache_hit" value="full"/&gt;
              	&lt;single-column name="ocr_failed" value="false"/&gt;
            &lt;/if&gt;
            &lt;else&gt;
                &lt;single-column name="cache_hit" value="half"/&gt;
            &lt;/else&gt;
        &lt;/case&gt;
      	&lt;single-column name="cached_ocr_json" value="${cached_ocr_json}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                 <description/>
                                 <includedConfigs/>
                                 <inclusionCode>df291882-d46b-46ec-906d-561e980b087a</inclusionCode>
                                 <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>BASIC</machineWorkSettingType>
                                 <name>Look for OCR cache</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>df291882-d46b-46ec-906d-561e980b087a</uuid>
                                 <version>
                                    <componentUuid>7cb14104-af75-43fe-aff5-86e9d8780b4f</componentUuid>
                                    <incrementalVersion>1.57</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-05-29T12:09:27Z</lastModified>
                                    <versionUuid>d7c0e6c1-003d-41f6-a818-38820304b421</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>Look for OCR cache</title>
                              <type>SINGLE</type>
                              <uuid>938e8c73-b9db-4d71-e755-e099d9e288de</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>1339b2d0-655f-4d34-9ce0-9808950f4bb2</componentUuid>
                                 <incrementalVersion>1.45</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-05-29T12:09:27Z</lastModified>
                                 <versionUuid>591f4595-4930-42dd-b370-dafd7a1bc3c8</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>3</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>40a34cbe-4583-411b-9942-b90f99d14b1b</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content>#RuleContext.APPROVE_ALL_RULE</content>
                              <name>Approve All</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>a082ef2c-3345-4d5e-9f1a-a410b83b9e36</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to get OCR result JSON and update it for comfortable using after.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;

	&lt;script&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		List&lt;Map&gt; cached_ocr_result_list = new JsonSlurper().parseText(cached_ocr_json.toString());
		sys.defineVariable("cached_ocr_result_list", cached_ocr_result_list);
		
		List&lt;Map&gt; ocr_result_list = new ArrayList();
		if( sys.isVariableDefined("ocr_json")) {
			ocr_result_list = new JsonSlurper().parseText(ocr_json.toString());
		}
		sys.defineVariable("ocr_result_list", ocr_result_list);

		Map&lt;String,Map&lt;String, String&gt;&gt; update_ocr_result_map = new HashMap();
		sys.defineVariable("update_ocr_result_map", update_ocr_result_map);
	]]&gt;&lt;/script&gt;
      
  	&lt;loop item="map"&gt;
		&lt;list&gt;
			&lt;var name="cached_ocr_result_list" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;script&gt;&lt;![CDATA[
				String ocr_export_format = map.getWrappedObject().get("ocr_export_format").toString();
				
				map.getWrappedObject().remove("original_document_name");
				map.getWrappedObject().remove("ocr_document_name");
				map.getWrappedObject().remove("ocr_raw_processed_document_name");
				map.getWrappedObject().remove("ocr_tood_document_name");
				
				update_ocr_result_map.getWrappedObject().put(ocr_export_format, map.getWrappedObject());
			]]&gt;&lt;/script&gt;
		&lt;/body&gt;
	&lt;/loop&gt;
  
	&lt;loop item="map"&gt;
		&lt;list&gt;
			&lt;var name="ocr_result_list" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;script&gt;&lt;![CDATA[
				String ocr_export_format = map.getWrappedObject().get("ocr_export_format").toString();
				
				map.getWrappedObject().remove("original_document_name");
				map.getWrappedObject().remove("ocr_document_name");
				map.getWrappedObject().remove("ocr_raw_processed_document_name");
				map.getWrappedObject().remove("ocr_tood_document_name");
				
				update_ocr_result_map.getWrappedObject().put(ocr_export_format, map.getWrappedObject());
			]]&gt;&lt;/script&gt;
		&lt;/body&gt;
	&lt;/loop&gt;

	&lt;script&gt;&lt;![CDATA[
		import com.google.gson.Gson;

		Gson gson = new Gson();
		String result_json = gson.toJson(update_ocr_result_map.getWrappedObject());
		sys.defineVariable("ocr_json", result_json);
	]]&gt;&lt;/script&gt;

	&lt;export include-original-data="true"&gt;
		&lt;single-column name="ocr_json" value="${ocr_json}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                 <description/>
                                 <includedConfigs/>
                                 <inclusionCode>b95b288a-a28e-4d24-95ce-ab48e9a243ed</inclusionCode>
                                 <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>BASIC</machineWorkSettingType>
                                 <name>Result JSON processing</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>b95b288a-a28e-4d24-95ce-ab48e9a243ed</uuid>
                                 <version>
                                    <componentUuid>d92b7eb5-89f2-40ac-9873-11f9c60a6349</componentUuid>
                                    <incrementalVersion>1.37</incrementalVersion>
                                    <lastInChain>false</lastInChain>
                                    <lastModified>2018-06-02T06:15:56Z</lastModified>
                                    <versionUuid>aadb154a-a9ec-4598-9f08-1638af11f1a0</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>Result JSON processing</title>
                              <type>SINGLE</type>
                              <uuid>b4d16240-d1a2-45fc-83d8-94f32844359a</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>2ea6bec4-e356-4a19-817d-9824e3bff92d</componentUuid>
                                 <incrementalVersion>1.17</incrementalVersion>
                                 <lastInChain>false</lastInChain>
                                 <lastModified>2018-06-02T06:15:56Z</lastModified>
                                 <versionUuid>95748ae4-cf4f-46ec-a32b-2b2bafa68aa9</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>4</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>470c022c-eaf0-475e-9f65-1c54cd763dae</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"TOOD","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"tood","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'TOOD' when ocr_type EQ 'tood'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "tood"));

    then
        $ctx.sendResultTo("TOOD", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"standard","operator":"EQ"}],"customConditions":[]}
rule "2. Send records to 'Standard' when ocr_type EQ 'standard'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "standard"));

    then
        $ctx.sendResultTo("Standard", $item);
end



rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                              <name>OCR Type</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>bb1e41ac-a264-4a0b-9b9d-b1e923bbfab5</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                 <description/>
                                 <includedConfigs/>
                                 <inclusionCode>076a16b2-8c1f-4dc1-bc0c-0f1603963316</inclusionCode>
                                 <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>BASIC</machineWorkSettingType>
                                 <name>GoTo OCR</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>076a16b2-8c1f-4dc1-bc0c-0f1603963316</uuid>
                                 <version>
                                    <componentUuid>0f2aeff6-0b70-4ce8-809c-155796e62792</componentUuid>
                                    <incrementalVersion>1.1</incrementalVersion>
                                    <lastInChain>false</lastInChain>
                                    <lastModified>2018-06-02T06:15:56Z</lastModified>
                                    <versionUuid>fabefed1-cd20-4d23-bd55-1cd2326fef1c</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>GoTo OCR</title>
                              <type>SINGLE</type>
                              <uuid>20ac7cba-c576-4f18-ba33-95ab0cf4b706</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>abe90e37-fcae-4031-94c0-30fa05b2f5d9</componentUuid>
                                 <incrementalVersion>1.1</incrementalVersion>
                                 <lastInChain>false</lastInChain>
                                 <lastModified>2018-06-02T06:15:56Z</lastModified>
                                 <versionUuid>54e35fe9-6a35-4b51-ab63-65ec3438fb8f</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>5</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>f03ce0f7-4f27-4d65-8ee3-795972086f6d</uuid>
                        </campaignMap>
                        <campaignMap>
                           <businessRule>
                              <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"TOOD","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"tood","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'TOOD' when ocr_type EQ 'tood'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "tood"));

    then
        $ctx.sendResultTo("TOOD", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"standard","operator":"EQ"}],"customConditions":[]}
rule "2. Send records to 'Standard' when ocr_type EQ 'standard'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "standard"));

    then
        $ctx.sendResultTo("Standard", $item);
end



rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                              <name>OCR Type</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>1acfbab9-e18e-4280-bfa5-ba3c20d5c9bf</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;

    &lt;var-def name="exportType"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_export_type")}'&gt;
                &lt;template&gt;${_sys_export_type}&lt;/template&gt;
            &lt;/if&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="exportColumns"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_export_columns")}'&gt;
                &lt;template&gt;${_sys_export_columns}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="columnNameCase"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_column_name_case")}'&gt;
                &lt;template&gt;${_sys_column_name_case}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;keep&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="dataOnly"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_data_only")}'&gt;
                &lt;template&gt;${_sys_data_only}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;true&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="datastoreName"&gt;
        &lt;script return="item.getWrappedObject().getRun().getDatastoreName()" /&gt;
    &lt;/var-def&gt;
    &lt;case&gt;
        &lt;if condition="${!datastoreName.isEmpty()}"&gt;
            &lt;insert-datastore   datastore-name="${datastoreName}" create="true"&gt;
                &lt;script return="hit_submission_data_item.getWrappedObject().getItemValueMap()"/&gt;
            &lt;/insert-datastore&gt;
        &lt;/if&gt;
    &lt;/case&gt;

    &lt;export include-original-data="true"
            export-type="${exportType}"
            export-columns="${exportColumns}"
            column-name-case="${columnNameCase}"
            data-only="${dataOnly}"&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                 <description>Default machine campaign for end step.</description>
                                 <includedConfigs/>
                                 <inclusionCode>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</inclusionCode>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <name>Final Results</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</uuid>
                                 <version>
                                    <componentUuid>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</componentUuid>
                                    <incrementalVersion>1.0</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-05-14T06:51:04Z</lastModified>
                                    <versionUuid>32d30d2f-5743-11e8-9976-0ae8ba3240ae</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>100</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Percents</streamValueType>
                              <title>Final Results</title>
                              <type>SINGLE</type>
                              <uuid>af4c8905-26dd-4120-b208-39ad3530ffc6</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>32519db2-5743-11e8-9976-0ae8ba3240ae</componentUuid>
                                 <incrementalVersion>1.0</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-05-14T06:51:04Z</lastModified>
                                 <versionUuid>32d326cf-5743-11e8-9976-0ae8ba3240ae</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>6</stepIndex>
                           <stepPosition>SUBEND</stepPosition>
                           <uuid>b9975f60-a792-4c4c-9075-21a5b56d8cc6</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content>#RuleContext.APPROVE_ALL_RULE</content>
                              <name>Approve All</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>31e74be0-f9d4-46a7-b092-1580e10c6c57</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>true</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <description>OCR XML with variants to viewable XML</description>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to make XSLT XML Enrichment with WORD and DIV tags processing for "row processed documents" from previous step, to prepare them for valid view on the TOOD HT, also put updated documents on S3 and update OCR JSON.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="java" charset="UTF-8"&gt;
  	
	&lt;script language="groovy"&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		List&lt;Map&gt; ocr_result_list = new JsonSlurper().parseText(ocr_json.toString());
		sys.defineVariable("ocr_result_list", ocr_result_list);

		List&lt;Map&gt; update_ocr_result_list = new ArrayList();
		sys.defineVariable("update_ocr_result_list", update_ocr_result_list);

		String ocr_document_name = ocr_result_list.get(0).get("ocr_document_name").toString();
		sys.defineVariable("ocr_document_name", ocr_document_name);

		String ocr_raw_processed_document_name = ocr_result_list.get(0).get("ocr_raw_processed_document_name").toString();
		sys.defineVariable("ocr_raw_processed_document_name", ocr_raw_processed_document_name);

		String ocr_document_format = ocr_result_list.get(0).get("ocr_document_format").toString();
		sys.defineVariable("ocr_document_format", ocr_document_format);
	]]&gt;&lt;/script&gt;
  
	&lt;var-def name="placeholder"&gt;
		&lt;template&gt;converted_pdf_link_PLACEHOLDER&lt;/template&gt;
	&lt;/var-def&gt;

  	&lt;var-def name="jsonKey"&gt;
		&lt;template&gt;fileList-1&lt;/template&gt;
	&lt;/var-def&gt;
  
	&lt;s3 bucket="${s3_bucket_name}"&gt;
		&lt;var-def name="xmlWordsDocument"&gt;
			&lt;s3-get name="${bp_run_id}/${document_uuid}/${ocr_raw_processed_document_name}.${ocr_document_format}" /&gt;
		&lt;/var-def&gt;
	&lt;/s3&gt;
  
	&lt;var-def name="imageLink"&gt;
		&lt;script return="getJSONValue(json_file_urls.toString(), jsonKey.toString())"&gt;&lt;![CDATA[
			import org.json.XML;
			import java.util.List;
			import java.util.ArrayList;
			import org.json.JSONObject;
			import org.json.JSONArray;
			import com.freedomoss.workfusion.utils.gson.GsonUtils;


			static String getJSONValue(String jsonString, String key) {
				try{
					JSONObject json = new JSONObject(jsonString);
					return json.get(key).get("directUrl").toString();
				} catch (Exception e){
					return "";
				}
			}

			public static String addImgTag(String xml, String placeholder, String fileUrl){
				return xml.replace(placeholder, fileUrl.substring(0, fileUrl.length()-5));
			}

		]]&gt;&lt;/script&gt;
	&lt;/var-def&gt;

&lt;!-- XSLT transformation
@date: 05/29/2018
@Author: Mikalai Yatskevich mikalai_yatskevich@epam.com
 v1.9.7
--&gt;
	&lt;var-def name="htmlWordsDocumentRaw"&gt;
		&lt;xslt&gt;
			&lt;xml&gt;
				&lt;var name="xmlWordsDocument" /&gt;
			&lt;/xml&gt;
			&lt;stylesheet&gt;&lt;template&gt;&lt;![CDATA[ 
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:wfocr="http://ocr.crowdcomputingsystems.com/xml/schema-v1.xml"&gt;
    &lt;xsl:output method="html" omit-xml-declaration="yes" media-type="text/html" indent="no"/&gt;
    &lt;xsl:variable name="currentHeight"&gt;
        &lt;xsl:value-of select="sum(//page/@height)"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="minimalFontHeight"&gt;
        &lt;xsl:value-of select="15"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="stopChars"&gt;
        &lt;xsl:value-of select='"&amp;apos;&amp;gt;&amp;lt;`’~""!@#$%^\*()_-=+[]{}¬;:,./?|“®«»—°| "'/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="stopCharsFirstWordInLine"&gt;
        &lt;xsl:value-of select='"&amp;apos;&amp;gt;&amp;lt;`’~""!@#$%^\*()_=+[]{}¬;:?|“®«»—°|"'/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="numberChars"&gt;
        &lt;xsl:value-of select="'1234567890'"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="numberSeparators"&gt;
        &lt;xsl:value-of select="'., '"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="dateSeparators"&gt;
        &lt;xsl:value-of select="'./-'"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:variable name="space"&gt;
        &lt;xsl:value-of select="' '"/&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:template match="wfocr:document"&gt;
        &lt;html&gt;
            &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;!-- Version 1.7 --&amp;gt;&lt;/xsl:text&gt;
            &lt;head&gt;
                &lt;style type="text/css"&gt;div.n {position:absolute;white-space:nowrap;text-align:left;vertical-align:bottom;letter-spacing:0px;word-spacing:0px;} div.rc {position:absolute;-ms-layout-flow: vertical-ideographic;writing-mode: vertical-lr;white-space:nowrap;} div.rcc {position:absolute;-ms-layout-flow: vertical-ideographic;writing-mode: vertical-rl;transform: rotate(180deg);white-space:nowrap;} div.t {position:absolute;white-space:nowrap;}&lt;/style&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;xsl:attribute name="style"&gt;width:&lt;xsl:value-of select="./page/@width"/&gt;px; height:&lt;xsl:value-of select="$currentHeight"/&gt;px; border: 1px solid black; background-repeat: no-repeat; font-family: 'Helvetica', 'Arial', sans-serif; padding: 0;
                &lt;/xsl:attribute&gt;
                &lt;document id="TOOD"&gt;
                    &lt;xsl:copy-of select="./@*"/&gt;
                    &lt;xsl:apply-templates select="./wfocr:page"/&gt;
                &lt;/document&gt;
            &lt;/body&gt;
        &lt;/html&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:page"&gt;
        &lt;page&gt;
            &lt;xsl:copy-of select="./@*"/&gt;
            &lt;xsl:variable name="pageHeight"&gt;
                &lt;xsl:value-of select="sum(preceding::*[@resolution]/@height)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="previousPagesCount"&gt;
                &lt;xsl:value-of select="count(preceding::*[@resolution])+1"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="src"&gt;
                &lt;xsl:value-of select="concat('converted_pdf_link_PLACEHOLDER',$previousPagesCount,'.png')"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;img src="&lt;/xsl:text&gt;
            &lt;xsl:value-of select="$src"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;" style="&lt;/xsl:text&gt;position:absolute;top:&lt;xsl:value-of select="$pageHeight"/&gt;px;width:&lt;xsl:value-of select="@width"/&gt;px; height:&lt;xsl:value-of select="@height"/&gt;px; opacity:0.1; margin-left: 0px; margin-top: 0px;
            &lt;xsl:text disable-output-escaping="yes"&gt;" &amp;gt;&amp;lt;/img&amp;gt;&lt;/xsl:text&gt;

            &lt;xsl:apply-templates select="./wfocr:block"/&gt;
        &lt;/page&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:block"&gt;
        &lt;xsl:choose&gt;
            &lt;xsl:when test="@blockType='Table'"&gt;
                &lt;table&gt;
                    &lt;tbody&gt;
                        &lt;xsl:apply-templates select="./wfocr:row"/&gt;
                    &lt;/tbody&gt;
                &lt;/table&gt;
            &lt;/xsl:when&gt;
            &lt;xsl:when test="@blockType='Text'"&gt;
                &lt;block&gt;
                    &lt;xsl:copy-of select="./@*"/&gt;
                    &lt;p&gt;
                        &lt;xsl:apply-templates select="./wfocr:text"/&gt;
                    &lt;/p&gt;
                &lt;/block&gt;
            &lt;/xsl:when&gt;
        &lt;/xsl:choose&gt;
        &lt;xsl:copy-of select="./separator"/&gt;
        &lt;xsl:copy-of select="./region"/&gt;
    &lt;/xsl:template&gt;
    &lt;xsl:template match="wfocr:row"&gt;

        &lt;tr&gt;
            &lt;xsl:apply-templates select="./wfocr:cell"/&gt;
        &lt;/tr&gt;
    &lt;/xsl:template&gt;
    &lt;xsl:template match="wfocr:cell"&gt;

        &lt;xsl:variable name="cellHeight"&gt;
            &lt;xsl:value-of select="@height"/&gt;
        &lt;/xsl:variable&gt;

        &lt;xsl:variable name="cellWidth"&gt;
            &lt;xsl:value-of select="@width"/&gt;
        &lt;/xsl:variable&gt;
        &lt;td&gt;
            &lt;xsl:attribute name="style"&gt;height:&lt;xsl:value-of select="$cellHeight"/&gt;px;width:&lt;xsl:value-of select="$cellWidth"/&gt;px;
            &lt;/xsl:attribute&gt;
            &lt;xsl:apply-templates select="./wfocr:text"/&gt;
        &lt;/td&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:text"&gt;
        &lt;text&gt;
            &lt;xsl:copy-of select="./@*"/&gt;
            &lt;xsl:apply-templates select="./wfocr:par"/&gt;
        &lt;/text&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:par"&gt;
        &lt;par&gt;
            &lt;xsl:copy-of select="./@*"/&gt;

            &lt;xsl:apply-templates select="./wfocr:line"/&gt;
        &lt;/par&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="wfocr:line"&gt;

        &lt;line&gt;
            &lt;xsl:copy-of select="./@*"/&gt;

            &lt;xsl:variable name="pageHeight"&gt;
                &lt;xsl:value-of select="number(sum(preceding::*[@resolution]/@height))"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineTop"&gt;
                &lt;xsl:value-of select="number(@t)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineBottom"&gt;
                &lt;xsl:value-of select="number(@b)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineRight"&gt;
                &lt;xsl:value-of select="number(@r)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineLeft"&gt;
                &lt;xsl:value-of select="number(@l)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineFirstCharacterLeft"&gt;
                &lt;xsl:value-of select="number(descendant::wfocr:charParams[@l][1]/@l)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="rotatedFontHeight"&gt;
                &lt;xsl:value-of select="number($lineRight - $lineLeft)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineHeightOld"&gt;
                &lt;xsl:value-of select="number($lineBottom - $lineTop)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="charBottoms"&gt;
                &lt;xsl:value-of select="number(sum(descendant::wfocr:charParams[string-length(normalize-space(text()))&gt;0]/@b))"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="charTops"&gt;
                &lt;xsl:value-of select="number(sum(descendant::wfocr:charParams[string-length(normalize-space(text()))&gt;0]/@t))"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="countElements"&gt;
                &lt;xsl:value-of select="number(count(descendant::wfocr:charParams[@b]))"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="middle"&gt;
                &lt;xsl:value-of select="ceiling($countElements div 2)"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="even"&gt;
                &lt;xsl:value-of select="not($countElements mod 2)"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="chosenElement"&gt;
                &lt;xsl:value-of select="count(descendant::wfocr:charParams[@b][@t]) div 10+1"/&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="lineHeightChar"&gt;
                &lt;xsl:for-each select="descendant::wfocr:charParams[@b][@t]"&gt;
                    &lt;xsl:sort data-type="number" select="string(number(./@b)-number(./@t))" order="descending"/&gt;
                    &lt;xsl:if test="position() = $middle"&gt;
                        &lt;xsl:value-of select="number(./@b)-number(./@t)"/&gt;
                    &lt;/xsl:if&gt;
                &lt;/xsl:for-each&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="totalCharHeight"&gt;
                &lt;xsl:value-of select="number($charBottoms)-number($charTops)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="charCount"&gt;
                &lt;xsl:value-of select="number(count(descendant::wfocr:charParams[string-length(normalize-space(text()))&gt;0]))"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineHeightComputed"&gt;
                &lt;xsl:choose&gt;
                    &lt;xsl:when test="number($lineHeightOld) div 2 &amp;gt; number($lineHeightChar)"&gt;
                        &lt;xsl:value-of select="number($lineHeightChar)"/&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:otherwise&gt;
                        &lt;xsl:value-of select="number($lineHeightOld)"/&gt;
                    &lt;/xsl:otherwise&gt;
                &lt;/xsl:choose&gt;
            &lt;/xsl:variable&gt;
            &lt;xsl:variable name="lineHeight"&gt;
                &lt;xsl:choose&gt;
                    &lt;xsl:when test="number($lineHeightComputed) &amp;lt; number($minimalFontHeight)"&gt;
                        &lt;xsl:value-of select="number($minimalFontHeight)"/&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:otherwise&gt;
                        &lt;xsl:value-of select="number($lineHeightComputed)"/&gt;
                    &lt;/xsl:otherwise&gt;
                &lt;/xsl:choose&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="fontHeight"&gt;
                &lt;xsl:value-of select="number($lineHeight)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="rotatedLineHeight"&gt;
                &lt;xsl:value-of select="number($lineRight) - number($lineLeft)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineRightValue"&gt;
                &lt;xsl:choose&gt;
                    &lt;xsl:when test="normalize-space(descendant::wfocr:charParams[not(@charConfidence)][1]/@r)!=NaN"&gt;
                        &lt;xsl:value-of select="number(descendant::wfocr:charParams[not(@charConfidence)][1]/@r)"/&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:otherwise&gt;
                        &lt;xsl:value-of select="number($lineRight)"/&gt;
                    &lt;/xsl:otherwise&gt;
                &lt;/xsl:choose&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="lineWidth"&gt;
                &lt;xsl:value-of select="number($lineRightValue) - number(@l)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;xsl:variable name="orientation"&gt;
                &lt;xsl:value-of disable-output-escaping="yes" select="normalize-space(ancestor::wfocr:text[@orientation]/@orientation)"/&gt;
            &lt;/xsl:variable&gt;

            &lt;formatting&gt;
                &lt;xsl:copy-of select="./@*"/&gt;

                &lt;xsl:variable name="sumConfidence"&gt;
                    &lt;xsl:value-of select="number(sum(descendant::wfocr:charParams[@charConfidence]/@charConfidence))"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="numNodes"&gt;
                    &lt;xsl:value-of select="number(count(descendant::wfocr:charParams[@charConfidence]/@charConfidence))"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:variable name="charConfidence"&gt;
                    &lt;xsl:value-of select="number($sumConfidence div $numNodes)"/&gt;
                &lt;/xsl:variable&gt;
                &lt;xsl:choose&gt;
                    &lt;xsl:when test="string-length(normalize-space($orientation))=0"&gt;
                        &lt;xsl:variable name="followingSpaceFirstWordInLine"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="(string-length(normalize-space(descendant::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1])) &amp;gt; 0)"&gt;
                                    &lt;xsl:value-of select="number(normalize-space(descendant::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1]))"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="$lineRightValue"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="followingStopCharFirstWordInLine"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="(string-length(normalize-space(descendant::wfocr:charParams[contains($stopCharsFirstWordInLine,normalize-space(self::*/text()))][1]/@l[1])) &amp;gt; 0)"&gt;
                                    &lt;xsl:value-of select="number(normalize-space(descendant::wfocr:charParams[contains($stopCharsFirstWordInLine,normalize-space(self::*/text()))][1]/@l[1]))"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="$lineRightValue"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="rightFirstWordInLine"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="number($followingSpaceFirstWordInLine) &amp;lt; number($followingStopCharFirstWordInLine)"&gt;
                                    &lt;xsl:value-of select="number($followingSpaceFirstWordInLine)"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="number($followingStopCharFirstWordInLine)"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="leftFirstWordInLine"&gt;
                            &lt;xsl:value-of select="$lineLeft"/&gt;
                        &lt;/xsl:variable&gt;

                        &lt;xsl:variable name="widthFirstWordInLine"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="string-length(normalize-space($rightFirstWordInLine))=0"&gt;
                                    &lt;xsl:value-of select="number($lineRight)-number($leftFirstWordInLine)"/&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="number($rightFirstWordInLine)-number($leftFirstWordInLine)"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:variable&gt;

                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)+number($lineHeight)"/&gt;" l="&lt;xsl:value-of select="number($lineFirstCharacterLeft)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                        &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineFirstCharacterLeft)"/&gt;px; width:&lt;xsl:value-of select="number($widthFirstWordInLine)"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;"&lt;xsl:text disable-output-escaping="yes"&gt; class="n"&amp;gt;&lt;/xsl:text&gt;
                        &lt;xsl:for-each select="descendant::wfocr:charParams"&gt;
                            &lt;xsl:variable name="charValue"&gt;
                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="rightCharValueThatCanBeEmpty"&gt;
                                &lt;xsl:value-of select="normalize-space(./following::wfocr:charParams[1]/text()[1])"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="rightCharValue"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length($rightCharValueThatCanBeEmpty)&gt;0"&gt;
                                        &lt;xsl:value-of select="$rightCharValueThatCanBeEmpty"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="'1'"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;

                            &lt;xsl:variable name="followingSpaceFst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="(string-length(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1])) &amp;gt; 0) and (not(contains($numberChars, $rightCharValue)))"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1]))"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingStopCharFst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="(string-length(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][not(contains($dateSeparators,normalize-space(self::*/text())))][1]/@l[1])) &amp;gt; 0) and (not(contains($numberChars, $rightCharValue)))"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][not(contains($dateSeparators,normalize-space(self::*/text())))][1]/@l[1]))"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;

                            &lt;xsl:variable name="followingSpaceFirst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="(string-length(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1])) &amp;gt; 0) and (not(contains($numberChars, $rightCharValue))) "&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="not
                                            ((number(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1])) &amp;lt; $lineRightValue) and
                                            ((number(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@t[1]))) &amp;gt; number(./@b)))"&gt;
                                                &lt;xsl:value-of select="number(normalize-space(following::wfocr:charParams[not(self::*[@charConfidence])][1]/@l[1]))"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineRightValue"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingStopCharFirst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="(string-length(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][not(contains($dateSeparators,normalize-space(self::*/text())))][1]/@l[1])) &amp;gt; 0)"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][not(contains($dateSeparators,normalize-space(self::*/text())))][1]/@l[1]))"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="$lineRightValue"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="right"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="number($followingSpaceFst) &amp;lt; number($followingStopCharFst)"&gt;
                                        &lt;xsl:value-of select="number($followingSpaceFst)"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="number($followingStopCharFst)"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="rightFst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="number($followingSpaceFirst) &amp;lt; number($followingStopCharFst)"&gt;
                                        &lt;xsl:value-of select="number($followingSpaceFirst)"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="number($followingStopCharFst)"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="left"&gt;
                                &lt;xsl:value-of select="number(./@r[1])"/&gt;
                            &lt;/xsl:variable&gt;

                            &lt;xsl:variable name="width"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length(normalize-space($right))=0"&gt;
                                        &lt;xsl:value-of select="number($lineRight)-number($left)"/&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="number($right)-number($left)"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="widthFst"&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="string-length(normalize-space($rightFst))=0"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="number($lineRight)-number($left) &amp;gt; 1"&gt;
                                                &lt;xsl:value-of select="number($lineRight)-number($left)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$width"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="number($rightFst)-number($left) &amp;gt; 1"&gt;
                                                &lt;xsl:value-of select="number($rightFst)-number($left)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$width"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                            &lt;/xsl:variable&gt;
                                &lt;xsl:variable name="isFirstCharInLine"&gt;
                                    &lt;xsl:choose&gt;
                                        &lt;xsl:when test="number($lineFirstCharacterLeft) = number(./@l[1])"&gt;
                                            &lt;xsl:value-of select="1"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:otherwise&gt;
                                            &lt;xsl:value-of select="0"/&gt;
                                        &lt;/xsl:otherwise&gt;
                                    &lt;/xsl:choose&gt;
                                &lt;/xsl:variable&gt;
                                &lt;xsl:variable name="leftCharValueThatCanBeEmpty"&gt;
                                    &lt;xsl:value-of select="normalize-space(./preceding::wfocr:charParams[1]/text()[1])"/&gt;
                                &lt;/xsl:variable&gt;
                                &lt;xsl:variable name="leftCharValue"&gt;
                                    &lt;xsl:choose&gt;
                                        &lt;xsl:when test="string-length($leftCharValueThatCanBeEmpty)&gt;0"&gt;
                                            &lt;xsl:value-of select="$leftCharValueThatCanBeEmpty"/&gt;
                                        &lt;/xsl:when&gt;
                                        &lt;xsl:otherwise&gt;
                                            &lt;xsl:value-of select="'1'"/&gt;
                                        &lt;/xsl:otherwise&gt;
                                    &lt;/xsl:choose&gt;
                                &lt;/xsl:variable&gt;

                                &lt;xsl:variable name="charRight"&gt;
                                    &lt;xsl:value-of select="./following-sibling::wfocr:charParams[1]/@l[1]"/&gt;
                                &lt;/xsl:variable&gt;
                                &lt;xsl:variable name="charLength"&gt;
                                    &lt;xsl:value-of select="string-length(normalize-space($charValue))"/&gt;
                                &lt;/xsl:variable&gt;
                                &lt;xsl:variable name="textValue"&gt;
                                    &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                &lt;/xsl:variable&gt;
                            &lt;xsl:variable name="followingSibling"&gt;
                                &lt;xsl:value-of select="normalize-space(following-sibling::wfocr:charParams[1]/text()[1])"/&gt;
                            &lt;/xsl:variable&gt;

                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="((((not($charValue) or contains($stopChars, $charValue)) ) or
                                    (contains($numberChars, $charValue) and not(contains($numberChars, $followingSibling)) and not(contains($stopChars, $followingSibling))) or
                                    (not(contains($numberChars, $charValue)) and not(contains($stopChars, $followingSibling)) and not(contains($numberSeparators, $charValue)) and not(contains($stopChars, $charValue)) and contains($numberChars,$rightCharValue) and (string-length($rightCharValueThatCanBeEmpty) &amp;gt; 0)) or
                                    (contains($numberChars, $leftCharValue) and not(contains($numberSeparators, $charValue)) and not(contains($numberChars,$charValue)) and contains($stopChars, $rightCharValue)) or
                                (contains($numberChars, $leftCharValue) and not(contains($numberChars, $charValue)) and contains($numberChars, $rightCharValue) and not(contains($stopChars, $charValue)) and not($isFirstCharInLine='1'))) ) and
                            (($charLength &amp;gt; 0 and not(contains($numberSeparators, $charValue))) or
                            ($charLength=0 and not(contains($numberChars, $leftCharValue) and contains($numberChars, $rightCharValue))) or
                            (($charLength &amp;gt; 0) and not(contains($numberSeparators, $charValue) and contains($numberChars, $leftCharValue) and contains($numberChars, $rightCharValue)))) and
                            (($charLength &amp;gt; 0 and not(contains($dateSeparators, $charValue))) or
                            ($charLength=0 and not(contains($numberChars, $leftCharValue) and contains($numberChars, $rightCharValue))) or
                            (($charLength &amp;gt; 0) and not(contains($dateSeparators, $charValue) and contains($numberChars, $leftCharValue) and contains($numberChars, $rightCharValue))))"&gt;

                                        &lt;xsl:variable name="followingSpace"&gt;
                                            &lt;xsl:choose&gt;
                                                &lt;xsl:when test="string-length(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1])) &amp;gt; 0"&gt;
                                                    &lt;xsl:value-of select="number(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1]))"/&gt;
                                                &lt;/xsl:when&gt;
                                                &lt;xsl:otherwise&gt;
                                                    &lt;xsl:value-of select="$lineRightValue"/&gt;
                                                &lt;/xsl:otherwise&gt;
                                            &lt;/xsl:choose&gt;
                                        &lt;/xsl:variable&gt;
                                        &lt;xsl:variable name="followingStopChar"&gt;
                                            &lt;xsl:choose&gt;
                                                &lt;xsl:when test="string-length(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][1]/@l[1])) &amp;gt; 0"&gt;
                                                    &lt;xsl:value-of select="number(normalize-space(following-sibling::wfocr:charParams[contains($stopChars,normalize-space(self::*/text()))][1]/@l[1]))"/&gt;
                                                &lt;/xsl:when&gt;
                                                &lt;xsl:otherwise&gt;
                                                    &lt;xsl:value-of select="$lineRightValue"/&gt;
                                                &lt;/xsl:otherwise&gt;
                                            &lt;/xsl:choose&gt;
                                        &lt;/xsl:variable&gt;
                                        &lt;xsl:if test="number($width) &amp;gt; -1"&gt;
                                            &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;
                                            &lt;xsl:if test="(string-length(normalize-space($charValue)) &amp;gt; 0)"&gt;

                                                                            &lt;word&gt;
                                                                                &lt;xsl:attribute name="t"&gt;
                                                                                    &lt;xsl:value-of select="number(./@t[1])"/&gt;
                                                                                &lt;/xsl:attribute&gt;
                                                                                &lt;xsl:attribute name="b"&gt;
                                                                                    &lt;xsl:value-of select="number(./@b[1])"/&gt;
                                                                                &lt;/xsl:attribute&gt;
                                                                                &lt;xsl:attribute name="l"&gt;
                                                                                    &lt;xsl:value-of select="number(./@l[1])"/&gt;
                                                                                &lt;/xsl:attribute&gt;
                                                                                &lt;xsl:attribute name="r"&gt;
                                                                                    &lt;xsl:value-of select="number(./@r[1])"/&gt;
                                                                                &lt;/xsl:attribute&gt;
                                                                                &lt;xsl:attribute name="isTab"&gt;
                                                                                    &lt;xsl:value-of select="'1'"/&gt;
                                                                                &lt;/xsl:attribute&gt;
                                                                                &lt;div&gt;
                                                                                    &lt;xsl:attribute name="style"&gt;top:&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number(./@l[1])"/&gt;px; width:&lt;xsl:value-of select="number(./@r[1])-number(./@l[1])"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;&lt;/xsl:attribute&gt;
                                                                                    &lt;xsl:attribute name="class"&gt;n&lt;/xsl:attribute&gt;
                                                                                    &lt;xsl:value-of select="normalize-space($charValue)"/&gt;
                                                                                &lt;/div&gt;
                                                                            &lt;/word&gt;
                                            &lt;/xsl:if&gt;
                                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)+number($lineHeight)"/&gt;" r="&lt;xsl:value-of select="number(./@r)+number($width)"/&gt;" l="&lt;xsl:value-of select="number(./@r)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                                        &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($lineTop+$pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number(./@r)"/&gt;px; width:&lt;xsl:value-of select="number($widthFst)"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;" &lt;xsl:text disable-output-escaping="yes"&gt; class="n"&amp;gt;&lt;/xsl:text&gt;
                                        &lt;/xsl:if&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
&lt;!--                            &lt;/xsl:if&gt;--&gt;
                        &lt;/xsl:for-each&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;
                    &lt;/xsl:when&gt;
                    &lt;xsl:when test="$orientation='RotatedClockwise'"&gt;
                        &lt;xsl:variable name="startBottom"&gt;
                            &lt;xsl:value-of select="number(descendant::*[not(self::*[@charConfidence])][1]/@t)"/&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="startTop"&gt;
                            &lt;xsl:value-of select="number(descendant::*[1]/@t)"/&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="startHeight"&gt;
                            &lt;xsl:value-of select="number($startBottom)-number($startTop)"/&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($startTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($pageHeight)+number($startBottom)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                        &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($startTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($startHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;"&lt;xsl:text disable-output-escaping="yes"&gt;class="rc"&amp;gt;&lt;/xsl:text&gt;
                        &lt;xsl:for-each select="descendant::wfocr:charParams"&gt;
                            &lt;xsl:variable name="charValue"&gt;
                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                            &lt;/xsl:variable&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="not($charValue) or contains($stopChars, $charValue)"&gt;

                                    &lt;xsl:variable name="followingSpace"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::*[not(self::wfocr:charParams[@charConfidence])][1]/@b))"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="followingStopChar"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::*[contains($stopChars,normalize-space(self::wfocr:charParams/text()))][1]/@b))"/&gt;
                                    &lt;/xsl:variable&gt;

                                    &lt;xsl:variable name="top"&gt;
                                        &lt;xsl:value-of select="number(./@b)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="bottom"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0) and (string-length($followingStopChar)=0) and string-length(normalize-space(following-sibling::wfocr:charParams[last()]/@b))=0"&gt;
                                                &lt;xsl:value-of select="$lineBottom"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0) and (string-length($followingStopChar)=0)"&gt;
                                                &lt;xsl:value-of select="normalize-space(following-sibling::wfocr:charParams[last()]/@b)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingStopChar)=0)"&gt;
                                                &lt;xsl:value-of select="$followingSpace"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0)"&gt;
                                                &lt;xsl:value-of select="$followingStopChar"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="number($followingSpace) &amp;lt; number($followingStopChar)"&gt;
                                                &lt;xsl:value-of select="$followingSpace"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="number($followingSpace) &amp;gt; number($followingStopChar)"&gt;
                                                &lt;xsl:value-of select="$followingStopChar"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="$lineBottom"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:variable&gt;

                                    &lt;xsl:variable name="height"&gt;
                                        &lt;xsl:value-of select="number($bottom)-number($top)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;

                                    &lt;word&gt;
                                        &lt;xsl:attribute name="t"&gt;
                                            &lt;xsl:value-of select="number(./@t)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="b"&gt;
                                            &lt;xsl:value-of select="number(./@b)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="l"&gt;
                                            &lt;xsl:value-of select="number(./@l)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="r"&gt;
                                            &lt;xsl:value-of select="number(./@r)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="isTab"&gt;
                                            &lt;xsl:value-of select="'1'"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;div&gt;
                                            &lt;xsl:attribute name="style"&gt;top:&lt;xsl:value-of select="number(./@t)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number(./@l)"/&gt;px; width:&lt;xsl:value-of select="number(./@r)-number(./@l)"/&gt;px; height:&lt;xsl:value-of select="number(./@b)-number(./@t)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;
                                            &lt;/xsl:attribute&gt;
                                            &lt;xsl:attribute name="class"&gt;rc&lt;/xsl:attribute&gt;
                                            &lt;xsl:value-of select="$charValue"/&gt;
                                        &lt;/div&gt;
                                    &lt;/word&gt;

                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($top)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($top)+number($pageHeight)+number($height)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                                    &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div onload="divSize(this)" style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($top)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($height)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;"
                                    &lt;xsl:text disable-output-escaping="yes"&gt; class="rc"&amp;gt;&lt;/xsl:text&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;

                        &lt;/xsl:for-each&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;

                    &lt;/xsl:when&gt;
                    &lt;xsl:when test="$orientation='RotatedCounterclockwise'"&gt;
                        &lt;xsl:variable name="startBottom"&gt;
                            &lt;xsl:value-of select="number(@b)"/&gt;
                        &lt;/xsl:variable&gt;
                        &lt;xsl:variable name="startTop"&gt;
                            &lt;xsl:value-of select="number(descendant::wfocr:charParams[1]/@b)"/&gt;
                        &lt;/xsl:variable&gt;

                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($startTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($pageHeight)+number($startBottom)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                        &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($startTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($startBottom)-number($startTop)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;"
                        &lt;xsl:text disable-output-escaping="yes"&gt;class="rcc"&amp;gt;&lt;/xsl:text&gt;
                        &lt;xsl:for-each select="descendant::wfocr:charParams"&gt;
                            &lt;xsl:variable name="charValue"&gt;
                                &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                            &lt;/xsl:variable&gt;

                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="not($charValue)or contains($stopChars, $charValue)"&gt;
                                    &lt;xsl:variable name="followingSpace"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::*[not(self::*[@charConfidence])][1]/@t[1]))"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="followingStopChar"&gt;
                                        &lt;xsl:value-of select="number(normalize-space(following-sibling::*[contains($stopChars,normalize-space(self::*/text()))][1]/@t[1]))"/&gt;
                                    &lt;/xsl:variable&gt;

                                    &lt;xsl:variable name="top"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0) and (string-length($followingStopChar)=0) and (string-length(normalize-space(following-sibling::*[last()]/@t[1]))&gt;0)"&gt;
                                                &lt;xsl:value-of select="normalize-space(following-sibling::*[last()][@t]/@t[1])"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingStopChar)=0) and (string-length($followingSpace)&gt;0)"&gt;
                                                &lt;xsl:value-of select="$followingSpace"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)=0) and (string-length($followingStopChar)&gt;0)"&gt;
                                                &lt;xsl:value-of select="$followingStopChar"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="(string-length($followingSpace)&gt;0) and ($followingSpace &amp;lt; $followingStopChar)"&gt;
                                                &lt;xsl:value-of select="$followingSpace"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:when test="string-length($followingStopChar)&gt;0"&gt;
                                                &lt;xsl:value-of select="$followingStopChar"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="0"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:variable&gt;

                                    &lt;xsl:variable name="bottom"&gt;
                                        &lt;xsl:value-of select="number(./@b)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="height"&gt;
                                        &lt;xsl:value-of select="number($bottom)-number($top)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;

                                    &lt;word&gt;
                                        &lt;xsl:attribute name="t"&gt;
                                            &lt;xsl:value-of select="number(./@t)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="b"&gt;
                                            &lt;xsl:value-of select="number(./@b)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="l"&gt;
                                            &lt;xsl:value-of select="number(./@l)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;xsl:attribute name="r"&gt;
                                            &lt;xsl:value-of select="number(./@r)"/&gt;
                                        &lt;/xsl:attribute&gt;
                                        &lt;div&gt;
                                            &lt;xsl:attribute name="style"&gt;top:&lt;xsl:value-of select="number(./@t+$pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number(./@l)"/&gt;px; width:&lt;xsl:value-of select="number(./@r)-number(./@l)"/&gt;px; height:&lt;xsl:value-of select="number(./@b)-number(./@t)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;
                                            &lt;/xsl:attribute&gt;
                                            &lt;xsl:attribute name="class"&gt;rcc&lt;/xsl:attribute&gt;
                                            &lt;xsl:value-of select="$charValue"/&gt;
                                        &lt;/div&gt;
                                    &lt;/word&gt;

                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($top)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($top)+number($pageHeight)+number($height)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                                    &lt;xsl:value-of select="number($charConfidence)"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($top)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($height)"/&gt;px; font-size: &lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($rotatedFontHeight)"/&gt;px;"
                                    &lt;xsl:text disable-output-escaping="yes"&gt; class="rcc"&amp;gt;&lt;/xsl:text&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:for-each&gt;

                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;
                    &lt;/xsl:when&gt;

                    &lt;xsl:otherwise&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)+number($lineHeight)"/&gt;" l="&lt;xsl:value-of select="number($lineLeft)"/&gt;" r="&lt;xsl:value-of select="number($lineLeft)+number($lineWidth)"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                        &lt;xsl:value-of select="$charConfidence"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number($lineLeft)"/&gt;px; width:&lt;xsl:value-of select="number($lineWidth)"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;"
                        &lt;xsl:text disable-output-escaping="yes"&gt;class="t"&amp;gt;&lt;/xsl:text&gt;
                        &lt;xsl:for-each select="descendant::wfocr:charParams"&gt;
                            &lt;xsl:choose&gt;
                                &lt;xsl:when test="not(normalize-space(./text()))"&gt;
                                    &lt;xsl:variable name="right"&gt;
                                        &lt;xsl:value-of select="number(following-sibling::*[not(self::*[@charConfidence])][1]/@l[1])"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="left"&gt;
                                        &lt;xsl:value-of select="number(./@r)"/&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:variable name="width"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="not(normalize-space($right))"&gt;
                                                &lt;xsl:value-of select="number($lineRight)-number($left)"/&gt;
                                            &lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:value-of select="number($right)-number($left)"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:variable&gt;
                                    &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt; &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;word t&lt;/xsl:text&gt;="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;" b="&lt;xsl:value-of select="number($lineTop)+number($pageHeight)+number($lineHeight)"/&gt;" r="&lt;xsl:value-of select="number(./@r[1])+number($width)"/&gt;" l="&lt;xsl:value-of select="number(./@r[1])"/&gt;"&lt;xsl:text disable-output-escaping="yes"&gt; charConfidence="&lt;/xsl:text&gt;
                                    &lt;xsl:value-of select="$charConfidence"/&gt; &lt;xsl:text disable-output-escaping="yes"&gt;"&amp;gt;&amp;lt;div style&lt;/xsl:text&gt;= "top:&lt;xsl:value-of select="number($lineTop)+number($pageHeight)"/&gt;px;left:&lt;xsl:value-of select="number(./@r[1])"/&gt;px; width:&lt;xsl:value-of select="number($width)"/&gt;px; height:&lt;xsl:value-of select="number($lineHeight)"/&gt;px; font-size: &lt;xsl:value-of select="number($fontHeight)"/&gt;px;line-height:&lt;xsl:value-of select="number($fontHeight)"/&gt;px;"
                                    &lt;xsl:text disable-output-escaping="yes"&gt;class="t"&amp;gt;&lt;/xsl:text&gt;
                                &lt;/xsl:when&gt;
                                &lt;xsl:otherwise&gt;
                                    &lt;xsl:value-of select="normalize-space(./text())"/&gt;
                                &lt;/xsl:otherwise&gt;
                            &lt;/xsl:choose&gt;
                        &lt;/xsl:for-each&gt;
                        &lt;xsl:text disable-output-escaping="yes"&gt;&amp;lt;/div&amp;gt;&amp;lt;/word&amp;gt;&lt;/xsl:text&gt;
                    &lt;/xsl:otherwise&gt;
                &lt;/xsl:choose&gt;
            &lt;/formatting&gt;
        &lt;/line&gt;
    &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
]]&gt;&lt;/template&gt;&lt;/stylesheet&gt;
		&lt;/xslt&gt;
	&lt;/var-def&gt;

	&lt;var-def name="htmlWordsDocument"&gt;
		&lt;script return="addImgTag(htmlWordsDocumentRaw.toString(), placeholder.toString(), imageLink.toString())"&gt;&lt;/script&gt;
	&lt;/var-def&gt;

	&lt;var-def name="ocr_tood_document_url"&gt;
        &lt;s3 bucket="${s3_bucket_name}"&gt;
            &lt;s3-put path="${bp_run_id}/${document_uuid}/${ocr_document_name}-tood.xml" acl="PublicRead" content-type="text/html; charset=utf-8" content-disposition="inline"&gt;
                &lt;var name="htmlWordsDocument" /&gt;
            &lt;/s3-put&gt;
        &lt;/s3&gt;
    &lt;/var-def&gt;
    
  	&lt;loop item="map" maxloops="1"&gt;
		&lt;list&gt;
			&lt;var name="ocr_result_list" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;script language="groovy"&gt;&lt;![CDATA[
				import com.google.gson.Gson;
				
				map.getWrappedObject().put("ocr_tood_document_url", ocr_tood_document_url.toString());
				map.getWrappedObject().put("ocr_tood_document_name", ocr_tood_document_url.toString().substring(ocr_tood_document_url.toString().lastIndexOf("/") + 1, ocr_tood_document_url.toString().lastIndexOf(".")));
				update_ocr_result_list.toList().add(new HashMap(map.getWrappedObject()));

				Gson gson = new Gson();
				String result_json = gson.toJson(update_ocr_result_list.toList());
				sys.defineVariable("ocr_json", result_json);
			]]&gt;&lt;/script&gt;
		&lt;/body&gt;
	&lt;/loop&gt;

    &lt;export include-original-data="true"&gt;
      	&lt;single-column name="ocr_json" value="${ocr_json}" /&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                 <description/>
                                 <includedConfigs/>
                                 <inclusionCode>cae2c910-a0a2-4118-8c1c-7a2f1119fda7</inclusionCode>
                                 <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>BASIC</machineWorkSettingType>
                                 <name>[TOOD] XSLT XML Enrichment with WORD and DIV tags</name>
                                 <machineConfigOptions/>
                                 <source>
                                    <availability/>
                                    <deleted>false</deleted>
                                    <description>100 local threads</description>
                                    <equallyDistributeLoad>false</equallyDistributeLoad>
                                    <name>100 local threads</name>
                                    <prioritizeEarlierRuns>true</prioritizeEarlierRuns>
                                    <proxySettings>
                                       <password/>
                                       <server/>
                                       <username/>
                                       <validationEnabled>false</validationEnabled>
                                    </proxySettings>
                                    <threadCount>100</threadCount>
                                    <threadsPerNode>false</threadsPerNode>
                                    <timeZone>GMT</timeZone>
                                    <tps>0</tps>
                                    <url/>
                                    <version>
                                       <componentUuid>5c9d7f49-7016-11e6-a889-22000b994623</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2010-01-01T00:00:00Z</lastModified>
                                       <versionUuid>bd5ce11b-7017-11e6-a889-22000b994623</versionUuid>
                                    </version>
                                    <batchSize>1</batchSize>
                                 </source>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>cae2c910-a0a2-4118-8c1c-7a2f1119fda7</uuid>
                                 <version>
                                    <componentUuid>37562edc-07fc-4069-bd66-567758de3173</componentUuid>
                                    <incrementalVersion>1.21</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-06-26T06:44:47Z</lastModified>
                                    <versionUuid>f0fd9205-4a8e-43b5-b926-760d554f4dc9</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_MANUALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>[TOOD] XSLT XML Enrichment with WORD and DIV tags</title>
                              <type>SINGLE</type>
                              <uuid>2d15732c-0a72-47fc-9cc4-b031920ec61c</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>75a7459e-a2ee-4869-937a-d31a9fe92c2b</componentUuid>
                                 <incrementalVersion>1.8</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-06-26T06:44:47Z</lastModified>
                                 <versionUuid>bae69724-ee01-4c1a-a282-caa1e89640c6</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>7</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>7d839fb4-a154-428c-8ad0-495ae647d94e</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content>#RuleContext.APPROVE_ALL_RULE</content>
                              <name>Approve All</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>7ffff4db-b572-4ab2-9c2a-7f815ed3dd85</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to configure OCR parameters

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;
  
  	&lt;required name="s3_bucket_name"/&gt;
  	&lt;required name="ocr_type"/&gt;
  	&lt;required name="cache_datastore"/&gt;
  
  	&lt;script&gt;&lt;![CDATA[
		if(ocr_type.toString().equals("tood")) {
			export_format = "xmlForCorrectedImage";
		} else if (ocr_type.toString().equals("standard")) {
  			if( !sys.isVariableDefined("export_format") || export_format == null || export_format.toString().isEmpty()) {
				export_format = "xmlForCorrectedImage";
			} else {
				export_format = export_format.toString().replace("|", ",");
			}
		}
		sys.defineVariable("exportFormat", export_format);

		if( !sys.isVariableDefined("document_language") || document_language == null || document_language.toString().isEmpty()) {
			document_language = "English";
		} else {
			document_language = document_language.toString().replace(" ", "");
		}
		sys.defineVariable("documentLanguage", document_language);

		if( !sys.isVariableDefined("ocr_xml_char_recognition") || ocr_xml_char_recognition == null || ocr_xml_char_recognition.toString().isEmpty()) {
			ocr_xml_char_recognition = "false";
		}
		sys.defineVariable("ocrXmlCharRecognition", ocr_xml_char_recognition);

		if( !sys.isVariableDefined("allowed_region_types") || allowed_region_types == null || allowed_region_types.toString().isEmpty()) {
			allowed_region_types = "BT_Table,BT_Text,BT_Separator,BT_SeparatorGroup,BT_Checkmark,BT_CheckmarkGroup,BT_AutoAnalysis";
		} else {
			allowed_region_types = allowed_region_types.toString().replace("|", ",");
		}
		sys.defineVariable("allowed_region_types", allowed_region_types)

		if( !sys.isVariableDefined("custom_regions") || custom_regions == null) {
			custom_regions = "";
		}
		sys.defineVariable("custom_regions", custom_regions);

		if( !sys.isVariableDefined("change_dpi") || change_dpi == null) {
			change_dpi = "";
		}	
 		sys.defineVariable("change_dpi", change_dpi);

		if( !sys.isVariableDefined("invert_image") || invert_image == null || invert_image.toString().isEmpty()) {
			invert_image = "false";
		}
		sys.defineVariable("invertImage", invert_image)

		if( !sys.isVariableDefined("discard_color_image") || discard_color_image == null || discard_color_image.toString().isEmpty()) {
			discard_color_image = "false";
		}
		sys.defineVariable("discardColorImage", discard_color_image);
		
		if( !sys.isVariableDefined("remove_color_objects") || remove_color_objects == null) {
			remove_color_objects = "";
		}	
 		sys.defineVariable("remove_color_objects", remove_color_objects);

		if( !sys.isVariableDefined("remove_color_objects_type") || remove_color_objects_type == null || remove_color_objects_type.toString().isEmpty()) {
			remove_color_objects_type = "Background";
		}
		sys.defineVariable("removeColorObjectsType", remove_color_objects_type);
	]]&gt;&lt;/script&gt;
  
	&lt;var-def name="document_uuid"&gt;
		&lt;script language="java" return="uuid"&gt;&lt;![CDATA[
			String uuid = UUID.randomUUID().toString();
		]]&gt;&lt;/script&gt;
	&lt;/var-def&gt;
  
  	&lt;var-def name="bp_run_id"&gt;
		&lt;template&gt;
			${item.getWrappedObject().getRun().getRootRunUuid()}
		&lt;/template&gt;
	&lt;/var-def&gt;
  
	&lt;export include-original-data="true"&gt;
      	&lt;single-column name="cache_datastore" value="${cache_datastore}"/&gt;
    	&lt;single-column name="export_format" value="${exportFormat}"/&gt;
        &lt;single-column name="document_language" value="${documentLanguage}"/&gt;
        &lt;single-column name="ocr_xml_char_recognition" value="${ocrXmlCharRecognition}"/&gt;
      	&lt;single-column name="allowed_region_types" value="${allowed_region_types}"/&gt;
      	&lt;single-column name="custom_regions" value="${custom_regions}"/&gt;
      	&lt;single-column name="change_dpi" value="${change_dpi}"/&gt;
        &lt;single-column name="invert_image" value="${invertImage}"/&gt;
        &lt;single-column name="discard_color_image" value="${discardColorImage}"/&gt;
      	&lt;single-column name="remove_color_objects" value="${remove_color_objects}"/&gt;
      	&lt;single-column name="remove_color_objects_type" value="${removeColorObjectsType}"/&gt;
      
      	&lt;single-column name="bp_run_id" value="${bp_run_id}"/&gt;
      	&lt;single-column name="document_uuid" value="${document_uuid}"/&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                 <description/>
                                 <includedConfigs/>
                                 <inclusionCode>87bbbceb-15e6-4081-baa6-c574fffd4c66</inclusionCode>
                                 <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>BASIC</machineWorkSettingType>
                                 <name>Input data processing</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>87bbbceb-15e6-4081-baa6-c574fffd4c66</uuid>
                                 <version>
                                    <componentUuid>6c6e68e8-1ffb-42c6-bfe9-c80f599cd743</componentUuid>
                                    <incrementalVersion>1.24</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-05-29T12:59:11Z</lastModified>
                                    <versionUuid>8823a9e3-ccbe-4a15-8a30-299c641b0b6f</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>Input data processing</title>
                              <type>SINGLE</type>
                              <uuid>7efd0e4a-ee9a-47bd-8f79-87ce5e2abd59</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>16050d15-967b-4f3c-9304-e4cccda3e1db</componentUuid>
                                 <incrementalVersion>1.9</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-05-29T12:59:12Z</lastModified>
                                 <versionUuid>4fd1a98d-5e7c-4f05-bfc2-a5c39e66bc88</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>8</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>9fbec961-739e-4c72-944c-05b8231b3bff</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"TOOD","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"tood","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'TOOD' when ocr_type EQ 'tood'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "tood"));

    then
        $ctx.sendResultTo("TOOD", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_type","value":"standard","operator":"EQ"}],"customConditions":[]}
rule "2. Send records to 'Standard' when ocr_type EQ 'standard'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_type", "EQ", "standard"));

    then
        $ctx.sendResultTo("Standard", $item);
end



rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                              <name>OCR Type</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>24acbf7a-654a-4d61-af67-7c1021cc520a</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to make row processing for all OCR result documents with "xml" format from previous step, also put updated documents on S3 and update OCR JSON.

@Author: Alexey Shalak
@Author: Denis Uraev
@Version: 1.2
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;

	&lt;script&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		List&lt;Map&gt; ocr_result_list = new JsonSlurper().parseText(ocr_json.toString());
		sys.defineVariable("ocr_result_list", ocr_result_list);

		List&lt;Map&gt; update_ocr_result_list = new ArrayList();
		sys.defineVariable("update_ocr_result_list", update_ocr_result_list);
	]]&gt;&lt;/script&gt;

	&lt;loop item="map"&gt;
		&lt;list&gt;
			&lt;var name="ocr_result_list" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;script&gt;&lt;![CDATA[
				sys.defineVariable("ocr_document_name", map.getWrappedObject().get("ocr_document_name").toString());
				sys.defineVariable("ocr_export_format", map.getWrappedObject().get("ocr_export_format").toString());
				sys.defineVariable("ocr_document_format", map.getWrappedObject().get("ocr_document_format").toString());
			]]&gt;&lt;/script&gt;
			&lt;case&gt;
				&lt;if condition='${ocr_document_format.toString().equals("xml")}'&gt;
					&lt;s3 bucket="${s3_bucket_name}"&gt;
						&lt;var-def name="xml_text"&gt;
							&lt;s3-get name="${bp_run_id}/${document_uuid}/${ocr_document_name}.${ocr_document_format}" /&gt;
						&lt;/var-def&gt;
					&lt;/s3&gt;

					&lt;var-def name="ocr_raw_processed_document"&gt;
						&lt;xslt&gt;
							&lt;xml&gt;
								&lt;var name="xml_text" /&gt;
							&lt;/xml&gt;                       
							&lt;stylesheet&gt;&lt;![CDATA[ &lt;?xml version="1.0" encoding="UTF-8"?&gt;
								&lt;xsl:stylesheet version="1.0"
								xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
								xmlns:wfocr="http://ocr.crowdcomputingsystems.com/xml/schema-v1.xml" xmlns:csl="http://www.w3.org/1999/XSL/Transform"&gt;

								&lt;xsl:template match="@*|node()"&gt;
								&lt;xsl:copy&gt;
								&lt;xsl:apply-templates select="@*|node()"/&gt;
								&lt;/xsl:copy&gt;
               					&lt;/xsl:template&gt;

								&lt;xsl:template match="wfocr:charRecVariants" /&gt;
								&lt;xsl:template match="wfocr:*/@serifProbability" /&gt;
								&lt;xsl:template match="wfocr:*/@wordFromDictionary" /&gt;
								&lt;xsl:template match="wfocr:*/@wordPenalty" /&gt;
								&lt;xsl:template match="wfocr:*/@wordNumeric" /&gt;
								&lt;xsl:template match="wfocr:*/@wordNormal" /&gt;
								&lt;xsl:template match="wfocr:*/@wordIdentifier" /&gt;
								&lt;/xsl:stylesheet&gt;
							]]&gt;&lt;/stylesheet&gt;
						&lt;/xslt&gt;
					&lt;/var-def&gt;

					&lt;var-def name="ocr_raw_processed_document_url"&gt;
						&lt;s3 bucket="${s3_bucket_name}"&gt;
							&lt;s3-put-public
								path="${bp_run_id}/${document_uuid}/${ocr_document_name}-raw_processed.${ocr_document_format}"
								content="${ocr_raw_processed_document}" content-type="text/html; charset=utf-8"
								content-disposition="inline" /&gt;
						&lt;/s3&gt;
					&lt;/var-def&gt;
                  
					&lt;script&gt;&lt;![CDATA[
						map.getWrappedObject().put("ocr_raw_processed_document_url", ocr_raw_processed_document_url.toString());
						map.getWrappedObject().put("ocr_raw_processed_document_name", ocr_raw_processed_document_url.toString().substring(ocr_raw_processed_document_url.toString().lastIndexOf("/") + 1, ocr_raw_processed_document_url.toString().lastIndexOf(".")));
					]]&gt;&lt;/script&gt;
				&lt;/if&gt;
			&lt;/case&gt;
			
			&lt;script&gt;&lt;![CDATA[
				update_ocr_result_list.toList().add(new HashMap(map.getWrappedObject()));
			]]&gt;&lt;/script&gt;
		&lt;/body&gt;
	&lt;/loop&gt;

	&lt;script&gt;&lt;![CDATA[
		import com.google.gson.Gson;

		Gson gson = new Gson();
		String result_json = gson.toJson(update_ocr_result_list.toList());
		sys.defineVariable("ocr_json", result_json);
	]]&gt;&lt;/script&gt;


	&lt;export include-original-data="true"&gt;
		&lt;single-column name="ocr_json" value="${ocr_json}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                 <description/>
                                 <includedConfigs/>
                                 <inclusionCode>a0b69c1c-0e45-44f3-b8ba-03b297e72b07</inclusionCode>
                                 <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Data Transformation</name>
                                       <private>false</private>
                                       <publicId>0a266968-31f6-41f7-a7d8-09d7aeb4f581</publicId>
                                    </category>
                                    <contentType>NORMAL</contentType>
                                    <description>applies XSLT transformation to ocred text</description>
                                    <enabled>true</enabled>
                                    <name>XSLT node beauty</name>
                                    <publicId>9622a3c0-7569-4956-9a70-964a4884f7df</publicId>
                                    <version>
                                       <componentUuid>2555349d-5e72-4894-8b1a-a14d5fe45757</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2017-11-03T09:20:28Z</lastModified>
                                       <versionUuid>2dfd83e1-49f4-4521-86d4-c50506455776</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
  	
  	&lt;var-def name="resultXmlWithCharParams"&gt;
		&lt;xslt&gt;
			&lt;xml&gt;
				&lt;var name="document_xml" /&gt;
			&lt;/xml&gt;
			&lt;stylesheet&gt;&lt;![CDATA[ &lt;?xml version="1.0" encoding="UTF-8"?&gt;
			&lt;xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:wfocr="http://ocr.crowdcomputingsystems.com/xml/schema-v1.xml" xmlns:csl="http://www.w3.org/1999/XSL/Transform"&gt;

                &lt;xsl:template match="@*|node()"&gt;
                  &lt;xsl:copy&gt;
                    &lt;xsl:apply-templates select="@*|node()"/&gt;
                  &lt;/xsl:copy&gt;
                &lt;/xsl:template&gt;

                &lt;xsl:template match="wfocr:charRecVariants" /&gt;
                &lt;xsl:template match="wfocr:*/@serifProbability" /&gt;
                &lt;xsl:template match="wfocr:*/@wordFromDictionary" /&gt;
                &lt;xsl:template match="wfocr:*/@wordPenalty" /&gt;
                &lt;xsl:template match="wfocr:*/@wordNumeric" /&gt;
                &lt;xsl:template match="wfocr:*/@wordNormal" /&gt;
                &lt;xsl:template match="wfocr:*/@wordIdentifier" /&gt;
            &lt;/xsl:stylesheet&gt;				
			]]&gt;&lt;/stylesheet&gt;
		&lt;/xslt&gt;	
  	&lt;/var-def&gt;

	&lt;var-def name="documentXmlWithCharParamsLink"&gt;
		&lt;s3 bucket="public"&gt;
			&lt;s3-put-public path="${document_uuid}-with-char-params.xml"
				content="${resultXmlWithCharParams}" content-type="text/html; charset=utf-8"
				content-disposition="inline" /&gt;
		&lt;/s3&gt;
	&lt;/var-def&gt;
  	
	&lt;export include-original-data="true"&gt;
      &lt;single-column name="documentXmlWithCharParamsLink" value="${documentXmlWithCharParamsLink}"/&gt;
      &lt;single-column name="resultXmlWithCharParams" value="${resultXmlWithCharParams}"/&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>XSLT node ocr transformation1</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>76dd8e38-1491-4fda-8f54-8f8121b9b403</uuid>
                                       <version>
                                          <componentUuid>3d384ef2-8ca8-41f5-8c30-e08ce0e693b4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2017-11-03T09:20:28Z</lastModified>
                                          <versionUuid>3dcdf194-b57e-418b-9011-8308743202ea</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>BASIC</machineWorkSettingType>
                                 <name>XSLT Cut off Raw OCR XML tags</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
  	
  	&lt;var-def name="resultXmlWithCharParams"&gt;
		&lt;xslt&gt;
			&lt;xml&gt;
				&lt;var name="document_xml" /&gt;
			&lt;/xml&gt;
			&lt;stylesheet&gt;&lt;![CDATA[ &lt;?xml version="1.0" encoding="UTF-8"?&gt;
			&lt;xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:wfocr="http://ocr.crowdcomputingsystems.com/xml/schema-v1.xml" xmlns:csl="http://www.w3.org/1999/XSL/Transform"&gt;

                &lt;xsl:template match="@*|node()"&gt;
                  &lt;xsl:copy&gt;
                    &lt;xsl:apply-templates select="@*|node()"/&gt;
                  &lt;/xsl:copy&gt;
                &lt;/xsl:template&gt;

                &lt;xsl:template match="wfocr:charRecVariants" /&gt;
                &lt;xsl:template match="wfocr:*/@serifProbability" /&gt;
                &lt;xsl:template match="wfocr:*/@wordFromDictionary" /&gt;
                &lt;xsl:template match="wfocr:*/@wordPenalty" /&gt;
                &lt;xsl:template match="wfocr:*/@wordNumeric" /&gt;
                &lt;xsl:template match="wfocr:*/@wordNormal" /&gt;
                &lt;xsl:template match="wfocr:*/@wordIdentifier" /&gt;
            &lt;/xsl:stylesheet&gt;				
			]]&gt;&lt;/stylesheet&gt;
		&lt;/xslt&gt;	
  	&lt;/var-def&gt;

	&lt;var-def name="documentXmlWithCharParamsLink"&gt;
		&lt;s3 bucket="public"&gt;
			&lt;s3-put-public path="${document_uuid}-with-char-params.xml"
				content="${resultXmlWithCharParams}" content-type="text/html; charset=utf-8"
				content-disposition="inline" /&gt;
		&lt;/s3&gt;
	&lt;/var-def&gt;
  	
	&lt;export include-original-data="true"&gt;
      &lt;single-column name="documentXmlWithCharParamsLink" value="${documentXmlWithCharParamsLink}"/&gt;
      &lt;single-column name="resultXmlWithCharParams" value="${resultXmlWithCharParams}"/&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>XSLT node ocr transformation1</name>
                                    <origination>CREATED_AUTOMATICALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>MACHINE</type>
                                    <uuid>5f0ae401-a022-4b9d-9372-37fe3a7ed60e</uuid>
                                    <version>
                                       <componentUuid>77f1b33c-7eb6-44a8-9315-96d9ec07aab4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-06-08T13:28:55Z</lastModified>
                                       <versionUuid>edd0b30d-16b8-4826-8222-1371d2c8422e</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>a0b69c1c-0e45-44f3-b8ba-03b297e72b07</uuid>
                                 <version>
                                    <componentUuid>e929dfaf-f13f-4cc8-9c2f-12717dc17ad0</componentUuid>
                                    <incrementalVersion>1.6</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-06-08T13:29:07Z</lastModified>
                                    <versionUuid>4aa2187a-0b16-4bee-82d2-0a7f5875b6c7</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>XSLT Cut off Raw OCR XML tags</title>
                              <type>SINGLE</type>
                              <uuid>ba22e9b1-c6ce-458f-8933-112ed10cb205</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>9aabab8e-13cd-44be-960f-0e05dac7689c</componentUuid>
                                 <incrementalVersion>1.6</incrementalVersion>
                                 <lastInChain>false</lastInChain>
                                 <lastModified>2018-06-08T13:29:07Z</lastModified>
                                 <versionUuid>f4267b05-777b-4b98-9fac-4281e5aed285</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>9</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>c167ff80-5aa0-4034-9c75-ea3a3b9f540d</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content>#RuleContext.APPROVE_ALL_RULE</content>
                              <name>Approve All</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>6d6d12c3-657c-4f71-9b38-e6fd1a2c8dfa</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to make request to the OCR api, with our input parameters , but before, get one OCR taskId for document and make valid OCR api URL.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;
  	  
  	&lt;var-def name="ocr_url"&gt;
  		&lt;var-global name="ocr_url"/&gt;
  	&lt;/var-def&gt;
  
    &lt;var-def name="ocr_username"&gt;
  		&lt;var-global name="ocr_username"/&gt;
  	&lt;/var-def&gt;
  
    &lt;var-def name="ocr_password"&gt;
  		&lt;var-global name="ocr_password"/&gt;
  	&lt;/var-def&gt;
  
  	&lt;var-def name="submitImage"&gt;
      	&lt;case&gt;
			&lt;if condition='${ocr_username.toString().isEmpty() || ocr_password.toString().isEmpty()}'&gt;
				&lt;http url="${ocr_url}/submitImage" method="post" multipart="true"&gt;
					&lt;http-param name="file" isfile="true"&gt;
						&lt;http url="${original_document_url}" /&gt;
					&lt;/http-param&gt;
				&lt;/http&gt;
			&lt;/if&gt;
          	&lt;else&gt;
            	&lt;http url="${ocr_url}/submitImage" method="post" multipart="true" username="${ocr_username.toString()}" password="${ocr_password.toString()}"&gt;
					&lt;http-param name="file" isfile="true"&gt;
						&lt;http url="${original_document_url}" /&gt;
					&lt;/http-param&gt;
				&lt;/http&gt;
          	&lt;/else&gt;
		&lt;/case&gt;
	&lt;/var-def&gt;
  	
	&lt;var-def name="taskId"&gt;
		&lt;xpath expression="string(//response/task/@id)"&gt;
			&lt;var name="submitImage" /&gt;
		&lt;/xpath&gt;
	&lt;/var-def&gt;
  
  	&lt;script&gt;&lt;![CDATA[
		//-------------------------------------------------------making processDocument url-------------------------------------------------------
		String url = ocr_url.toString() + "/processDocument?taskId=" + taskId.toString() + "&amp;exportFormat=" + no_cached_export_format.toString() + "&amp;language=" + document_language.toString() + "&amp;xml:writeRecognitionVariants=" + ocr_xml_char_recognition.toString() + "&amp;correctSkew=true&amp;correctOrientation=true&amp;allowedRegionTypes=" + allowed_region_types.toString() + "&amp;invertImage=" + invert_image.toString() + "&amp;discardColorImage=" + discard_color_image.toString() + "&amp;removeColorObjectsType=" + remove_color_objects_type.toString();
		StringBuilder process_document_url = new StringBuilder(url.toString());
		
		if( !custom_regions.toString().isEmpty()) {
			process_document_url.append("&amp;customRegions=" + custom_regions.toString());
		}

		if( !change_dpi.toString().isEmpty()) {
			process_document_url.append("&amp;changeDPI=" + change_dpi.toString());
		}

		if( !remove_color_objects.toString().isEmpty()) {
			process_document_url.append("&amp;removeColorObjects=" + remove_color_objects.toString());
		}
		sys.defineVariable("processDocumentUrl", process_document_url)
	]]&gt;&lt;/script&gt;
  
	&lt;var-def name="processDocument"&gt;
      	&lt;case&gt;
			&lt;if condition='${ocr_username.toString().isEmpty() || ocr_password.toString().isEmpty()}'&gt;
				&lt;http url="${processDocumentUrl.toString()}" method="get" /&gt;
			&lt;/if&gt;
          	&lt;else&gt;
            	&lt;http url="${processDocumentUrl.toString()}" method="get" username="${ocr_username.toString()}" password="${ocr_password.toString()}" /&gt;
          	&lt;/else&gt;
		&lt;/case&gt;
	&lt;/var-def&gt;
  
	&lt;export include-original-data="true"&gt;
		&lt;single-column name="ocr_task_id" value="${taskId}"/&gt;      
	&lt;/export&gt;
&lt;/config&gt;</content>
                                 <description/>
                                 <includedConfigs/>
                                 <inclusionCode>1da30815-a3a5-4af4-98a2-afd3d91d5604</inclusionCode>
                                 <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>BASIC</machineWorkSettingType>
                                 <name>[Standard] OCR</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>1da30815-a3a5-4af4-98a2-afd3d91d5604</uuid>
                                 <version>
                                    <componentUuid>e5f34cc0-fd08-444d-b6ab-08b708dbf12a</componentUuid>
                                    <incrementalVersion>1.30</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-06-08T14:51:26Z</lastModified>
                                    <versionUuid>1d040072-a75d-4ec2-a00a-9ff9c174bec5</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>[Standard] OCR</title>
                              <type>SINGLE</type>
                              <uuid>5998bd12-5695-4957-91a8-3aaad033c8ad</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>b7743d5a-77a4-4c97-8250-ba124b9590cb</componentUuid>
                                 <incrementalVersion>1.17</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-06-11T14:01:40Z</lastModified>
                                 <versionUuid>1dd1738a-fa3b-4040-85a4-09da1591fef1</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>10</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>ebe96d1f-f83b-4334-bb87-4f2ca00dc10b</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content>#RuleContext.APPROVE_ALL_RULE</content>
                              <name>Approve All</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>64172914-052b-4ac6-8660-fd91e8cfb4ff</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to save all new OCR result JSON members into cache datastore.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config&gt;
	&lt;var-def name="key"&gt;
		&lt;template&gt;${document_hash}&lt;/template&gt;
	&lt;/var-def&gt;

	&lt;script language="groovy"&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		List&lt;Map&gt; ocr_result_list = new JsonSlurper().parseText(ocr_json.toString());
		sys.defineVariable("ocr_result_list", ocr_result_list);
	]]&gt;&lt;/script&gt;

	&lt;loop item="map"&gt;
		&lt;list&gt;
			&lt;var name="ocr_result_list" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;script&gt;&lt;![CDATA[
				Map originalData = new LinkedHashMap();
				originalData.put("key", key.toString());
				originalData.put("cached_at", javax.xml.bind.DatatypeConverter.printDateTime(Calendar.getInstance()));

				originalData.put("ocr_type", ocr_type.toString());
				originalData.put("export_format", map.getWrappedObject().get("ocr_export_format").toString());
				originalData.put("document_language", document_language.toString());
				originalData.put("ocr_xml_char_recognition", ocr_xml_char_recognition.toString());
				originalData.put("allowed_region_types", allowed_region_types.toString());
				originalData.put("custom_regions", custom_regions.toString());
				originalData.put("change_dpi", change_dpi.toString());
				originalData.put("invert_image", invert_image.toString());
				originalData.put("discard_color_image", discard_color_image.toString());
				originalData.put("remove_color_objects", remove_color_objects.toString());
				originalData.put("remove_color_objects_type", remove_color_objects_type.toString());

				originalData.put("ocr_json", new com.google.gson.Gson().toJson(map.getWrappedObject()));
			]]&gt;&lt;/script&gt;

			&lt;var-def name="originalDataJson"&gt;
				&lt;script return="new com.google.gson.Gson().toJson(originalData)" /&gt;
			&lt;/var-def&gt;

			&lt;insert-datastore datastore-name="${cache_datastore}"
				json-value-map="${originalDataJson}" create="true" /&gt;

		&lt;/body&gt;
	&lt;/loop&gt;

	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                 <description/>
                                 <includedConfigs/>
                                 <inclusionCode>06555d37-c382-466a-9487-68fa314f2a68</inclusionCode>
                                 <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>BASIC</machineWorkSettingType>
                                 <name>Cache OCR results</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>06555d37-c382-466a-9487-68fa314f2a68</uuid>
                                 <version>
                                    <componentUuid>fbc6e5af-3689-43e7-af9b-7c4e900ed34f</componentUuid>
                                    <incrementalVersion>1.12</incrementalVersion>
                                    <lastInChain>false</lastInChain>
                                    <lastModified>2018-06-02T06:15:56Z</lastModified>
                                    <versionUuid>32b2f51f-6aa5-4d84-bd77-521133574e72</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>Cache OCR results</title>
                              <type>SINGLE</type>
                              <uuid>9535c598-8850-4c31-e19d-56fecb707c6d</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>e87be71c-ad6a-44f9-b5ad-e0210a721997</componentUuid>
                                 <incrementalVersion>1.10</incrementalVersion>
                                 <lastInChain>false</lastInChain>
                                 <lastModified>2018-06-02T06:15:56Z</lastModified>
                                 <versionUuid>cdf7bf57-ae10-46a6-83f1-e76abce889ae</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>11</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>f5a76b5b-ca0e-451b-a206-96998c058e5b</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content>#RuleContext.APPROVE_ALL_RULE</content>
                              <name>Approve All</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>a85dc52a-11b5-42b1-93bf-ed24894de250</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to split document into PNG pages. Then we get json of pages urls for used it in "[TOOD} XSLT XML Enrichment with WORD and DIV tags" step.

@Author: Alexey Shalak
@Version: 1.0
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config charset="UTF-8"&gt;

  	&lt;required name="original_document_url"/&gt;
	
    &lt;var-def name="document_link"&gt;
     	 &lt;template&gt;${original_document_url.toString()}&lt;/template&gt;
    &lt;/var-def&gt; 
  
  	&lt;var-def name="convert_lib_path"&gt;
  		&lt;var-global name="convert_lib_path"/&gt;
  	&lt;/var-def&gt;
  
	&lt;var-def name="fileList"&gt;
		&lt;script return="convert(document_link.toString())"&gt;&lt;![CDATA[
			import java.io.BufferedReader;
			import java.io.File;
			import java.io.IOException;
			import java.io.InputStreamReader;
			import java.net.URL;
			import com.itextpdf.text.Image;

			import com.google.common.io.Files;
			import org.apache.commons.io.FileUtils;
			import org.apache.commons.io.FilenameUtils;
			import com.freedomoss.workfusion.utils.gson.GsonUtils;
			import org.webharvest.runtime.variables.ListVariable;
			import org.webharvest.runtime.variables.Variable;

			static Integer counter;
			static File outputFolder;
			static Integer size;
			static ListVariable lv;

			static int getSize(){
				return size;
			}

   			static Variable staticGetVariable(Object i){
				return lv.get((Integer)i);
			}

			static boolean getOS(){
				return ((String)System.getProperties().get("os.name")).contains("Windows");
			}

			boolean isWindows=getOS();


			static ListVariable convert(String documentLink) throws IOException, InterruptedException {
				File baseDir = Files.createTempDir();

				File inputFolder = new File(baseDir, "input");

				URL documentUrl = new URL(documentLink);
				String inputFileName = FilenameUtils.getName(documentUrl.getPath());

				if (inputFileName == null || inputFileName.isEmpty()) {
					inputFileName = "input.pdf";
				}

				File inputFile = new File(inputFolder, inputFileName);
				FileUtils.copyURLToFile(documentUrl, inputFile);

				outputFolder = new File(baseDir, "output");
				FileUtils.forceMkdir(outputFolder);

				File result = new File(outputFolder, "output.png");
				File resultTiff = new File(outputFolder, "output.tiff");

				if (isWindows){
				invoke(new ProcessBuilder(new String[] {
					"magick",
					"convert",
					"-density","288",
					inputFile.getAbsolutePath(),
					// "-resize", "25%",
					result.getAbsolutePath()}
				));
				} else {
				invoke(new ProcessBuilder(new String[] {
					convert_lib_path.toString(),
					"-density","288",
					inputFile.getAbsolutePath(),
					// "-resize", "25%",
					result.getAbsolutePath()}
				));
    			}

				List list=new ArrayList();
				counter=0;
				File created=new File(outputFolder, "output-"+counter.toString()+".png");
				while (created.exists()){
					counter++;
					list.add(created);
					created=new File(outputFolder, "output-"+counter.toString()+".png");
				}
				if (counter==0){
					created=new File(outputFolder, "output.png");
					if (created.exists()){
						File updated=new File(outputFolder, "output-0.png");
						created.renameTo(updated);
						counter++;
						list.add(updated);
					}
				}
				size=list.size();
				counter=0;
				lv=new ListVariable(list);
				return lv;
			}

			static void invoke(ProcessBuilder builder) throws IOException, InterruptedException {
				builder.redirectErrorStream(true);

				System.err.println(builder.command());
				Process process = builder.start();

				BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream()));
				String line;
				while ((line = in.readLine()) != null) {
					System.out.println(line);
				}
				in.close();

				int code = process.waitFor();
				if (code != 0) {
					throw new RuntimeException("Failed to invoke process: " + builder.command() + ". Return code: " + code);
				}
			}
		]]&gt;&lt;/script&gt;
	&lt;/var-def&gt;
	
	&lt;var-def name="numberOfPages"&gt;
		&lt;script return="getSize()" /&gt;
	&lt;/var-def&gt;

	&lt;loop item="fileJavaObject" index="i" filter="unique"&gt;
		&lt;list&gt;
			&lt;var name="fileList" /&gt;
		&lt;/list&gt;
		&lt;body&gt;
			&lt;log&gt;
				&lt;template&gt;File: ${fileJavaObject}&lt;/template&gt;
			&lt;/log&gt;
			&lt;var-def name="key"&gt;
				&lt;script return="staticGetVariable(i.toInt()-1)"&gt;&lt;/script&gt;
			&lt;/var-def&gt;
			&lt;var-def name="content-${i}"&gt;
		        &lt;file path="${key}" type="binary"/&gt;
			&lt;/var-def&gt;
			&lt;var-def name="content"&gt;
				&lt;var name="content-${i}" /&gt;
			&lt;/var-def&gt;

			&lt;var-def name="converted_link-${i}"&gt;
        		&lt;s3  bucket="${s3_bucket_name}"&gt;
         			&lt;s3-put-public path="${bp_run_id}/${document_uuid}/page-${i}.png" content="${content}" content-type="image/png" content-disposition="inline"/&gt;
        		&lt;/s3&gt;
			&lt;/var-def&gt;
		&lt;/body&gt;
	&lt;/loop&gt;
	
	&lt;var-def name="jsonFilesUrls"&gt;
		&lt;json&gt;
			&lt;loop item="fileJavaObject" index="i" filter="unique"&gt;
				&lt;list&gt;
					&lt;var name="fileList" /&gt;
				&lt;/list&gt;
				&lt;body&gt;
					&lt;json-put key="fileList-${i}"&gt;
						&lt;var name="converted_link-${i}" /&gt;
					&lt;/json-put&gt;
				&lt;/body&gt;
			&lt;/loop&gt;
		&lt;/json&gt;
	&lt;/var-def&gt;
     
	&lt;export include-original-data="true"&gt;
		&lt;single-column name="pages" value="${numberOfPages}" /&gt;
		&lt;single-column name="json_file_urls" value="${jsonFilesUrls}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                 <description/>
                                 <includedConfigs/>
                                 <inclusionCode>6efb69b7-d014-47b3-9e69-a7ae7b892467</inclusionCode>
                                 <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>BASIC</machineWorkSettingType>
                                 <name>[TOOD] Split document into PNG pages</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>6efb69b7-d014-47b3-9e69-a7ae7b892467</uuid>
                                 <version>
                                    <componentUuid>6994caad-7870-4ba3-a219-7927539c1ca9</componentUuid>
                                    <incrementalVersion>1.5</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-05-30T14:19:24Z</lastModified>
                                    <versionUuid>707019ce-8364-495e-a1e5-073b48cdcd8b</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>[TOOD] Split document into PNG pages</title>
                              <type>SINGLE</type>
                              <uuid>9c33a147-3416-4058-8b45-75fb1d1aa47c</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>661a211a-16b8-4d0c-a4da-ad2fa1cf8db4</componentUuid>
                                 <incrementalVersion>1.3</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-05-30T14:19:25Z</lastModified>
                                 <versionUuid>b8427ba5-6e51-4a7e-8025-a85162864331</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>12</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>54e27794-11a5-4bc1-983d-bf4fe86fc57f</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content># Rule.Definition={"moderationRule":false,"approveAllRule":false,"splitData":false,"splitRule":false,"splitRuleSuffix":"","joinRule":false,"joinRuleSuffix":"","streamingRule":false,"streamingRuleSuffix":"","namedRule":false,"namedRuleName":""}
package com.freedomoss.requester;

# list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import org.slf4j.Logger;


# declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
agenda-group "initialization-group"
    when
        $ctx:CompositeRuleContext(initialized == false);
    then
        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end

# RuleOutcome.Definition={"outcomeId":"OCR Failed","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_failed","value":"true","operator":"EQ"}],"customConditions":[]}
rule "1. Send records to 'OCR Failed' when ocr_failed EQ 'true'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_failed", "EQ", "true"));

    then
        $ctx.sendResultTo("OCR Failed", $item);
end

# RuleOutcome.Definition={"outcomeId":"TOOD","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_failed","value":"false","operator":"EQ"},{"fieldName":"ocr_type","value":"tood","operator":"EQ"}],"customConditions":[]}
rule "2. Send records to 'TOOD' when ocr_failed EQ 'false' AND ocr_type EQ 'tood'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_failed", "EQ", "false"));
        eval($item.checkValue("ocr_type", "EQ", "tood"));

    then
        $ctx.sendResultTo("TOOD", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_failed","value":"false","operator":"EQ"},{"fieldName":"ocr_type","value":"standard","operator":"EQ"},{"fieldName":"xml_export_format_flag","value":"true","operator":"EQ"}],"customConditions":[]}
rule "3. Send records to 'Standard' when ocr_failed EQ 'false' AND ocr_type EQ 'standard' AND xml_export_format_flag EQ 'true'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_failed", "EQ", "false"));
        eval($item.checkValue("ocr_type", "EQ", "standard"));
        eval($item.checkValue("xml_export_format_flag", "EQ", "true"));

    then
        $ctx.sendResultTo("Standard", $item);
end

# RuleOutcome.Definition={"outcomeId":"Standard (without xml export format)","conditional":true,"reworkBySameWorker":false,"assignToSameWorker":false,"anableLogging":false,"sendRejectNotification":false,"assignToAnyWorker":false,"approveRelatedAssignments":false,"rejectRelatedAssignments":false,"renameAutomationAnswerItem":false,"conditions":[{"fieldName":"ocr_failed","value":"false","operator":"EQ"},{"fieldName":"ocr_type","value":"standard","operator":"EQ"},{"fieldName":"xml_export_format_flag","value":"false","operator":"EQ"}],"customConditions":[]}
rule "4. Send records to 'Standard (without xml export format)' when ocr_failed EQ 'false' AND ocr_type EQ 'standard' AND xml_export_format_flag EQ 'false'"
agenda-group "calculation"
dialect "mvel"
salience 100
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
        eval($item.checkValue("ocr_failed", "EQ", "false"));
        eval($item.checkValue("ocr_type", "EQ", "standard"));
        eval($item.checkValue("xml_export_format_flag", "EQ", "false"));

    then
        $ctx.sendResultTo("Standard (without xml export format)", $item);
end



rule "Send unprocessed result to unconditional outcome(s)"
agenda-group "calculation"
dialect "mvel"
salience 80
    when
        $ctx:CompositeRuleContext(initialized == true);
        $item:CompositeRuleDataItemContext();
    then
        $ctx.sendResultToUnconditionalOutcomes($item, true);
end</content>
                              <name>OCR Router</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>1bdfd045-0f4e-473a-ba21-dc373ee0a5ef</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;!--
Step to get response from OCR api, and if OCR Process is "Completed", get OCRed document for each OCR export format parameter, put them on S3 and create OCR JSON with result OCR information.

@Author: Alexey Shalak
@Author: Denis Uraev
@Version: 1.1
Workfusion 2018, RPA Express 2.0
--&gt;

&lt;config charset="UTF-8"&gt;
  
  	&lt;var-def name="ocr_url"&gt;
  		&lt;var-global name="ocr_url"/&gt;
  	&lt;/var-def&gt;
    
    &lt;var-def name="ocr_username"&gt;
  		&lt;var-global name="ocr_username"/&gt;
  	&lt;/var-def&gt;
  
    &lt;var-def name="ocr_password"&gt;
  		&lt;var-global name="ocr_password"/&gt;
  	&lt;/var-def&gt;
  
	&lt;var-def name="ocr_failed"&gt;
		false
	&lt;/var-def&gt;

	&lt;var-def name="xml_export_format_flag"&gt;
		false
	&lt;/var-def&gt;
  
  	&lt;var-def name="statusResponse"&gt;
      	&lt;case&gt;
			&lt;if condition='${ocr_username.toString().isEmpty() || ocr_password.toString().isEmpty()}'&gt;
				&lt;http url="${ocr_url.toString()}/getTaskStatus?taskId=${ocr_task_id.toString()}" method="get" /&gt;
			&lt;/if&gt;
          	&lt;else&gt;
            	&lt;http url="${ocr_url.toString()}/getTaskStatus?taskId=${ocr_task_id.toString()}" method="get" username="${ocr_username.toString()}" password="${ocr_password.toString()}" /&gt;
          	&lt;/else&gt;
		&lt;/case&gt;
	&lt;/var-def&gt;
    &lt;log&gt;&lt;template&gt;${statusResponse}&lt;/template&gt;&lt;/log&gt;
	&lt;var-def name="taskStatus"&gt;
      	&lt;xpath expression="string(//response/task/@status)"&gt;
			&lt;var name="statusResponse" /&gt;
		&lt;/xpath&gt;
	&lt;/var-def&gt;

	&lt;case&gt;
&lt;!--		&lt;if
			condition='${!"Completed".equals(taskStatus.toString()) @and !"ProcessingFailed".equals(taskStatus.toString())}'&gt;
			&lt;release time-in-seconds="30" /&gt;
			&lt;exit /&gt;
		&lt;/if&gt;--&gt;

		&lt;if condition='${"ProcessingFailed".equals(taskStatus.toString())}'&gt;
			&lt;script&gt;&lt;![CDATA[
				sys.defineVariable("ocr_failed", true);
				sys.defineVariable("ocr_failed_response", statusResponse);
			]]&gt;&lt;/script&gt;
		&lt;/if&gt;

		&lt;if condition='${"Completed".equals(taskStatus.toString())}'&gt;

			&lt;script language="groovy"&gt;&lt;![CDATA[
				import groovy.json.JsonSlurper;

				List export_format_list = Arrays.asList(no_cached_export_format.toString().split(","));
				sys.defineVariable("export_format_list", export_format_list);

				List&lt;Map&gt; ocr_result_list = new ArrayList();
				sys.defineVariable("ocr_result_list", ocr_result_list);

				def original_document_url_object = new java.net.URI(original_document_url.toString())
				def original_document_name = original_document_url_object.getPath().tokenize('/').last().tokenize('.').first()
				
				sys.defineVariable("original_document_name", original_document_name);
			]]&gt;&lt;/script&gt;

			&lt;loop item="format"&gt;
				&lt;list&gt;
					&lt;var name="export_format_list" /&gt;
				&lt;/list&gt;
				&lt;body&gt;
					&lt;case&gt;
						&lt;if condition='${export_format_list.toList().indexOf(format) == 0}'&gt;
							&lt;var-def name="result_url"&gt;
								&lt;xpath expression="string(//response/task/@resultUrl)"&gt;
									&lt;var name="statusResponse" /&gt;
								&lt;/xpath&gt;
							&lt;/var-def&gt;
						&lt;/if&gt;

						&lt;if condition='${export_format_list.toList().indexOf(format) == 1}'&gt;
							&lt;var-def name="result_url"&gt;
								&lt;xpath expression="string(//response/task/@resultUrl2)"&gt;
									&lt;var name="statusResponse" /&gt;
								&lt;/xpath&gt;
							&lt;/var-def&gt;
						&lt;/if&gt;

						&lt;if condition='${export_format_list.toList().indexOf(format) == 2}'&gt;
							&lt;var-def name="result_url"&gt;
								&lt;xpath expression="string(//response/task/@resultUrl3)"&gt;
									&lt;var name="statusResponse" /&gt;
								&lt;/xpath&gt;
							&lt;/var-def&gt;
						&lt;/if&gt;
					&lt;/case&gt;

					&lt;case&gt;
						&lt;if condition='${export_format_list.toList().indexOf(format) @lt 3}'&gt;
							&lt;var-def name="result"&gt;
								&lt;http url="${result_url}" charset="UTF-8" /&gt;
							&lt;/var-def&gt;

							&lt;case&gt;
								&lt;if condition='${format.toString().equals("html")}'&gt;
									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-html.html&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;text/html&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
								&lt;if condition='${format.toString().equals("pdfSearchable")}'&gt;
									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-pdf.pdf&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;application/pdf&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
								&lt;if condition='${format.toString().equals("xml")}'&gt;
									&lt;var-def name="xml_export_format_flag"&gt;
										&lt;script return="flag"&gt;&lt;![CDATA[
											String flag = "true";
										]]&gt;&lt;/script&gt;
									&lt;/var-def&gt;

									&lt;var-def name="result"&gt;
										&lt;script return="res"&gt;&lt;![CDATA[
											// Removing BOM
											String res = result.toString().replaceAll("^\uFEFF", "");
										]]&gt;&lt;/script&gt;
									&lt;/var-def&gt;

									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-xml.xml&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;text/xml&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
								&lt;if condition='${format.toString().equals("xmlForCorrectedImage")}'&gt;
									&lt;var-def name="xml_export_format_flag"&gt;
										&lt;script return="flag"&gt;&lt;![CDATA[
											String flag = "true";
										]]&gt;&lt;/script&gt;
									&lt;/var-def&gt;

									&lt;var-def name="result"&gt;
										&lt;script return="res"&gt;&lt;![CDATA[
											// Removing BOM
											String res = result.toString().replaceAll("^\uFEFF", "");
										]]&gt;&lt;/script&gt;
									&lt;/var-def&gt;

									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-xmlForCorrectedImage.xml&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;text/xml&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
								&lt;if condition='${format.toString().equals("txt")}'&gt;
									&lt;var-def name="path"&gt;
										&lt;template&gt;${bp_run_id}/${document_uuid}/${original_document_name}-txt.txt&lt;/template&gt;
									&lt;/var-def&gt;

									&lt;var-def name="type"&gt;
										&lt;template&gt;text/plain&lt;/template&gt;
									&lt;/var-def&gt;
								&lt;/if&gt;
							&lt;/case&gt;

							&lt;var-def name="ocr_document_url"&gt;
								&lt;s3 bucket="${s3_bucket_name}"&gt;
									&lt;s3-put-public path="${path}" content="${result}"
										content-type="${type}" content-disposition="inline" /&gt;
								&lt;/s3&gt;
							&lt;/var-def&gt;

							&lt;script language="groovy"&gt;&lt;![CDATA[
								def ocr_document_name = ocr_document_url.toString().tokenize('/').last().tokenize('.').first()
							
								Map map = new HashMap();
								
								map.put("original_document_url", original_document_url.toString());
								map.put("original_document_name", original_document_name.toString());
								map.put("ocr_document_url", ocr_document_url.toString());
								map.put("ocr_document_name", ocr_document_name);
								map.put("ocr_export_format", format.toString());
								map.put("ocr_document_format", path.toString().substring(path.toString().lastIndexOf(".") + 1, path.toString().length()));

								ocr_result_list.toList().add(map);
							]]&gt;&lt;/script&gt;
						&lt;/if&gt;
					&lt;/case&gt;

				&lt;/body&gt;
			&lt;/loop&gt;

			&lt;script language="groovy"&gt;&lt;![CDATA[
				import com.google.gson.Gson;

				Gson gson = new Gson();
				String result_json = gson.toJson(ocr_result_list.toList());
				sys.defineVariable("ocr_json", result_json);
			]]&gt;&lt;/script&gt;
		&lt;/if&gt;
	&lt;/case&gt;

	&lt;export include-original-data="true"&gt;
		&lt;single-column name="xml_export_format_flag" value="${xml_export_format_flag}" /&gt;
		&lt;single-column name="ocr_failed" value="${ocr_failed}" /&gt;
		&lt;single-column name="ocr_failed_response" value="${ocr_failed_response}" /&gt;
		&lt;single-column name="ocr_json" value="${ocr_json}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                 <description/>
                                 <includedConfigs/>
                                 <inclusionCode>828f5347-23ea-4771-bff5-a9136bb4b985</inclusionCode>
                                 <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>BASIC</machineWorkSettingType>
                                 <name>Response from OCR</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>828f5347-23ea-4771-bff5-a9136bb4b985</uuid>
                                 <version>
                                    <componentUuid>3727c3e8-e882-4658-9d0e-c71fa9b85bfe</componentUuid>
                                    <incrementalVersion>1.58</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-06-21T06:52:38Z</lastModified>
                                    <versionUuid>648584d7-e4d4-45fd-9ee7-fbd1f58c58b2</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>Response from OCR</title>
                              <type>SINGLE</type>
                              <uuid>d44c903c-8fd2-47bd-a3ed-0f4013b6a2a6</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>8937f52e-41ba-4941-8588-c5cc81fe025a</componentUuid>
                                 <incrementalVersion>1.35</incrementalVersion>
                                 <lastInChain>false</lastInChain>
                                 <lastModified>2018-06-21T06:52:38Z</lastModified>
                                 <versionUuid>35af9d67-8bf5-4022-b9b9-c1f0398a768c</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>13</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>1f056649-c154-4328-8fd0-136abe0652d7</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content>#RuleContext.APPROVE_ALL_RULE</content>
                              <name>Approve All</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>88b6c495-0d8a-442f-8f94-ff22fcdb4a4d</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <description>Miscellaneous Tasks</description>
                              <executingType>HUMAN</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <question>
                                 <answers>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>TOOD</answer>
                                       <answerCode>ocr_document_url</answerCode>
                                       <answerHtml/>
                                       <answerTypeObject>
                                          <answerTypeGroup>ADVANCED</answerTypeGroup>
                                          <code>INFO_EXTRACTION</code>
                                          <description/>
                                          <optionsAvailable>true</optionsAvailable>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>false</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>false</showForMachineConfig>
                                          <title>Information Extraction</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <category/>
                                       <constantable>false</constantable>
                                       <defaultValue/>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <htmlClasses/>
                                       <lastModified>2018-05-29T09:25:58Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <options>{"ieExtractorType":"ORIGINAL_APPEARANCE_EXTRACTOR"}</options>
                                       <originalDocumentSource>${question.data['original_document_url']}</originalDocumentSource>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>false</required>
                                       <sequenceNumber>1</sequenceNumber>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>Text</answer>
                                       <answerCode>answ_test_text</answerCode>
                                       <answerHtml/>
                                       <answerTypeObject>
                                          <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                          <code>FREE_TEXT</code>
                                          <description/>
                                          <optionsAvailable>false</optionsAvailable>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>true</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>true</showForMachineConfig>
                                          <title>Free Text</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <constantable>false</constantable>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <hotKey>T</hotKey>
                                       <lastModified>2018-06-04T09:38:58Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <parentAnswer>
                                          <allowNA>false</allowNA>
                                          <answer>TOOD</answer>
                                          <answerCode>ocr_document_url</answerCode>
                                          <answerHtml/>
                                          <answerTypeObject>
                                             <answerTypeGroup>ADVANCED</answerTypeGroup>
                                             <code>INFO_EXTRACTION</code>
                                             <description/>
                                             <optionsAvailable>true</optionsAvailable>
                                             <showDefaultValue>true</showDefaultValue>
                                             <showForFieldScheme>false</showForFieldScheme>
                                             <showForHumanTask>true</showForHumanTask>
                                             <showForMachineConfig>false</showForMachineConfig>
                                             <title>Information Extraction</title>
                                             <valueType>SINGLEVALUE</valueType>
                                          </answerTypeObject>
                                          <appendDataStoreOptions>false</appendDataStoreOptions>
                                          <autocompleteField>false</autocompleteField>
                                          <category/>
                                          <constantable>false</constantable>
                                          <defaultValue/>
                                          <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                          <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                          <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                          <htmlClasses/>
                                          <lastModified>2018-05-29T09:25:58Z</lastModified>
                                          <letCustomValues>false</letCustomValues>
                                          <manualField>false</manualField>
                                          <multiValue>false</multiValue>
                                          <options>{"ieExtractorType":"ORIGINAL_APPEARANCE_EXTRACTOR"}</options>
                                          <originalDocumentSource>${question.data['original_document_url']}</originalDocumentSource>
                                          <percentRequired>false</percentRequired>
                                          <range>false</range>
                                          <required>false</required>
                                          <sequenceNumber>1</sequenceNumber>
                                          <useBlocks>false</useBlocks>
                                          <useEmptyCell>false</useEmptyCell>
                                       </parentAnswer>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>true</required>
                                       <sequenceNumber>2</sequenceNumber>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                 </answers>
                                 <assignmentDuration>1800000</assignmentDuration>
                                 <assignmentLimit>1</assignmentLimit>
                                 <attrs>{"lnaa":"Run","lnam":"Tasks","lna":"0"}</attrs>
                                 <autoApprovalDelay>432000000</autoApprovalDelay>
                                 <automaticallyProcessed>0</automaticallyProcessed>
                                 <blockSize>1</blockSize>
                                 <constQualifiedWorkers>false</constQualifiedWorkers>
                                 <currency>USD</currency>
                                 <description>Miscellaneous Tasks</description>
                                 <dynamicTaskRenderingDisabled>true</dynamicTaskRenderingDisabled>
                                 <expiredTime>2592000000</expiredTime>
                                 <faqItems/>
                                 <frameHeight>2500</frameHeight>
                                 <geolocationEnabled>false</geolocationEnabled>
                                 <instructionItems/>
                                 <keywords>Miscellaneous Tasks</keywords>
                                 <maxAssignments>1</maxAssignments>
                                 <moderation>false</moderation>
                                 <moderationFlag>false</moderationFlag>
                                 <origination>CREATED_MANUALLY</origination>
                                 <pendingAssignmentsLimit>10</pendingAssignmentsLimit>
                                 <qualificationInstruction/>
                                 <qualificationRequirements/>
                                 <qualificationRequirementsRequiredForPreview>false</qualificationRequirementsRequiredForPreview>
                                 <qualificationTasks>20</qualificationTasks>
                                 <qualificationTraining>false</qualificationTraining>
                                 <questionRuleMaps>
                                    <questionRuleMap>
                                       <businessRule>
                                          <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer(1);

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer(1);
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double(100/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 70 if gold accuracy goes up &lt; 75 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; (75/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 70);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 80 if gold accuracy goes up &gt;= 75 percents and &lt; 90"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (75/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; (90 / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 80);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 95 if gold accuracy goes up &gt;= 90 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (90 / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 95);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                          <name>Start with one assignment 1+0 pay all</name>
                                          <paramValues>{"NORMAL_ACCURACY_LEVEL_SCORE":"80","NORMAL_ACCURACY_LEVEL_UPPER_LIMIT":"90","WORST_ACCURACY_LEVEL_SCORE":"70","MAJORITY_HIT_THRESHOLD":"100","SUPER_ACCURACY_LEVEL_LOWER_LIMIT":"90","WORST_ACCURACY_LEVEL_UPPER_LIMIT":"75","SUPER_ACCURACY_LEVEL_SCORE":"95","NORMAL_ACCURACY_LEVEL_LOWER_LIMIT":"75","MAJORITY_VALUE":"1","CHECK_EVERY":"5","MAX_ASSIGNMENT_LIMIT":"1"}</paramValues>
                                          <ruleType>DROOLS</ruleType>
                                          <ruleTypeUI>Adjudication</ruleTypeUI>
                                          <template>
                                             <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer({{MAJORITY_VALUE}});

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer({{MAX_ASSIGNMENT_LIMIT}});
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double({{MAJORITY_HIT_THRESHOLD}}/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{WORST_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &lt; {{WORST_ACCURACY_LEVEL_UPPER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{WORST_ACCURACY_LEVEL_UPPER_LIMIT}}/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{WORST_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{NORMAL_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}} percents and &lt; {{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}}"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}}/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}} / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{NORMAL_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{SUPER_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{SUPER_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                             <description>Get qualified workers: pay if ${MAJORITY_VALUE} correct answers, start with 1 assignment, extend to maximum of ${MAX_ASSIGNMENT_LIMIT} assignments. Set qualification scores depending on gold accuracy.</description>
                                             <name>Start with 1 assignment X+0 rule (pay all)</name>
                                             <params>
                                                <param>
                                                   <code>MAJORITY_HIT_THRESHOLD</code>
                                                   <defaultValue>100</defaultValue>
                                                   <description>Percent (from 0 to 100) of correct answers when  majority is found</description>
                                                   <name>Percent of correct answers</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>NORMAL_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                   <defaultValue>75</defaultValue>
                                                   <description>Normal accuracy level lower limit in percents inclusive</description>
                                                   <name>Normal accuracy level lower limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>SUPER_ACCURACY_LEVEL_SCORE</code>
                                                   <defaultValue>95</defaultValue>
                                                   <description>Qualification score will be given to a worker who has demonstrated a super accuracy</description>
                                                   <name>Super accuracy level score</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>NORMAL_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                   <defaultValue>90</defaultValue>
                                                   <description>Normal accuracy level upper limit in percents exclusive</description>
                                                   <name>Normal accuracy level upper limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>NORMAL_ACCURACY_LEVEL_SCORE</code>
                                                   <defaultValue>80</defaultValue>
                                                   <description>Qualification score will be given to a worker who has demonstrated a normal accuracy</description>
                                                   <name>Normal accuracy level score</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>MAJORITY_VALUE</code>
                                                   <defaultValue>1</defaultValue>
                                                   <description>Number of correct answers</description>
                                                   <name>Majority value</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>CHECK_EVERY</code>
                                                   <defaultValue>5</defaultValue>
                                                   <description>Check every i-th gold question when evaluating qualification score</description>
                                                   <name>Check every i-th gold question</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>WORST_ACCURACY_LEVEL_SCORE</code>
                                                   <defaultValue>70</defaultValue>
                                                   <description>Qualification score will be given to a worker who has demonstrated a low accuracy</description>
                                                   <name>Worst accuracy level score</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>SUPER_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                   <defaultValue>90</defaultValue>
                                                   <description>Super accuracy level lower limit in percents inclusive, upper limit is considered as 100</description>
                                                   <name>Super accuracy level lower limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>WORST_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                   <defaultValue>75</defaultValue>
                                                   <description>Worst accuracy level upper limit in percents exclusive, lower limit is considered as 0</description>
                                                   <name>Worst accuracy level upper limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>MAX_ASSIGNMENT_LIMIT</code>
                                                   <defaultValue>1</defaultValue>
                                                   <description>Maximum number of assignments</description>
                                                   <name>Max assignments limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                             </params>
                                          </template>
                                          <uuid>25d70ccd-5743-11e8-9976-0ae8ba3240ae</uuid>
                                          <workflowRuleMode>ADVANCED</workflowRuleMode>
                                       </businessRule>
                                    </questionRuleMap>
                                 </questionRuleMaps>
                                 <radiusSelector>ExactLocation</radiusSelector>
                                 <randomizeAnswers>false</randomizeAnswers>
                                 <recursiveThreshold>1</recursiveThreshold>
                                 <restrictedCountries/>
                                 <taskNotificationSchedule>IMMEDIATE</taskNotificationSchedule>
                                 <templates>
                                    <template>
                                       <code/>
                                       <content>&lt;#include "extras.ftl" parse=true/&gt;
&lt;#include "html.ftl" parse=true/&gt;
&lt;#include "answers.ftl" parse=true/&gt;
&lt;#assign FEEDBACK_ENABLED = true&gt;
&lt;!-- v 1.9 --&gt;
&lt;@hit contentCss="${applicationResourceUrl}/workfusion-resources/saas/ms/ms.bootstrap.min.css"&gt;
&lt;@script src="${applicationResourceUrl}/workfusion-resources/bootstrap/js/bootstrap-tab.js"/&gt;  
  
&lt;style type="text/css"&gt;
    document {
        background: none !important;
        overflow: visible!important;
        padding: 0 !important;
        position: absolute !important;
        left: 0;
        top: 0;
        width: 100%;
    }
    page {
        box-shadow: none !important;
        background: none !important;
        padding: 0 !important;
        margin: 0 !important;
        overflow: visible!important;
        height: 0 !important;
    }
    cell, document td {
        border: 0 !important;
    }
    block[blocktype="Picture"] {
        opacity: 1 !important;
        background: none !important;
    }
    .hidden_field {display:none; }
    .hidden {display:inline-block !important;}
    .extraction-content {padding: 0 !important;}
  	.ie-view-source {
  		display: none;
  	}
  	.ie-view-source + .ie-zoom-in-zoom-out-separator {
  		display: none !important;
  	}
  	.popup-original-document.ml10 {
  		margin-left: 0 !important;
  	}
    .opacity-control {
        float: left;
        line-height: 40px;
        margin-left: 3px;
    }
    .opacity-control span {
        display: inline-block;
    }
    #rangeInput {
        width: 100px;
        box-shadow: none;
        margin: -1px 0 0 10px;
        border: 0;
    }
    #rangeInput::-moz-focus-outer {
        border: 0;
    }
&lt;/style&gt;
 
&lt;script type="text/javascript"&gt;
    $(document).ready(function() {
        if (document.getElementsByClassName('submit-btn').length) {
            var originalSubmitEvent = document.getElementsByClassName('submit-btn')[0].onclick;
            document.getElementsByClassName('submit-btn')[0].onclick = function(){
                preprocessAppendOrder();
                originalSubmitEvent();
            }
        }
       
        var originalOnTextContainerLoad = ExtractionAnswerController.prototype.onTextContainerLoad;
        ExtractionAnswerController.prototype.onTextContainerLoad = function() {
            originalOnTextContainerLoad.apply(this, arguments);
            scrollingDiv=document.getElementsByClassName('extraction-body')[0];
          	divTop = scrollingDiv.offsetTop;
            while (scrollingDiv.offsetParent) {
            	scrollingDiv = scrollingDiv.offsetParent;
                divTop += scrollingDiv.offsetTop;
            }
            scrollingDiv=document.getElementsByClassName('extraction-body')[0];
            divArray = scrollingDiv.getElementsByTagName("div");
            divSizes(null);
            document.onscroll=divSizes;
            scrollingDiv.onscroll=divSizes;
            document.onkeyup=keyupHandler;
            scrollingDiv.onkeyup=keyupHandler;
            var $textContainer = ExtractionAnswer.getExtractionController().$textContainer;
            if ($textContainer.find('document') &amp;&amp; $textContainer.find('document').attr('id') === 'TOOD') {
                initOpacity();
                var $page = $textContainer.find('page').eq(0);
                var scale = parseFloat((1/(parseInt($page.attr('width'))/$page.width())).toFixed(1));
                $textContainer.css({'transform':'scaleX(' + scale +') scaleY(' + scale + ') translateZ(0)'});
      		}
        };
    });
  
    var OpacityElements = {
        image: $([]),
        textContainer: $([])
    };
  
    function keyupHandler(){
       try {
         if (event.keyCode==67){
         	document.getElementById('checkInput').checked=!document.getElementById('checkInput').checked;
            if (document.getElementById('checkInput').checked) {
              OpacityElements.image.css('opacity', 1);
        	} else {
              OpacityElements.image.css('opacity', 0);
        	}

            var divArray=scrollingDiv.getElementsByClassName("n");
        	var i;
        	for (i in divArray) {
          		var divWithText = divArray[i];
      			if (document.getElementById('checkInput').checked) {
              		divWithText.style.opacity="0";
        		} else {
              		divWithText.style.opacity="1";
        		}
        	}
         }
       } catch (e){
       }
    }

    var divTop;
    var divArray;
    var scrollingDiv;
    var isComputing = false;
    var counter = 0;
    var isWidthChanged = false;
    var elementSet = new Set();

    function divSizes(ev) {
    	if (!isComputing) {
        	counter++;
            isComputing = true;
            try {
                if (ev!=null)
                	ev.cancelBubble=true;
            	
                var i;
                isWidthChanged = false;
                for (i in divArray) {
                	try {
                    	var divWithText = divArray[i];
                    	if (!elementSet.has(divWithText)) {
                        	if (elementInViewport(divWithText)) {
                        		divSize(divWithText);
                        	}
                    	}
                    } catch (ex) {
                    }
                }
            } catch (e) {
            }
            isComputing = false;
        }
    }

                    function divSize(divWithText) {
                    	try {
                    		if (divWithText.className == "n") {
                    			var divWithTextFontHeight = divWithText.style.fontSize.replace("px", "");
                    			var divWithTextWidth = divWithText.style.width.replace("px", "");
                    			var divWithTextScrollWidth = divWithText.scrollWidth;
                    			var divWithTextHeight = divWithText.style.height.replace("px", "");
                    			var divWithTextScrollHeight = divWithText.scrollHeight;
                                var widthDiff=divWithTextScrollWidth-divWithTextWidth;
                                var heightDiff=divWithTextScrollHeight-divWithTextHeight;

                              if ((widthDiff&gt;0) || (heightDiff&gt;0)) {
                    				var updatedFontSizeWidth = divWithTextFontHeight * divWithTextWidth / divWithTextScrollWidth;
                    				var updatedFontSizeHeight = divWithTextFontHeight * divWithTextHeight / divWithTextScrollHeight;
                    				var updatedFontSize = Math.min(updatedFontSizeWidth, updatedFontSizeHeight);
                    				divWithText.style.fontSize = updatedFontSize + "px";
                          			elementSet.add(divWithText);
                    				isWidthChanged = true;
                    			}
                    		}
                    	}
                    	catch (e) {
                    	}
                    }

                    function elementInViewport(inputElement) {
                      	try{

                        var startInputElement=inputElement;  
                      	var top = inputElement.offsetTop;
                    	var height = inputElement.offsetHeight;
                    	while (inputElement.offsetParent) {
                    		inputElement = inputElement.offsetParent;
                    		top += inputElement.offsetTop;
                    	}
                        var windowPageYOffset=window.pageYOffset+scrollingDiv.scrollTop+divTop;
                        return (top &gt;= windowPageYOffset &amp;&amp; /*left &gt;= windowPageXOffset &amp;&amp;*/ (top + height) &lt;= (windowPageYOffset/10*15 + window.innerHeight) /*&amp;&amp; (left + width) &lt;= (windowPageXOffset + frameWindow.innerWidth)*/);
                        } catch (e){
                        	return false;
                        }
                    }

   
    function initOpacity() {
        var template = $('&lt;div class="toolbar-boundary"&gt;&lt;/div&gt;&lt;div class="opacity-control"&gt;&lt;label accesskey="c"&gt;Original document:&lt;/label&gt;&lt;input type="checkbox" id="checkInput" value="yes"/&gt;&lt;/div&gt;');
        $('.extraction-search').before(template);
        OpacityElements.image = $('.extraction-content img');
        OpacityElements.textContainer = $('.extraction-content page');
      	OpacityElements.image.css('opacity', 0);
        $('#checkInput').on('click', changeOpacity);
        document.getElementById('checkInput').focus();
        var divArray=scrollingDiv.getElementsByClassName("n");
        var i;
        for (i in divArray) {
          try{
          var divWithText = divArray[i];
          divWithText.style.opacity="1";
          } catch (e){
          }
        }
    }
   
    function changeOpacity() {
        try {
        var i;
        var divArray=scrollingDiv.getElementsByClassName("n");
      		if (this.checked) {
              OpacityElements.image.css('opacity', 1);
        	} else {
              OpacityElements.image.css('opacity', 0);
        	}
        for (i in divArray) {
          var divWithText = divArray[i];
      		if (this.checked) {
              divWithText.style.opacity="0";
        	} else {
              divWithText.style.opacity="1";
        	}
        }
        } catch (e){
        }
    }
   
    function preprocessAppendOrder() {
        var appendOrder = 0;
        var controllers = Answers.getTaggingControllers();
        controllers.forEach(function(controller) {
            var $tags = DocumentContainer.getControllerTag(controller);
            if ($tags.length) {
                for (var i = 0, l = $tags.length; i &lt; l; i++) {
                    $tags.eq(i).attr('appendorder', nextAppendOrder());
                }
            }
        });
       
        function nextAppendOrder () {
            return ++appendOrder;
        }
    }
&lt;/script&gt;
  
&lt;@instructions title="&lt;h3 id='TaggingOverOriginalDocument-Step6:[TOOD][HT][BASE]TaggingOverOriginalDocument'&gt;[TOOD][MT][BASE] Tagging Over Original Document&lt;/h3&gt;"&gt;
  &lt;!--- editable content --&gt;
  &lt;@editable id="__INSTRUCTIONS__"&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
&lt;/@instructions&gt;
&lt;@form&gt;
&lt;#if questions??&gt;
    &lt;div class="thumbnail"&gt;
    &lt;#list questions as question&gt;
      &lt;@report question=question includeAll=true/&gt;
      &lt;div style="position:relative;margin:2px 0px" class="block question"&gt;
           &lt;div style="position:absolute;top:0px;right:0px;background-color:#e0e0e0;padding:1px 4px;border: 1px solid #C0C0C0;border-radius: 0px" class="number"&gt;
                &lt;b&gt;${question_index + 1}&lt;/b&gt;
           &lt;/div&gt;
           &lt;div&gt;
               &lt;div class="place bg-dark"&gt;
                 &lt;@editable id="__DATA__"&gt;&lt;br data-mce-bogus="1"&gt;&lt;/@editable&gt;
               &lt;/div&gt;
               &lt;div class="place"&gt;
                 &lt;@answers question=question/&gt;
               &lt;/div&gt;
            &lt;/div&gt;
      &lt;/div&gt;
    &lt;/#list&gt;
    &lt;/div&gt;
&lt;/#if&gt;
&lt;@submit text="Submit" /&gt;
&lt;/@form&gt;
&lt;/@hit&gt;</content>
                                       <name>[TOOD] Document Tagging Sample</name>
                                       <origination>CREATED_AUTOMATICALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>TASK</type>
                                       <uuid>2d5c5ec6-bfdd-4532-8c4f-27ab54c8ce59</uuid>
                                       <version>
                                          <componentUuid>31fd0d05-0791-4083-b461-db3324593e33</componentUuid>
                                          <incrementalVersion>1.23</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2018-06-27T14:12:43Z</lastModified>
                                          <versionUuid>631a1138-6347-4031-802c-6bee6d9a4db2</versionUuid>
                                       </version>
                                    </template>
                                 </templates>
                                 <title>[TOOD][MT][BASE] Tagging Over Original Document</title>
                                 <useCommonHitCoordinates>false</useCommonHitCoordinates>
                                 <uuid>4289a103-b3e8-47ef-9767-c5a4daa59649</uuid>
                                 <version>
                                    <componentUuid>bf1e2eae-20ae-4948-9aaa-43716e85d596</componentUuid>
                                    <incrementalVersion>1.27</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-06-27T14:12:43Z</lastModified>
                                    <versionUuid>2d036464-b378-4012-9977-8e150c89c359</versionUuid>
                                 </version>
                                 <workSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>HUMAN</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1104</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac8</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac8</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:48Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac8</versionUuid>
                                    </version>
                                    <answers/>
                                    <businessRules>
                                       <businessRule>
                                          <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer(1);

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer(1);
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double(100/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 70 if gold accuracy goes up &lt; 75 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; (75/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 70);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 80 if gold accuracy goes up &gt;= 75 percents and &lt; 90"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (75/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; (90 / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 80);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 95 if gold accuracy goes up &gt;= 90 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (90 / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 95);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                          <name>Start with one assignment 1+0 pay all</name>
                                          <paramValues>{"NORMAL_ACCURACY_LEVEL_SCORE":"80","NORMAL_ACCURACY_LEVEL_UPPER_LIMIT":"90","WORST_ACCURACY_LEVEL_SCORE":"70","MAJORITY_HIT_THRESHOLD":"100","SUPER_ACCURACY_LEVEL_LOWER_LIMIT":"90","WORST_ACCURACY_LEVEL_UPPER_LIMIT":"75","SUPER_ACCURACY_LEVEL_SCORE":"95","NORMAL_ACCURACY_LEVEL_LOWER_LIMIT":"75","MAJORITY_VALUE":"1","CHECK_EVERY":"5","MAX_ASSIGNMENT_LIMIT":"1"}</paramValues>
                                          <ruleType>DROOLS</ruleType>
                                          <ruleTypeUI>Adjudication</ruleTypeUI>
                                          <template>
                                             <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer({{MAJORITY_VALUE}});

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer({{MAX_ASSIGNMENT_LIMIT}});
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double({{MAJORITY_HIT_THRESHOLD}}/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{WORST_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &lt; {{WORST_ACCURACY_LEVEL_UPPER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{WORST_ACCURACY_LEVEL_UPPER_LIMIT}}/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{WORST_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{NORMAL_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}} percents and &lt; {{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}}"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}}/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}} / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{NORMAL_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{SUPER_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{SUPER_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                             <description>Get qualified workers: pay if ${MAJORITY_VALUE} correct answers, start with 1 assignment, extend to maximum of ${MAX_ASSIGNMENT_LIMIT} assignments. Set qualification scores depending on gold accuracy.</description>
                                             <name>Start with 1 assignment X+0 rule (pay all)</name>
                                             <params>
                                                <param>
                                                   <code>MAJORITY_HIT_THRESHOLD</code>
                                                   <defaultValue>100</defaultValue>
                                                   <description>Percent (from 0 to 100) of correct answers when  majority is found</description>
                                                   <name>Percent of correct answers</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>NORMAL_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                   <defaultValue>75</defaultValue>
                                                   <description>Normal accuracy level lower limit in percents inclusive</description>
                                                   <name>Normal accuracy level lower limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>SUPER_ACCURACY_LEVEL_SCORE</code>
                                                   <defaultValue>95</defaultValue>
                                                   <description>Qualification score will be given to a worker who has demonstrated a super accuracy</description>
                                                   <name>Super accuracy level score</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>NORMAL_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                   <defaultValue>90</defaultValue>
                                                   <description>Normal accuracy level upper limit in percents exclusive</description>
                                                   <name>Normal accuracy level upper limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>NORMAL_ACCURACY_LEVEL_SCORE</code>
                                                   <defaultValue>80</defaultValue>
                                                   <description>Qualification score will be given to a worker who has demonstrated a normal accuracy</description>
                                                   <name>Normal accuracy level score</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>MAJORITY_VALUE</code>
                                                   <defaultValue>1</defaultValue>
                                                   <description>Number of correct answers</description>
                                                   <name>Majority value</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>CHECK_EVERY</code>
                                                   <defaultValue>5</defaultValue>
                                                   <description>Check every i-th gold question when evaluating qualification score</description>
                                                   <name>Check every i-th gold question</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>WORST_ACCURACY_LEVEL_SCORE</code>
                                                   <defaultValue>70</defaultValue>
                                                   <description>Qualification score will be given to a worker who has demonstrated a low accuracy</description>
                                                   <name>Worst accuracy level score</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>SUPER_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                   <defaultValue>90</defaultValue>
                                                   <description>Super accuracy level lower limit in percents inclusive, upper limit is considered as 100</description>
                                                   <name>Super accuracy level lower limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>WORST_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                   <defaultValue>75</defaultValue>
                                                   <description>Worst accuracy level upper limit in percents exclusive, lower limit is considered as 0</description>
                                                   <name>Worst accuracy level upper limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>MAX_ASSIGNMENT_LIMIT</code>
                                                   <defaultValue>1</defaultValue>
                                                   <description>Maximum number of assignments</description>
                                                   <name>Max assignments limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                             </params>
                                          </template>
                                          <uuid>25d70ccd-5743-11e8-9976-0ae8ba3240ae</uuid>
                                          <workflowRuleMode>ADVANCED</workflowRuleMode>
                                       </businessRule>
                                    </businessRules>
                                    <isPrivate>false</isPrivate>
                                    <items>
                                       <item>
                                          <type>TIME_PER_ASSIGNMENT</type>
                                          <value>1800000</value>
                                       </item>
                                       <item>
                                          <type>TITLE</type>
                                          <value>Miscellaneous Tasks</value>
                                       </item>
                                       <item>
                                          <type>HIT_EXPIRES_IN</type>
                                          <value>2592000000</value>
                                       </item>
                                       <item>
                                          <type>AUTOMATICALLY_APPROVED</type>
                                          <value>432000000</value>
                                       </item>
                                       <item>
                                          <type>RECOMMENDATION_TAGS</type>
                                          <value>["information_extraction"]</value>
                                       </item>
                                    </items>
                                    <template>
                                       <code/>
                                       <content>&lt;#include "extras.ftl" parse=true/&gt;
&lt;#include "html.ftl" parse=true/&gt;
&lt;#include "answers.ftl" parse=true/&gt;
&lt;#assign FEEDBACK_ENABLED = true&gt;

&lt;@hit contentCss="${applicationResourceUrl}/workfusion-resources/saas/ms/ms.bootstrap.min.css"&gt;
&lt;@script src="${applicationResourceUrl}/workfusion-resources/bootstrap/js/bootstrap-tab.js"/&gt;  
  

  
&lt;@instructions title="&lt;h2&gt;BLANK&lt;/h2&gt;"&gt;
  &lt;!--- editable content --&gt;
  &lt;@editable id="__INSTRUCTIONS__"&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
&lt;/@instructions&gt;
&lt;@form&gt;
&lt;#if questions??&gt;
    &lt;div class="thumbnail"&gt;
    &lt;#list questions as question&gt;
      &lt;@report question=question includeAll=true/&gt;
      &lt;div style="position:relative;margin:2px 0px" class="block question"&gt;
           &lt;div style="position:absolute;top:0px;right:0px;background-color:#e0e0e0;padding:1px 4px;border: 1px solid #C0C0C0;border-radius: 0px" class="number"&gt;
                &lt;b&gt;${question_index + 1}&lt;/b&gt;
           &lt;/div&gt;
           &lt;div&gt;
               &lt;div class="place bg-dark"&gt;
                 &lt;@editable id="__DATA__"&gt;${question.data.blank} &lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
               &lt;/div&gt;
               &lt;div class="place"&gt;
                 &lt;@answers question=question/&gt;
               &lt;/div&gt;
            &lt;/div&gt;
      &lt;/div&gt;
    &lt;/#list&gt;
    &lt;/div&gt;
&lt;/#if&gt;
&lt;@submit text="Submit" /&gt;
&lt;/@form&gt;
&lt;/@hit&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</versionUuid>
                                       </version>
                                    </template>
                                 </workSetting>
                              </question>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>[TOOD][MT][BASE] Tagging Over Original Document</title>
                              <type>SINGLE</type>
                              <uuid>5260cf31-b176-416d-be26-170da732f9c5</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>62191fd1-b81f-40d6-8580-7d98d088d0d1</componentUuid>
                                 <incrementalVersion>1.32</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-06-27T14:12:43Z</lastModified>
                                 <versionUuid>b61a413a-316b-436f-a6d9-d36e605d7e19</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>14</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>8195a10e-b7a0-444d-941e-8caf6d4b6c8f</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content>#RuleContext.APPROVE_ALL_RULE</content>
                              <name>Approve All</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>eeae211f-1465-4da7-9de7-9ab4eef6901c</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <description>Miscellaneous Tasks</description>
                              <executingType>HUMAN</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <question>
                                 <answers>
                                    <answer>
                                       <allowNA>false</allowNA>
                                       <answer>Standard</answer>
                                       <answerCode>ocr_document_url</answerCode>
                                       <answerHtml/>
                                       <answerTypeObject>
                                          <answerTypeGroup>ADVANCED</answerTypeGroup>
                                          <code>INFO_EXTRACTION</code>
                                          <description/>
                                          <optionsAvailable>true</optionsAvailable>
                                          <showDefaultValue>true</showDefaultValue>
                                          <showForFieldScheme>false</showForFieldScheme>
                                          <showForHumanTask>true</showForHumanTask>
                                          <showForMachineConfig>false</showForMachineConfig>
                                          <title>Information Extraction</title>
                                          <valueType>SINGLEVALUE</valueType>
                                       </answerTypeObject>
                                       <appendDataStoreOptions>false</appendDataStoreOptions>
                                       <autocompleteField>false</autocompleteField>
                                       <category/>
                                       <constantable>false</constantable>
                                       <defaultValue/>
                                       <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                       <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                       <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                       <htmlClasses/>
                                       <lastModified>2018-05-29T09:25:59Z</lastModified>
                                       <letCustomValues>false</letCustomValues>
                                       <manualField>false</manualField>
                                       <multiValue>false</multiValue>
                                       <options>{"ieExtractorType":"ORIGINAL_APPEARANCE_EXTRACTOR"}</options>
                                       <originalDocumentSource>${question.data.original_document_url}</originalDocumentSource>
                                       <percentRequired>false</percentRequired>
                                       <range>false</range>
                                       <required>false</required>
                                       <sequenceNumber>1</sequenceNumber>
                                       <useBlocks>false</useBlocks>
                                       <useEmptyCell>false</useEmptyCell>
                                    </answer>
                                 </answers>
                                 <assignmentDuration>1800000</assignmentDuration>
                                 <assignmentLimit>1</assignmentLimit>
                                 <attrs>{"lnaa":"Run","lnam":"Tasks","lna":"0"}</attrs>
                                 <autoApprovalDelay>432000000</autoApprovalDelay>
                                 <automaticallyProcessed>0</automaticallyProcessed>
                                 <blockSize>1</blockSize>
                                 <constQualifiedWorkers>false</constQualifiedWorkers>
                                 <currency>USD</currency>
                                 <description>Miscellaneous Tasks</description>
                                 <dynamicTaskRenderingDisabled>true</dynamicTaskRenderingDisabled>
                                 <expiredTime>2592000000</expiredTime>
                                 <faqItems/>
                                 <frameHeight>2500</frameHeight>
                                 <geolocationEnabled>false</geolocationEnabled>
                                 <instructionItems/>
                                 <keywords>Miscellaneous Tasks</keywords>
                                 <maxAssignments>1</maxAssignments>
                                 <moderation>false</moderation>
                                 <moderationFlag>false</moderationFlag>
                                 <origination>CREATED_MANUALLY</origination>
                                 <pendingAssignmentsLimit>10</pendingAssignmentsLimit>
                                 <qualificationInstruction/>
                                 <qualificationRequirements/>
                                 <qualificationRequirementsRequiredForPreview>false</qualificationRequirementsRequiredForPreview>
                                 <qualificationTasks>20</qualificationTasks>
                                 <qualificationTraining>false</qualificationTraining>
                                 <questionRuleMaps>
                                    <questionRuleMap>
                                       <businessRule>
                                          <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer(1);

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer(1);
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double(100/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 70 if gold accuracy goes up &lt; 75 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; (75/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 70);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 80 if gold accuracy goes up &gt;= 75 percents and &lt; 90"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (75/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; (90 / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 80);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 95 if gold accuracy goes up &gt;= 90 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (90 / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 95);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                          <name>Start with one assignment 1+0 pay all</name>
                                          <paramValues>{"NORMAL_ACCURACY_LEVEL_SCORE":"80","NORMAL_ACCURACY_LEVEL_UPPER_LIMIT":"90","WORST_ACCURACY_LEVEL_SCORE":"70","MAJORITY_HIT_THRESHOLD":"100","SUPER_ACCURACY_LEVEL_LOWER_LIMIT":"90","WORST_ACCURACY_LEVEL_UPPER_LIMIT":"75","SUPER_ACCURACY_LEVEL_SCORE":"95","NORMAL_ACCURACY_LEVEL_LOWER_LIMIT":"75","MAJORITY_VALUE":"1","CHECK_EVERY":"5","MAX_ASSIGNMENT_LIMIT":"1"}</paramValues>
                                          <ruleType>DROOLS</ruleType>
                                          <ruleTypeUI>Adjudication</ruleTypeUI>
                                          <template>
                                             <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer({{MAJORITY_VALUE}});

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer({{MAX_ASSIGNMENT_LIMIT}});
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double({{MAJORITY_HIT_THRESHOLD}}/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{WORST_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &lt; {{WORST_ACCURACY_LEVEL_UPPER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{WORST_ACCURACY_LEVEL_UPPER_LIMIT}}/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{WORST_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{NORMAL_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}} percents and &lt; {{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}}"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}}/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}} / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{NORMAL_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{SUPER_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{SUPER_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                             <description>Get qualified workers: pay if ${MAJORITY_VALUE} correct answers, start with 1 assignment, extend to maximum of ${MAX_ASSIGNMENT_LIMIT} assignments. Set qualification scores depending on gold accuracy.</description>
                                             <name>Start with 1 assignment X+0 rule (pay all)</name>
                                             <params>
                                                <param>
                                                   <code>MAJORITY_HIT_THRESHOLD</code>
                                                   <defaultValue>100</defaultValue>
                                                   <description>Percent (from 0 to 100) of correct answers when  majority is found</description>
                                                   <name>Percent of correct answers</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>NORMAL_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                   <defaultValue>75</defaultValue>
                                                   <description>Normal accuracy level lower limit in percents inclusive</description>
                                                   <name>Normal accuracy level lower limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>SUPER_ACCURACY_LEVEL_SCORE</code>
                                                   <defaultValue>95</defaultValue>
                                                   <description>Qualification score will be given to a worker who has demonstrated a super accuracy</description>
                                                   <name>Super accuracy level score</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>NORMAL_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                   <defaultValue>90</defaultValue>
                                                   <description>Normal accuracy level upper limit in percents exclusive</description>
                                                   <name>Normal accuracy level upper limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>NORMAL_ACCURACY_LEVEL_SCORE</code>
                                                   <defaultValue>80</defaultValue>
                                                   <description>Qualification score will be given to a worker who has demonstrated a normal accuracy</description>
                                                   <name>Normal accuracy level score</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>MAJORITY_VALUE</code>
                                                   <defaultValue>1</defaultValue>
                                                   <description>Number of correct answers</description>
                                                   <name>Majority value</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>CHECK_EVERY</code>
                                                   <defaultValue>5</defaultValue>
                                                   <description>Check every i-th gold question when evaluating qualification score</description>
                                                   <name>Check every i-th gold question</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>WORST_ACCURACY_LEVEL_SCORE</code>
                                                   <defaultValue>70</defaultValue>
                                                   <description>Qualification score will be given to a worker who has demonstrated a low accuracy</description>
                                                   <name>Worst accuracy level score</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>SUPER_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                   <defaultValue>90</defaultValue>
                                                   <description>Super accuracy level lower limit in percents inclusive, upper limit is considered as 100</description>
                                                   <name>Super accuracy level lower limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>WORST_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                   <defaultValue>75</defaultValue>
                                                   <description>Worst accuracy level upper limit in percents exclusive, lower limit is considered as 0</description>
                                                   <name>Worst accuracy level upper limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>MAX_ASSIGNMENT_LIMIT</code>
                                                   <defaultValue>1</defaultValue>
                                                   <description>Maximum number of assignments</description>
                                                   <name>Max assignments limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                             </params>
                                          </template>
                                          <uuid>25d70ccd-5743-11e8-9976-0ae8ba3240ae</uuid>
                                          <workflowRuleMode>ADVANCED</workflowRuleMode>
                                       </businessRule>
                                    </questionRuleMap>
                                 </questionRuleMaps>
                                 <radiusSelector>ExactLocation</radiusSelector>
                                 <randomizeAnswers>false</randomizeAnswers>
                                 <recursiveThreshold>1</recursiveThreshold>
                                 <restrictedCountries/>
                                 <taskNotificationSchedule>IMMEDIATE</taskNotificationSchedule>
                                 <templates>
                                    <template>
                                       <code/>
                                       <content>&lt;#include "extras.ftl" parse=true/&gt;
&lt;#include "html.ftl" parse=true/&gt;
&lt;#include "answers.ftl" parse=true/&gt;
&lt;#assign FEEDBACK_ENABLED = true&gt;

&lt;@hit contentCss="${applicationResourceUrl}/workfusion-resources/saas/ms/ms.bootstrap.min.css"&gt;
&lt;@script src="${applicationResourceUrl}/workfusion-resources/bootstrap/js/bootstrap-tab.js"/&gt;  
  

  
&lt;@instructions title="&lt;h2&gt;[Standard] Document Tagging Sample&lt;/h2&gt;"&gt;
  &lt;!--- editable content --&gt;
  &lt;@editable id="__INSTRUCTIONS__"&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
&lt;/@instructions&gt;
&lt;@form&gt;
&lt;#if questions??&gt;
    &lt;div class="thumbnail"&gt;
    &lt;#list questions as question&gt;
      &lt;@report question=question includeAll=true/&gt;
      &lt;div style="position:relative;margin:2px 0px" class="block question"&gt;
           &lt;div style="position:absolute;top:0px;right:0px;background-color:#e0e0e0;padding:1px 4px;border: 1px solid #C0C0C0;border-radius: 0px" class="number"&gt;
                &lt;b&gt;${question_index + 1}&lt;/b&gt;
           &lt;/div&gt;
           &lt;div&gt;
               &lt;div class="place bg-dark"&gt;
                 &lt;@editable id="__DATA__"&gt;Original: &lt;a href="${question.data.original_document_url} " data-mce-href="${question.data.original_document_url}"&gt;${question.data.original_document_url} &lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
               &lt;/div&gt;
               &lt;div class="place"&gt;
                 &lt;@answers question=question/&gt;
               &lt;/div&gt;
            &lt;/div&gt;
      &lt;/div&gt;
    &lt;/#list&gt;
    &lt;/div&gt;
&lt;/#if&gt;
&lt;@submit text="Submit" /&gt;
&lt;/@form&gt;
&lt;/@hit&gt;</content>
                                       <name>[Standard] Document Tagging Sample</name>
                                       <origination>CREATED_AUTOMATICALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>TASK</type>
                                       <uuid>31d2d9fa-a0e1-4aa8-a3ba-2aab1cf3cce9</uuid>
                                       <version>
                                          <componentUuid>cc95da31-c1db-4251-9423-85ec27af2d6b</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2018-05-29T09:25:59Z</lastModified>
                                          <versionUuid>beed6d61-b8bb-4873-90a7-5dd5b6de6a6d</versionUuid>
                                       </version>
                                    </template>
                                 </templates>
                                 <title>[Standard] Document Tagging Sample</title>
                                 <useCommonHitCoordinates>false</useCommonHitCoordinates>
                                 <uuid>64bf6e9e-73b7-45c0-b97b-5013615b8239</uuid>
                                 <version>
                                    <componentUuid>1761bcef-ce47-49cf-b2d8-1397e344b559</componentUuid>
                                    <incrementalVersion>1.0</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-05-29T09:25:59Z</lastModified>
                                    <versionUuid>837d2feb-9eb0-45a4-bb40-b9de855464d2</versionUuid>
                                 </version>
                                 <workSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>HUMAN</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1104</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac8</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac8</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:48Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac8</versionUuid>
                                    </version>
                                    <answers/>
                                    <businessRules>
                                       <businessRule>
                                          <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer(1);

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer(1);
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double(100/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 70 if gold accuracy goes up &lt; 75 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; (75/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 70);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 80 if gold accuracy goes up &gt;= 75 percents and &lt; 90"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (75/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; (90 / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 80);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 95 if gold accuracy goes up &gt;= 90 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (90 / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 95);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                          <name>Start with one assignment 1+0 pay all</name>
                                          <paramValues>{"NORMAL_ACCURACY_LEVEL_SCORE":"80","NORMAL_ACCURACY_LEVEL_UPPER_LIMIT":"90","WORST_ACCURACY_LEVEL_SCORE":"70","MAJORITY_HIT_THRESHOLD":"100","SUPER_ACCURACY_LEVEL_LOWER_LIMIT":"90","WORST_ACCURACY_LEVEL_UPPER_LIMIT":"75","SUPER_ACCURACY_LEVEL_SCORE":"95","NORMAL_ACCURACY_LEVEL_LOWER_LIMIT":"75","MAJORITY_VALUE":"1","CHECK_EVERY":"5","MAX_ASSIGNMENT_LIMIT":"1"}</paramValues>
                                          <ruleType>DROOLS</ruleType>
                                          <ruleTypeUI>Adjudication</ruleTypeUI>
                                          <template>
                                             <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer({{MAJORITY_VALUE}});

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer({{MAX_ASSIGNMENT_LIMIT}});
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double({{MAJORITY_HIT_THRESHOLD}}/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{WORST_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &lt; {{WORST_ACCURACY_LEVEL_UPPER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{WORST_ACCURACY_LEVEL_UPPER_LIMIT}}/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{WORST_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{NORMAL_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}} percents and &lt; {{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}}"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}}/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}} / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{NORMAL_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{SUPER_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{SUPER_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                             <description>Get qualified workers: pay if ${MAJORITY_VALUE} correct answers, start with 1 assignment, extend to maximum of ${MAX_ASSIGNMENT_LIMIT} assignments. Set qualification scores depending on gold accuracy.</description>
                                             <name>Start with 1 assignment X+0 rule (pay all)</name>
                                             <params>
                                                <param>
                                                   <code>MAJORITY_HIT_THRESHOLD</code>
                                                   <defaultValue>100</defaultValue>
                                                   <description>Percent (from 0 to 100) of correct answers when  majority is found</description>
                                                   <name>Percent of correct answers</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>NORMAL_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                   <defaultValue>75</defaultValue>
                                                   <description>Normal accuracy level lower limit in percents inclusive</description>
                                                   <name>Normal accuracy level lower limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>SUPER_ACCURACY_LEVEL_SCORE</code>
                                                   <defaultValue>95</defaultValue>
                                                   <description>Qualification score will be given to a worker who has demonstrated a super accuracy</description>
                                                   <name>Super accuracy level score</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>NORMAL_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                   <defaultValue>90</defaultValue>
                                                   <description>Normal accuracy level upper limit in percents exclusive</description>
                                                   <name>Normal accuracy level upper limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>NORMAL_ACCURACY_LEVEL_SCORE</code>
                                                   <defaultValue>80</defaultValue>
                                                   <description>Qualification score will be given to a worker who has demonstrated a normal accuracy</description>
                                                   <name>Normal accuracy level score</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>MAJORITY_VALUE</code>
                                                   <defaultValue>1</defaultValue>
                                                   <description>Number of correct answers</description>
                                                   <name>Majority value</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>CHECK_EVERY</code>
                                                   <defaultValue>5</defaultValue>
                                                   <description>Check every i-th gold question when evaluating qualification score</description>
                                                   <name>Check every i-th gold question</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>WORST_ACCURACY_LEVEL_SCORE</code>
                                                   <defaultValue>70</defaultValue>
                                                   <description>Qualification score will be given to a worker who has demonstrated a low accuracy</description>
                                                   <name>Worst accuracy level score</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>SUPER_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                                   <defaultValue>90</defaultValue>
                                                   <description>Super accuracy level lower limit in percents inclusive, upper limit is considered as 100</description>
                                                   <name>Super accuracy level lower limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>WORST_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                                   <defaultValue>75</defaultValue>
                                                   <description>Worst accuracy level upper limit in percents exclusive, lower limit is considered as 0</description>
                                                   <name>Worst accuracy level upper limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                                <param>
                                                   <code>MAX_ASSIGNMENT_LIMIT</code>
                                                   <defaultValue>1</defaultValue>
                                                   <description>Maximum number of assignments</description>
                                                   <name>Max assignments limit</name>
                                                   <type>INPUT_NUMBER</type>
                                                </param>
                                             </params>
                                          </template>
                                          <uuid>25d70ccd-5743-11e8-9976-0ae8ba3240ae</uuid>
                                          <workflowRuleMode>ADVANCED</workflowRuleMode>
                                       </businessRule>
                                    </businessRules>
                                    <isPrivate>false</isPrivate>
                                    <items>
                                       <item>
                                          <type>TIME_PER_ASSIGNMENT</type>
                                          <value>1800000</value>
                                       </item>
                                       <item>
                                          <type>TITLE</type>
                                          <value>Miscellaneous Tasks</value>
                                       </item>
                                       <item>
                                          <type>HIT_EXPIRES_IN</type>
                                          <value>2592000000</value>
                                       </item>
                                       <item>
                                          <type>AUTOMATICALLY_APPROVED</type>
                                          <value>432000000</value>
                                       </item>
                                       <item>
                                          <type>RECOMMENDATION_TAGS</type>
                                          <value>["information_extraction"]</value>
                                       </item>
                                    </items>
                                    <template>
                                       <code/>
                                       <content>&lt;#include "extras.ftl" parse=true/&gt;
&lt;#include "html.ftl" parse=true/&gt;
&lt;#include "answers.ftl" parse=true/&gt;
&lt;#assign FEEDBACK_ENABLED = true&gt;

&lt;@hit contentCss="${applicationResourceUrl}/workfusion-resources/saas/ms/ms.bootstrap.min.css"&gt;
&lt;@script src="${applicationResourceUrl}/workfusion-resources/bootstrap/js/bootstrap-tab.js"/&gt;  
  

  
&lt;@instructions title="&lt;h2&gt;BLANK&lt;/h2&gt;"&gt;
  &lt;!--- editable content --&gt;
  &lt;@editable id="__INSTRUCTIONS__"&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
&lt;/@instructions&gt;
&lt;@form&gt;
&lt;#if questions??&gt;
    &lt;div class="thumbnail"&gt;
    &lt;#list questions as question&gt;
      &lt;@report question=question includeAll=true/&gt;
      &lt;div style="position:relative;margin:2px 0px" class="block question"&gt;
           &lt;div style="position:absolute;top:0px;right:0px;background-color:#e0e0e0;padding:1px 4px;border: 1px solid #C0C0C0;border-radius: 0px" class="number"&gt;
                &lt;b&gt;${question_index + 1}&lt;/b&gt;
           &lt;/div&gt;
           &lt;div&gt;
               &lt;div class="place bg-dark"&gt;
                 &lt;@editable id="__DATA__"&gt;${question.data.blank} &lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
               &lt;/div&gt;
               &lt;div class="place"&gt;
                 &lt;@answers question=question/&gt;
               &lt;/div&gt;
            &lt;/div&gt;
      &lt;/div&gt;
    &lt;/#list&gt;
    &lt;/div&gt;
&lt;/#if&gt;
&lt;@submit text="Submit" /&gt;
&lt;/@form&gt;
&lt;/@hit&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</versionUuid>
                                       </version>
                                    </template>
                                 </workSetting>
                              </question>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>[Standard] Document Tagging Sample</title>
                              <type>SINGLE</type>
                              <uuid>10f18572-06ac-4ca9-a7e9-5f44aaa6ccd9</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>9105ba8a-c6d2-48d6-bdb9-ba3db908bb23</componentUuid>
                                 <incrementalVersion>1.0</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-05-29T09:25:59Z</lastModified>
                                 <versionUuid>e26eda2b-9325-484c-9920-02eeb2e98abc</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>15</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>33cc3b36-da71-4d91-9db1-babaec3ed5c9</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content>#RuleContext.APPROVE_ALL_RULE</content>
                              <name>Approve All</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>fddad8c9-2cc1-4cc9-b78e-09e3e53e724c</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;
  	
  	&lt;script&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		result = new JsonSlurper().parseText(ocr_json.toString());

		if(result.xml != null) {
			ocr_document_url = result.xml.ocr_raw_processed_document_url;
		} else if(result.xmlForCorrectedImage != null) {
			ocr_document_url = result.xmlForCorrectedImage.ocr_raw_processed_document_url;
		} else if(result.html != null) {
			ocr_document_url = result.html.ocr_document_url;
		} else if(result.txt != null) {
			ocr_document_url = result.txt.ocr_document_url;
		} else {
			ocr_document_url = result.pdfSearchable.ocr_document_url;
		}	
	]]&gt;&lt;/script&gt;
  
	&lt;export include-original-data="true"&gt;
    	&lt;single-column name="ocr_document_url" value="${ocr_document_url}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                 <description/>
                                 <includedConfigs/>
                                 <inclusionCode>93ba4697-d503-4b00-bf3f-152163b31b78</inclusionCode>
                                 <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>BASIC</machineWorkSettingType>
                                 <name>[Standard] Prepare URL</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>93ba4697-d503-4b00-bf3f-152163b31b78</uuid>
                                 <version>
                                    <componentUuid>1d58607e-74a7-4359-937e-139d054b9d18</componentUuid>
                                    <incrementalVersion>1.0</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-05-29T10:06:45Z</lastModified>
                                    <versionUuid>3a3b1215-0106-4498-ab18-b96d17cd5cf3</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>[Standard] Prepare URL</title>
                              <type>SINGLE</type>
                              <uuid>eab1b67b-f8b7-4c88-a091-6f46eb4fca70</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>f63f050d-1cc8-48e8-b80e-046a76186ba8</componentUuid>
                                 <incrementalVersion>1.0</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-05-29T10:06:46Z</lastModified>
                                 <versionUuid>ac1afe67-7bb0-49dd-b802-1a4e593ba608</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>16</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>ddcd21e6-9b95-4ec0-afa5-dc2a3387a042</uuid>
                        </campaignMap>
                        <campaignMap>
                           <blockSize>1</blockSize>
                           <businessRule>
                              <content>#RuleContext.APPROVE_ALL_RULE</content>
                              <name>Approve All</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <ruleTypeUI>Composite</ruleTypeUI>
                              <uuid>bf9a50ea-4fab-450f-a25e-38bdc01e4fb0</uuid>
                              <workflowRuleMode>SIMPLE</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy"&gt;
  	
  	&lt;script&gt;&lt;![CDATA[
		import groovy.json.JsonSlurper;

		result = new JsonSlurper().parseText(ocr_json.toString());
		ocr_document_url = result.xmlForCorrectedImage.ocr_tood_document_url;
	]]&gt;&lt;/script&gt;
  
	&lt;export include-original-data="true"&gt;
    	&lt;single-column name="ocr_document_url" value="${ocr_document_url}" /&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                 <description/>
                                 <includedConfigs/>
                                 <inclusionCode>eac2446f-a706-4ba0-9b6b-05162b55c8d0</inclusionCode>
                                 <jsonParams>{"configXMLModified":"true"}</jsonParams>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <machineWorkSettingType>BASIC</machineWorkSettingType>
                                 <name>[TOOD] Prepare URL</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>eac2446f-a706-4ba0-9b6b-05162b55c8d0</uuid>
                                 <version>
                                    <componentUuid>cd6fe770-99bf-4ce5-a76d-fd6e9c542014</componentUuid>
                                    <incrementalVersion>1.0</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-05-29T12:17:03Z</lastModified>
                                    <versionUuid>ce882ed1-6e1e-4cc9-847f-1772b5ea3e4b</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>1</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Tasks</streamValueType>
                              <title>[TOOD] Prepare URL</title>
                              <type>SINGLE</type>
                              <uuid>344dab7e-509f-4aab-880b-b65eb0f3cc68</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>38841804-66b6-4442-970a-25834764dd4b</componentUuid>
                                 <incrementalVersion>1.0</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-05-29T12:17:03Z</lastModified>
                                 <versionUuid>4806b49e-a9ee-4175-a380-f9c1078712d0</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>17</stepIndex>
                           <stepPosition>INTERMEDIATE</stepPosition>
                           <uuid>86892b68-4786-4192-a6fb-b56efb7aca81</uuid>
                        </campaignMap>
                        <campaignMap>
                           <businessRule>
                              <content>package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.CompositeRuleContext;
import com.freedomoss.objective.model.CompositeRuleDataItemContext;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;
import org.slf4j.Logger;
import java.util.Map;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.ArrayList;
import com.freedomoss.requester.dto.SubmissionResultDTO;

#declare any global variables here
global CompositeRuleContext source
global Logger log
global Map params



rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:CompositeRuleContext(initialized == false);
	then
		$ctx.updateWorkingMemory();
		# move to business rules
		$ctx.logExecutedRule(kcontext.getRule().getName());
		kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
end</content>
                              <name>Business Process: End Rule</name>
                              <ruleType>WORKFLOW_RULE</ruleType>
                              <uuid>40af2eef-eb16-47c0-ab6c-79373c912a2a</uuid>
                              <workflowRuleMode>ADVANCED</workflowRuleMode>
                           </businessRule>
                           <campaign>
                              <active>false</active>
                              <businessRules/>
                              <campaignMaps/>
                              <campaigns/>
                              <executingType>MACHINE</executingType>
                              <goldBucketBlockSize>0</goldBucketBlockSize>
                              <goldRatio>0</goldRatio>
                              <goldSource>Empty</goldSource>
                              <goldType>Percentage</goldType>
                              <machineConfig>
                                 <answers/>
                                 <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;

    &lt;var-def name="exportType"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_export_type")}'&gt;
                &lt;template&gt;${_sys_export_type}&lt;/template&gt;
            &lt;/if&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="exportColumns"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_export_columns")}'&gt;
                &lt;template&gt;${_sys_export_columns}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="columnNameCase"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_column_name_case")}'&gt;
                &lt;template&gt;${_sys_column_name_case}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;keep&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="dataOnly"&gt;
        &lt;case&gt;
            &lt;if condition='${sys.isVariableDefined("_sys_data_only")}'&gt;
                &lt;template&gt;${_sys_data_only}&lt;/template&gt;
            &lt;/if&gt;
            &lt;else&gt;true&lt;/else&gt;
        &lt;/case&gt;
    &lt;/var-def&gt;

    &lt;var-def name="datastoreName"&gt;
        &lt;script return="item.getWrappedObject().getRun().getDatastoreName()" /&gt;
    &lt;/var-def&gt;
    &lt;case&gt;
        &lt;if condition="${!datastoreName.isEmpty()}"&gt;
            &lt;insert-datastore   datastore-name="${datastoreName}" create="true"&gt;
                &lt;script return="hit_submission_data_item.getWrappedObject().getItemValueMap()"/&gt;
            &lt;/insert-datastore&gt;
        &lt;/if&gt;
    &lt;/case&gt;

    &lt;export include-original-data="true"
            export-type="${exportType}"
            export-columns="${exportColumns}"
            column-name-case="${columnNameCase}"
            data-only="${dataOnly}"&gt;
    &lt;/export&gt;
&lt;/config&gt;</content>
                                 <description>Default machine campaign for end step.</description>
                                 <includedConfigs/>
                                 <inclusionCode>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</inclusionCode>
                                 <machineWorkSetting>
                                    <category>
                                       <automation>false</automation>
                                       <description/>
                                       <enabled>true</enabled>
                                       <executingType>MACHINE</executingType>
                                       <name>Other</name>
                                       <private>false</private>
                                       <publicId>dd92f240-144b-4fef-8476-4ec0acbc1105</publicId>
                                    </category>
                                    <contentType>BLANK</contentType>
                                    <description/>
                                    <enabled>true</enabled>
                                    <name>Miscellaneous Tasks</name>
                                    <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac9</publicId>
                                    <version>
                                       <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2018-05-14T06:50:56Z</lastModified>
                                       <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac9</versionUuid>
                                    </version>
                                    <answers/>
                                    <machineWorkSettingType>BASIC</machineWorkSettingType>
                                    <template>
                                       <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                       <name>Blank</name>
                                       <origination>CREATED_MANUALLY</origination>
                                       <status>ACTIVE</status>
                                       <type>BASE_MACHINE</type>
                                       <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                       <version>
                                          <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                          <incrementalVersion>1.0</incrementalVersion>
                                          <lastInChain>true</lastInChain>
                                          <lastModified>2012-12-27T00:00:00Z</lastModified>
                                          <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                       </version>
                                    </template>
                                 </machineWorkSetting>
                                 <name>Final Results</name>
                                 <machineConfigOptions/>
                                 <sourceType>MANUAL</sourceType>
                                 <template>
                                    <content>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;config charset="UTF-8"&gt;
	&lt;export include-original-data="true"&gt;
	&lt;/export&gt;
&lt;/config&gt;</content>
                                    <name>Blank</name>
                                    <origination>CREATED_MANUALLY</origination>
                                    <status>ACTIVE</status>
                                    <type>BASE_MACHINE</type>
                                    <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</uuid>
                                    <version>
                                       <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</componentUuid>
                                       <incrementalVersion>1.0</incrementalVersion>
                                       <lastInChain>true</lastInChain>
                                       <lastModified>2012-12-27T00:00:00Z</lastModified>
                                       <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc4</versionUuid>
                                    </version>
                                 </template>
                                 <uuid>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</uuid>
                                 <version>
                                    <componentUuid>9e5000e3-c243-42d3-b5ad-c6ac90dec35e</componentUuid>
                                    <incrementalVersion>1.0</incrementalVersion>
                                    <lastInChain>true</lastInChain>
                                    <lastModified>2018-05-14T06:51:04Z</lastModified>
                                    <versionUuid>32d30d2f-5743-11e8-9976-0ae8ba3240ae</versionUuid>
                                 </version>
                                 <code/>
                              </machineConfig>
                              <moderation>false</moderation>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <requiresData>true</requiresData>
                              <status>ACTIVE</status>
                              <streamComplexRunThreshold>100</streamComplexRunThreshold>
                              <streamTimeInterval>Immediately</streamTimeInterval>
                              <streamTimeIntervalValue>0</streamTimeIntervalValue>
                              <streamValueType>Percents</streamValueType>
                              <title>Final Results</title>
                              <type>SINGLE</type>
                              <uuid>af4c8905-26dd-4120-b208-39ad3530ffc6</uuid>
                              <validWorkflow>false</validWorkflow>
                              <version>
                                 <componentUuid>32519db2-5743-11e8-9976-0ae8ba3240ae</componentUuid>
                                 <incrementalVersion>1.0</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-05-14T06:51:04Z</lastModified>
                                 <versionUuid>32d326cf-5743-11e8-9976-0ae8ba3240ae</versionUuid>
                              </version>
                              <workSettingBase>false</workSettingBase>
                           </campaign>
                           <deleted>false</deleted>
                           <stepIndex>18</stepIndex>
                           <stepPosition>END</stepPosition>
                           <uuid>57296995-a920-4980-bae7-1f4551597102</uuid>
                        </campaignMap>
                     </campaignMaps>
                     <campaigns/>
                     <compositeCampaignVersion>NEW_WORKFLOW</compositeCampaignVersion>
                     <compositeStructureXml>&lt;mxGraphModel&gt;&lt;root&gt;&lt;mxCell id="0"/&gt;&lt;mxCell id="1" parent="0"/&gt;&lt;Start id="2" name="Start" type="start"&gt;&lt;mxCell parent="1" style="start" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="60.0" y="630.2333374023438"/&gt;&lt;/mxCell&gt;&lt;/Start&gt;&lt;Link id="25" name="" type="link"&gt;&lt;mxCell edge="1" parent="1" source="2" style="link" target="337"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="targetPoint" x="140.0" y="82.0"/&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;End campaignMapUUID="57296995-a920-4980-bae7-1f4551597102" id="143" name="End" type="end"&gt;&lt;mxCell parent="1" style="end" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="1164.1166687011719" y="994.2333374023438"/&gt;&lt;/mxCell&gt;&lt;/End&gt;&lt;Rule id="323" name="OCR Type" ruleUUID="1acfbab9-e18e-4280-bfa5-ba3c20d5c9bf" type="rule"&gt;&lt;mxCell parent="1" style="rule" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="1164.1166687011719" y="754.2333374023438"/&gt;&lt;/mxCell&gt;&lt;/Rule&gt;&lt;Link id="324" name="" type="link"&gt;&lt;mxCell edge="1" parent="1" source="381" style="link" target="323"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="sourcePoint" x="450.0" y="121.53334045410156"/&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link conditional="true" id="325" label="TOOD" name="" outcomeId="TOOD" ruleUUID="1acfbab9-e18e-4280-bfa5-ba3c20d5c9bf" type="link"&gt;&lt;mxCell edge="1" parent="1" source="323" style="link" target="331"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="554.0" y="191.0"/&gt;&lt;Array as="points"/&gt;&lt;mxPoint as="offset" x="13.0" y="-28.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;HumanTask automatedCampaignUUID="" automatedUseCaseId="" campaignMapUUID="8195a10e-b7a0-444d-941e-8caf6d4b6c8f" id="327" name="[TOOD][MT][BASE] Tagging Over Original Document" taskUUID="5260cf31-b176-416d-be26-170da732f9c5" type="human_task"&gt;&lt;mxCell parent="1" style="human_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="220.11666870117188" y="903.7666778564453"/&gt;&lt;/mxCell&gt;&lt;/HumanTask&gt;&lt;HumanTask automatedCampaignUUID="" automatedUseCaseId="" campaignMapUUID="33cc3b36-da71-4d91-9db1-babaec3ed5c9" id="328" name="[Standard] Document Tagging Sample" taskUUID="10f18572-06ac-4ca9-a7e9-5f44aaa6ccd9" type="human_task"&gt;&lt;mxCell parent="1" style="human_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="1240.2333374023438" y="903.7666778564453"/&gt;&lt;/mxCell&gt;&lt;/HumanTask&gt;&lt;Link id="329" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="88b6c495-0d8a-442f-8f94-ff22fcdb4a4d" type="link"&gt;&lt;mxCell edge="1" parent="1" source="327" style="link" target="143"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;Array as="points"&gt;&lt;mxPoint x="160.0" y="934.2333374023438"/&gt;&lt;mxPoint x="160.0" y="1014.2333374023438"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="330" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="eeae211f-1465-4da7-9de7-9ab4eef6901c" type="link"&gt;&lt;mxCell edge="1" parent="1" source="328" style="link" target="143"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;Array as="points"&gt;&lt;mxPoint x="1320.1166687011719" y="1014.2333374023438"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="86892b68-4786-4192-a6fb-b56efb7aca81" id="331" name="[TOOD] Prepare URL" taskUUID="344dab7e-509f-4aab-880b-b65eb0f3cc68" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="220.0" y="814.2333374023438"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;MachineTask campaignMapUUID="ddcd21e6-9b95-4ec0-afa5-dc2a3387a042" id="332" name="[Standard] Prepare URL" taskUUID="eab1b67b-f8b7-4c88-a091-6f46eb4fca70" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="1240.1166687011719" y="814.2333374023438"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link conditional="true" id="334" label="Standard" name="" outcomeId="Standard" ruleUUID="1acfbab9-e18e-4280-bfa5-ba3c20d5c9bf" type="link"&gt;&lt;mxCell edge="1" parent="1" source="323" style="link" target="332"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="554.0" y="191.0"/&gt;&lt;Array as="points"/&gt;&lt;mxPoint as="offset" x="-8.0" y="-28.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="335" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="bf9a50ea-4fab-450f-a25e-38bdc01e4fb0" type="link"&gt;&lt;mxCell edge="1" parent="1" source="331" style="link" target="327"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"/&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="336" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="fddad8c9-2cc1-4cc9-b78e-09e3e53e724c" type="link"&gt;&lt;mxCell edge="1" parent="1" source="332" style="link" target="328"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"/&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="80737c88-5ef0-4229-b793-7855eaac93ce" id="337" label="&amp;lt;table class=&amp;#34;user-edit-cell&amp;#34; data-margin-top=&amp;#34;15&amp;#34;&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td class=&amp;#34;user-edit-cell-name&amp;#34;&amp;gt;&amp;lt;div&amp;gt;&amp;lt;span style=&amp;#34;background:#0070d1&amp;#34;&amp;gt;Alexey Shalak&amp;lt;/span&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td class=&amp;#34;user-edit-cell-title&amp;#34; style=&amp;#34;height:60px; width:160px;&amp;#34;&amp;gt;OCR Settings&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;" name="OCR Settings" taskUUID="a0f4bfa8-eab4-4402-bad9-504be172fc90" type="machine_task"&gt;&lt;mxCell parent="1" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="140.0" y="616.2333374023438"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link id="338" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="70275a25-e2ac-4077-9b56-c197f0f14d24" type="link"&gt;&lt;mxCell edge="1" parent="1" source="337" style="link" target="379"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="targetPoint" x="360.1166687011719" y="82.0"/&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;BusinessProcess id="378" name="Workfusion OCR with cache (UseCase)" type="business_process"&gt;&lt;mxCell parent="1" style="business_process" vertex="1"&gt;&lt;mxGeometry as="geometry" height="644.2333374023438" width="910.1166687011719" x="290.0"&gt;&lt;mxRectangle as="alternateBounds" height="80.0" width="180.0" x="290.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/BusinessProcess&gt;&lt;SubStart campaignMapUUID="b3b52e61-77fe-45cc-ebce-b663cfc97019" id="379" name="Start" type="sub_start"&gt;&lt;mxCell parent="378" style="start" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="84.0" y="54.0"/&gt;&lt;/mxCell&gt;&lt;/SubStart&gt;&lt;MachineTask campaignMapUUID="7d839fb4-a154-428c-8ad0-495ae647d94e" id="380" name="[TOOD] XSLT XML Enrichment with WORD and DIV tags" taskUUID="2d15732c-0a72-47fc-9cc4-b031920ec61c" type="machine_task"&gt;&lt;mxCell parent="378" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="560.0" y="484.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;SubEnd campaignMapUUID="b9975f60-a792-4c4c-9075-21a5b56d8cc6" id="381" name="End" type="sub_end"&gt;&lt;mxCell parent="378" style="end" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="624.0" y="424.0"/&gt;&lt;/mxCell&gt;&lt;/SubEnd&gt;&lt;Link id="382" name="" type="link"&gt;&lt;mxCell edge="1" parent="378" source="379" style="link" target="396"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="targetPoint" x="265.0" y="36.0"/&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="383" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="a85dc52a-11b5-42b1-93bf-ed24894de250" type="link"&gt;&lt;mxCell edge="1" parent="378" source="389" style="link" target="390"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="sourcePoint" x="140.0" y="220.0"/&gt;&lt;mxPoint as="targetPoint" x="140.0" y="250.0"/&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Rule id="384" name="OCR Router" ruleUUID="1bdfd045-0f4e-473a-ba21-dc373ee0a5ef" type="rule"&gt;&lt;mxCell parent="378" style="rule" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="84.0" y="424.0"/&gt;&lt;/mxCell&gt;&lt;/Rule&gt;&lt;Rule id="385" name="OCR Type" ruleUUID="bb1e41ac-a264-4a0b-9b9d-b1e923bbfab5" type="rule"&gt;&lt;mxCell parent="378" style="rule" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="264.0" y="139.0"/&gt;&lt;/mxCell&gt;&lt;/Rule&gt;&lt;MachineTask campaignMapUUID="ebe96d1f-f83b-4334-bb87-4f2ca00dc10b" id="386" name="[Standard] OCR" taskUUID="5998bd12-5695-4957-91a8-3aaad033c8ad" type="machine_task"&gt;&lt;mxCell parent="378" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="380.1166687011719" y="263.53334045410156"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link conditional="true" id="387" label="Standard" name="" outcomeId="Standard" ruleUUID="bb1e41ac-a264-4a0b-9b9d-b1e923bbfab5" type="link"&gt;&lt;mxCell edge="1" parent="378" source="385" style="link" target="386"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="394.0" y="220.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="280.0" y="214.0"/&gt;&lt;mxPoint x="460.0" y="214.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" x="-30.0" y="-3.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="c167ff80-5aa0-4034-9c75-ea3a3b9f540d" id="388" name="XSLT Cut off Raw OCR XML tags" taskUUID="ba22e9b1-c6ce-458f-8933-112ed10cb205" type="machine_task"&gt;&lt;mxCell parent="378" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="200.0" y="484.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;MachineTask campaignMapUUID="54e27794-11a5-4bc1-983d-bf4fe86fc57f" id="389" name="[TOOD] Split document into PNG pages" taskUUID="9c33a147-3416-4058-8b45-75fb1d1aa47c" type="machine_task"&gt;&lt;mxCell parent="378" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="20.0" y="184.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;MachineTask campaignMapUUID="a0970342-7ffe-4aec-8436-1bf83cf5da2c" id="390" name="[TOOD] OCR" taskUUID="964500c3-8ef6-4325-aa98-8a43a3d4355a" type="machine_task"&gt;&lt;mxCell parent="378" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="20.0" y="264.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link id="391" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="73d56933-6b36-458e-b032-4fc270a6416a" type="link"&gt;&lt;mxCell edge="1" parent="378" source="390" style="link" target="392"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="sourcePoint" x="140.0" y="310.0"/&gt;&lt;mxPoint as="targetPoint" x="140.0" y="300.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="260.0" y="294.0"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="1f056649-c154-4328-8fd0-136abe0652d7" id="392" name="Response from OCR" taskUUID="d44c903c-8fd2-47bd-a3ed-0f4013b6a2a6" type="machine_task"&gt;&lt;mxCell parent="378" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="200.0" y="344.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link id="393" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="6d6d12c3-657c-4f71-9b38-e6fd1a2c8dfa" type="link"&gt;&lt;mxCell edge="1" parent="378" source="386" style="link" target="392"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;Array as="points"&gt;&lt;mxPoint x="300.0" y="294.0"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="394" name="" type="link"&gt;&lt;mxCell edge="1" parent="378" source="392" style="link" target="384"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;Array as="points"&gt;&lt;mxPoint x="100.0" y="374.0"/&gt;&lt;/Array&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="395" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="7ffff4db-b572-4ab2-9c2a-7f815ed3dd85" type="link"&gt;&lt;mxCell edge="1" parent="378" source="396" style="link" target="407"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="sourcePoint" x="320.0" y="47.0"/&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="9fbec961-739e-4c72-944c-05b8231b3bff" id="396" name="Input data processing" taskUUID="7efd0e4a-ee9a-47bd-8f79-87ce5e2abd59" type="machine_task"&gt;&lt;mxCell parent="378" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="200.0" y="40.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;MachineTask campaignMapUUID="470c022c-eaf0-475e-9f65-1c54cd763dae" id="397" name="Result JSON processing" taskUUID="b4d16240-d1a2-45fc-83d8-94f32844359a" type="machine_task"&gt;&lt;mxCell parent="378" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="730.1166687011719" y="409.53334045410156"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link conditional="true" id="398" label="OCR Failed" name="" outcomeId="OCR Failed" ruleUUID="1bdfd045-0f4e-473a-ba21-dc373ee0a5ef" type="link"&gt;&lt;mxCell edge="1" parent="378" source="384" style="link" target="381"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="520.0" y="400.0"/&gt;&lt;Array as="points"/&gt;&lt;mxPoint as="offset" x="-210.0" y="-6.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link conditional="true" id="399" label="TOOD" name="" outcomeId="TOOD" ruleUUID="1bdfd045-0f4e-473a-ba21-dc373ee0a5ef" type="link"&gt;&lt;mxCell edge="1" parent="378" source="384" style="link" target="388"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="240.0" y="460.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="100.0" y="504.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" y="24.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link conditional="true" id="400" label="Standard" name="" outcomeId="Standard" ruleUUID="1bdfd045-0f4e-473a-ba21-dc373ee0a5ef" type="link"&gt;&lt;mxCell edge="1" parent="378" source="384" style="link" target="388"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="320.0" y="670.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="100.0" y="524.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" y="34.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link conditional="true" id="401" label="Standard (without xml export format)" name="" outcomeId="Standard (without xml export format)" ruleUUID="1bdfd045-0f4e-473a-ba21-dc373ee0a5ef" type="link"&gt;&lt;mxCell edge="1" parent="378" source="384" style="link" target="408"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="80.0" y="660.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="100.0" y="604.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" x="-120.0" y="74.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Rule id="402" name="OCR Type" ruleUUID="24acbf7a-654a-4d61-af67-7c1021cc520a" type="rule"&gt;&lt;mxCell parent="378" style="rule" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="444.0" y="498.0"/&gt;&lt;/mxCell&gt;&lt;/Rule&gt;&lt;Link conditional="true" id="403" label="TOOD" name="" outcomeId="TOOD" ruleUUID="24acbf7a-654a-4d61-af67-7c1021cc520a" type="link"&gt;&lt;mxCell edge="1" parent="378" source="402" style="link" target="380"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="610.0" y="543.0"/&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link conditional="true" id="404" label="Standard" name="" outcomeId="Standard" ruleUUID="24acbf7a-654a-4d61-af67-7c1021cc520a" type="link"&gt;&lt;mxCell edge="1" parent="378" source="402" style="link" target="408"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="540.0" y="590.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="460.0" y="584.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" x="10.0" y="27.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="405" name="" type="link"&gt;&lt;mxCell edge="1" parent="378" source="388" style="link" target="402"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"/&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="406" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="31e74be0-f9d4-46a7-b092-1580e10c6c57" type="link"&gt;&lt;mxCell edge="1" parent="378" source="380" style="link" target="408"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="40a34cbe-4583-411b-9942-b90f99d14b1b" id="407" name="Look for OCR cache" taskUUID="938e8c73-b9db-4d71-e755-e099d9e288de" type="machine_task"&gt;&lt;mxCell parent="378" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="380.1166687011719" y="40.23333740234375"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;MachineTask campaignMapUUID="f5a76b5b-ca0e-451b-a206-96998c058e5b" id="408" name="Cache OCR results" taskUUID="9535c598-8850-4c31-e19d-56fecb707c6d" type="machine_task"&gt;&lt;mxCell parent="378" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="60.0" width="160.0" x="560.1166687011719" y="564.2333374023438"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Rule id="409" name="Cache hit?" ruleUUID="eb4db687-5992-40a2-9272-0d482fa4afcf" type="rule"&gt;&lt;mxCell parent="378" style="rule" vertex="1"&gt;&lt;mxGeometry as="geometry" height="32.0" width="32.0" x="624.0" y="54.0"/&gt;&lt;/mxCell&gt;&lt;/Rule&gt;&lt;Link id="410" name="" type="link"&gt;&lt;mxCell edge="1" parent="378" source="407" style="link" target="409"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"/&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link conditional="true" id="411" label="Yes" name="" outcomeId="Yes" ruleUUID="eb4db687-5992-40a2-9272-0d482fa4afcf" type="link"&gt;&lt;mxCell edge="1" parent="378" source="409" style="link" target="397"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="750.0" y="21.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="810.0" y="70.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" x="-38.0" y="-183.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link conditional="false" id="412" label="No" name="" outcomeId="No" ruleUUID="eb4db687-5992-40a2-9272-0d482fa4afcf" type="link"&gt;&lt;mxCell edge="1" parent="378" source="409" style="link" target="414"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="563.0" y="120.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="640.0" y="154.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" x="59.0" y="4.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="413" name="" type="link"&gt;&lt;mxCell edge="1" parent="378" source="414" style="link" target="385"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"&gt;&lt;mxPoint as="sourcePoint" x="437.0" y="120.0"/&gt;&lt;Array as="points"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;MachineTask campaignMapUUID="f03ce0f7-4f27-4d65-8ee3-795972086f6d" id="414" label="" name="GoTo OCR" streamed="false" taskUUID="20ac7cba-c576-4f18-ba33-95ab0cf4b706" type="machine_task"&gt;&lt;mxCell parent="378" style="machine_task" vertex="1"&gt;&lt;mxGeometry as="geometry" height="41.0" width="126.0" x="397.0" y="134.0"/&gt;&lt;/mxCell&gt;&lt;/MachineTask&gt;&lt;Link conditional="true" id="415" label="TOOD" name="" outcomeId="TOOD" ruleUUID="bb1e41ac-a264-4a0b-9b9d-b1e923bbfab5" type="link"&gt;&lt;mxCell edge="1" parent="378" source="385" style="link" target="389"&gt;&lt;mxGeometry as="geometry"&gt;&lt;mxPoint as="targetPoint" x="424.0" y="105.0"/&gt;&lt;Array as="points"&gt;&lt;mxPoint x="280.0" y="214.0"/&gt;&lt;/Array&gt;&lt;mxPoint as="offset" y="22.0"/&gt;&lt;/mxGeometry&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="416" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="64172914-052b-4ac6-8660-fd91e8cfb4ff" type="link"&gt;&lt;mxCell edge="1" parent="378" source="408" style="link" target="397"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"/&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;Link id="417" name="" outcome="ApproveAll" outcomeId="ApproveAll" ruleUUID="a082ef2c-3345-4d5e-9f1a-a410b83b9e36" type="link"&gt;&lt;mxCell edge="1" parent="378" source="397" style="link" target="381"&gt;&lt;mxGeometry as="geometry" relative="1" x="0.5" y="10.0"/&gt;&lt;/mxCell&gt;&lt;/Link&gt;&lt;/root&gt;&lt;/mxGraphModel&gt;</compositeStructureXml>
                     <description>Business Process description</description>
                     <executingType>COMPOSITE</executingType>
                     <goldBucketBlockSize>0</goldBucketBlockSize>
                     <goldRatio>0</goldRatio>
                     <goldSource>Empty</goldSource>
                     <goldType>Percentage</goldType>
                     <moderation>false</moderation>
                     <origination>CREATED_AUTOMATICALLY</origination>
                     <question>
                        <answers>
                           <answer>
                              <allowNA>false</allowNA>
                              <answer>TOOD</answer>
                              <answerCode>ocr_document_url</answerCode>
                              <answerHtml/>
                              <answerTypeObject>
                                 <answerTypeGroup>ADVANCED</answerTypeGroup>
                                 <code>INFO_EXTRACTION</code>
                                 <description/>
                                 <optionsAvailable>true</optionsAvailable>
                                 <showDefaultValue>true</showDefaultValue>
                                 <showForFieldScheme>false</showForFieldScheme>
                                 <showForHumanTask>true</showForHumanTask>
                                 <showForMachineConfig>false</showForMachineConfig>
                                 <title>Information Extraction</title>
                                 <valueType>SINGLEVALUE</valueType>
                              </answerTypeObject>
                              <appendDataStoreOptions>false</appendDataStoreOptions>
                              <autocompleteField>false</autocompleteField>
                              <category/>
                              <constantable>false</constantable>
                              <defaultValue/>
                              <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                              <doNotUseInAdjudication>false</doNotUseInAdjudication>
                              <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                              <htmlClasses/>
                              <lastModified>2018-05-29T09:25:58Z</lastModified>
                              <letCustomValues>false</letCustomValues>
                              <manualField>false</manualField>
                              <multiValue>false</multiValue>
                              <options>{"ieExtractorType":"ORIGINAL_APPEARANCE_EXTRACTOR"}</options>
                              <originalDocumentSource>${question.data['original_document_url']}</originalDocumentSource>
                              <percentRequired>false</percentRequired>
                              <range>false</range>
                              <required>false</required>
                              <sequenceNumber>1</sequenceNumber>
                              <useBlocks>false</useBlocks>
                              <useEmptyCell>false</useEmptyCell>
                           </answer>
                           <answer>
                              <allowNA>false</allowNA>
                              <answer>Text</answer>
                              <answerCode>answ_test_text</answerCode>
                              <answerHtml/>
                              <answerTypeObject>
                                 <answerTypeGroup>UNCONSTRAINED_TEXT</answerTypeGroup>
                                 <code>FREE_TEXT</code>
                                 <description/>
                                 <optionsAvailable>false</optionsAvailable>
                                 <showDefaultValue>true</showDefaultValue>
                                 <showForFieldScheme>true</showForFieldScheme>
                                 <showForHumanTask>true</showForHumanTask>
                                 <showForMachineConfig>true</showForMachineConfig>
                                 <title>Free Text</title>
                                 <valueType>SINGLEVALUE</valueType>
                              </answerTypeObject>
                              <appendDataStoreOptions>false</appendDataStoreOptions>
                              <autocompleteField>false</autocompleteField>
                              <constantable>false</constantable>
                              <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                              <doNotUseInAdjudication>false</doNotUseInAdjudication>
                              <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                              <hotKey>T</hotKey>
                              <lastModified>2018-06-04T09:38:58Z</lastModified>
                              <letCustomValues>false</letCustomValues>
                              <manualField>false</manualField>
                              <multiValue>false</multiValue>
                              <parentAnswer>
                                 <allowNA>false</allowNA>
                                 <answer>TOOD</answer>
                                 <answerCode>ocr_document_url</answerCode>
                                 <answerHtml/>
                                 <answerTypeObject>
                                    <answerTypeGroup>ADVANCED</answerTypeGroup>
                                    <code>INFO_EXTRACTION</code>
                                    <description/>
                                    <optionsAvailable>true</optionsAvailable>
                                    <showDefaultValue>true</showDefaultValue>
                                    <showForFieldScheme>false</showForFieldScheme>
                                    <showForHumanTask>true</showForHumanTask>
                                    <showForMachineConfig>false</showForMachineConfig>
                                    <title>Information Extraction</title>
                                    <valueType>SINGLEVALUE</valueType>
                                 </answerTypeObject>
                                 <appendDataStoreOptions>false</appendDataStoreOptions>
                                 <autocompleteField>false</autocompleteField>
                                 <category/>
                                 <constantable>false</constantable>
                                 <defaultValue/>
                                 <doNotNormalizeTaggedText>false</doNotNormalizeTaggedText>
                                 <doNotUseInAdjudication>false</doNotUseInAdjudication>
                                 <findMajorityForAllAtomicValues>false</findMajorityForAllAtomicValues>
                                 <htmlClasses/>
                                 <lastModified>2018-05-29T09:25:58Z</lastModified>
                                 <letCustomValues>false</letCustomValues>
                                 <manualField>false</manualField>
                                 <multiValue>false</multiValue>
                                 <options>{"ieExtractorType":"ORIGINAL_APPEARANCE_EXTRACTOR"}</options>
                                 <originalDocumentSource>${question.data['original_document_url']}</originalDocumentSource>
                                 <percentRequired>false</percentRequired>
                                 <range>false</range>
                                 <required>false</required>
                                 <sequenceNumber>1</sequenceNumber>
                                 <useBlocks>false</useBlocks>
                                 <useEmptyCell>false</useEmptyCell>
                              </parentAnswer>
                              <percentRequired>false</percentRequired>
                              <range>false</range>
                              <required>true</required>
                              <sequenceNumber>2</sequenceNumber>
                              <useBlocks>false</useBlocks>
                              <useEmptyCell>false</useEmptyCell>
                           </answer>
                        </answers>
                        <assignmentDuration>1800000</assignmentDuration>
                        <assignmentLimit>1</assignmentLimit>
                        <attrs>{"lnaa":"Run","lnam":"Tasks","lna":"0"}</attrs>
                        <autoApprovalDelay>432000000</autoApprovalDelay>
                        <automaticallyProcessed>0</automaticallyProcessed>
                        <blockSize>1</blockSize>
                        <constQualifiedWorkers>false</constQualifiedWorkers>
                        <currency>USD</currency>
                        <description>Miscellaneous Tasks</description>
                        <dynamicTaskRenderingDisabled>true</dynamicTaskRenderingDisabled>
                        <expiredTime>2592000000</expiredTime>
                        <faqItems/>
                        <frameHeight>2500</frameHeight>
                        <geolocationEnabled>false</geolocationEnabled>
                        <instructionItems/>
                        <keywords>Miscellaneous Tasks</keywords>
                        <maxAssignments>1</maxAssignments>
                        <moderation>false</moderation>
                        <moderationFlag>false</moderationFlag>
                        <origination>CREATED_MANUALLY</origination>
                        <pendingAssignmentsLimit>10</pendingAssignmentsLimit>
                        <qualificationInstruction/>
                        <qualificationRequirements/>
                        <qualificationRequirementsRequiredForPreview>false</qualificationRequirementsRequiredForPreview>
                        <qualificationTasks>20</qualificationTasks>
                        <qualificationTraining>false</qualificationTraining>
                        <questionRuleMaps>
                           <questionRuleMap>
                              <businessRule>
                                 <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer(1);

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer(1);
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double(100/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 70 if gold accuracy goes up &lt; 75 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; (75/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 70);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 80 if gold accuracy goes up &gt;= 75 percents and &lt; 90"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (75/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; (90 / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 80);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 95 if gold accuracy goes up &gt;= 90 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (90 / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 95);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                 <name>Start with one assignment 1+0 pay all</name>
                                 <paramValues>{"NORMAL_ACCURACY_LEVEL_SCORE":"80","NORMAL_ACCURACY_LEVEL_UPPER_LIMIT":"90","WORST_ACCURACY_LEVEL_SCORE":"70","MAJORITY_HIT_THRESHOLD":"100","SUPER_ACCURACY_LEVEL_LOWER_LIMIT":"90","WORST_ACCURACY_LEVEL_UPPER_LIMIT":"75","SUPER_ACCURACY_LEVEL_SCORE":"95","NORMAL_ACCURACY_LEVEL_LOWER_LIMIT":"75","MAJORITY_VALUE":"1","CHECK_EVERY":"5","MAX_ASSIGNMENT_LIMIT":"1"}</paramValues>
                                 <ruleType>DROOLS</ruleType>
                                 <ruleTypeUI>Adjudication</ruleTypeUI>
                                 <template>
                                    <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer({{MAJORITY_VALUE}});

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer({{MAX_ASSIGNMENT_LIMIT}});
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double({{MAJORITY_HIT_THRESHOLD}}/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{WORST_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &lt; {{WORST_ACCURACY_LEVEL_UPPER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{WORST_ACCURACY_LEVEL_UPPER_LIMIT}}/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{WORST_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{NORMAL_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}} percents and &lt; {{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}}"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}}/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}} / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{NORMAL_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{SUPER_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{SUPER_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                    <description>Get qualified workers: pay if ${MAJORITY_VALUE} correct answers, start with 1 assignment, extend to maximum of ${MAX_ASSIGNMENT_LIMIT} assignments. Set qualification scores depending on gold accuracy.</description>
                                    <name>Start with 1 assignment X+0 rule (pay all)</name>
                                    <params>
                                       <param>
                                          <code>MAJORITY_HIT_THRESHOLD</code>
                                          <defaultValue>100</defaultValue>
                                          <description>Percent (from 0 to 100) of correct answers when  majority is found</description>
                                          <name>Percent of correct answers</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>NORMAL_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                          <defaultValue>75</defaultValue>
                                          <description>Normal accuracy level lower limit in percents inclusive</description>
                                          <name>Normal accuracy level lower limit</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>SUPER_ACCURACY_LEVEL_SCORE</code>
                                          <defaultValue>95</defaultValue>
                                          <description>Qualification score will be given to a worker who has demonstrated a super accuracy</description>
                                          <name>Super accuracy level score</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>NORMAL_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                          <defaultValue>90</defaultValue>
                                          <description>Normal accuracy level upper limit in percents exclusive</description>
                                          <name>Normal accuracy level upper limit</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>NORMAL_ACCURACY_LEVEL_SCORE</code>
                                          <defaultValue>80</defaultValue>
                                          <description>Qualification score will be given to a worker who has demonstrated a normal accuracy</description>
                                          <name>Normal accuracy level score</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>MAJORITY_VALUE</code>
                                          <defaultValue>1</defaultValue>
                                          <description>Number of correct answers</description>
                                          <name>Majority value</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>CHECK_EVERY</code>
                                          <defaultValue>5</defaultValue>
                                          <description>Check every i-th gold question when evaluating qualification score</description>
                                          <name>Check every i-th gold question</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>WORST_ACCURACY_LEVEL_SCORE</code>
                                          <defaultValue>70</defaultValue>
                                          <description>Qualification score will be given to a worker who has demonstrated a low accuracy</description>
                                          <name>Worst accuracy level score</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>SUPER_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                          <defaultValue>90</defaultValue>
                                          <description>Super accuracy level lower limit in percents inclusive, upper limit is considered as 100</description>
                                          <name>Super accuracy level lower limit</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>WORST_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                          <defaultValue>75</defaultValue>
                                          <description>Worst accuracy level upper limit in percents exclusive, lower limit is considered as 0</description>
                                          <name>Worst accuracy level upper limit</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>MAX_ASSIGNMENT_LIMIT</code>
                                          <defaultValue>1</defaultValue>
                                          <description>Maximum number of assignments</description>
                                          <name>Max assignments limit</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                    </params>
                                 </template>
                                 <uuid>25d70ccd-5743-11e8-9976-0ae8ba3240ae</uuid>
                                 <workflowRuleMode>ADVANCED</workflowRuleMode>
                              </businessRule>
                           </questionRuleMap>
                        </questionRuleMaps>
                        <radiusSelector>ExactLocation</radiusSelector>
                        <randomizeAnswers>false</randomizeAnswers>
                        <recursiveThreshold>1</recursiveThreshold>
                        <restrictedCountries/>
                        <taskNotificationSchedule>IMMEDIATE</taskNotificationSchedule>
                        <templates>
                           <template>
                              <code/>
                              <content>&lt;#include "extras.ftl" parse=true/&gt;
&lt;#include "html.ftl" parse=true/&gt;
&lt;#include "answers.ftl" parse=true/&gt;
&lt;#assign FEEDBACK_ENABLED = true&gt;
&lt;!-- v 1.9 --&gt;
&lt;@hit contentCss="${applicationResourceUrl}/workfusion-resources/saas/ms/ms.bootstrap.min.css"&gt;
&lt;@script src="${applicationResourceUrl}/workfusion-resources/bootstrap/js/bootstrap-tab.js"/&gt;  
  
&lt;style type="text/css"&gt;
    document {
        background: none !important;
        overflow: visible!important;
        padding: 0 !important;
        position: absolute !important;
        left: 0;
        top: 0;
        width: 100%;
    }
    page {
        box-shadow: none !important;
        background: none !important;
        padding: 0 !important;
        margin: 0 !important;
        overflow: visible!important;
        height: 0 !important;
    }
    cell, document td {
        border: 0 !important;
    }
    block[blocktype="Picture"] {
        opacity: 1 !important;
        background: none !important;
    }
    .hidden_field {display:none; }
    .hidden {display:inline-block !important;}
    .extraction-content {padding: 0 !important;}
  	.ie-view-source {
  		display: none;
  	}
  	.ie-view-source + .ie-zoom-in-zoom-out-separator {
  		display: none !important;
  	}
  	.popup-original-document.ml10 {
  		margin-left: 0 !important;
  	}
    .opacity-control {
        float: left;
        line-height: 40px;
        margin-left: 3px;
    }
    .opacity-control span {
        display: inline-block;
    }
    #rangeInput {
        width: 100px;
        box-shadow: none;
        margin: -1px 0 0 10px;
        border: 0;
    }
    #rangeInput::-moz-focus-outer {
        border: 0;
    }
&lt;/style&gt;
 
&lt;script type="text/javascript"&gt;
    $(document).ready(function() {
        if (document.getElementsByClassName('submit-btn').length) {
            var originalSubmitEvent = document.getElementsByClassName('submit-btn')[0].onclick;
            document.getElementsByClassName('submit-btn')[0].onclick = function(){
                preprocessAppendOrder();
                originalSubmitEvent();
            }
        }
       
        var originalOnTextContainerLoad = ExtractionAnswerController.prototype.onTextContainerLoad;
        ExtractionAnswerController.prototype.onTextContainerLoad = function() {
            originalOnTextContainerLoad.apply(this, arguments);
            scrollingDiv=document.getElementsByClassName('extraction-body')[0];
          	divTop = scrollingDiv.offsetTop;
            while (scrollingDiv.offsetParent) {
            	scrollingDiv = scrollingDiv.offsetParent;
                divTop += scrollingDiv.offsetTop;
            }
            scrollingDiv=document.getElementsByClassName('extraction-body')[0];
            divArray = scrollingDiv.getElementsByTagName("div");
            divSizes(null);
            document.onscroll=divSizes;
            scrollingDiv.onscroll=divSizes;
            document.onkeyup=keyupHandler;
            scrollingDiv.onkeyup=keyupHandler;
            var $textContainer = ExtractionAnswer.getExtractionController().$textContainer;
            if ($textContainer.find('document') &amp;&amp; $textContainer.find('document').attr('id') === 'TOOD') {
                initOpacity();
                var $page = $textContainer.find('page').eq(0);
                var scale = parseFloat((1/(parseInt($page.attr('width'))/$page.width())).toFixed(1));
                $textContainer.css({'transform':'scaleX(' + scale +') scaleY(' + scale + ') translateZ(0)'});
      		}
        };
    });
  
    var OpacityElements = {
        image: $([]),
        textContainer: $([])
    };
  
    function keyupHandler(){
       try {
         if (event.keyCode==67){
         	document.getElementById('checkInput').checked=!document.getElementById('checkInput').checked;
            if (document.getElementById('checkInput').checked) {
              OpacityElements.image.css('opacity', 1);
        	} else {
              OpacityElements.image.css('opacity', 0);
        	}

            var divArray=scrollingDiv.getElementsByClassName("n");
        	var i;
        	for (i in divArray) {
          		var divWithText = divArray[i];
      			if (document.getElementById('checkInput').checked) {
              		divWithText.style.opacity="0";
        		} else {
              		divWithText.style.opacity="1";
        		}
        	}
         }
       } catch (e){
       }
    }

    var divTop;
    var divArray;
    var scrollingDiv;
    var isComputing = false;
    var counter = 0;
    var isWidthChanged = false;
    var elementSet = new Set();

    function divSizes(ev) {
    	if (!isComputing) {
        	counter++;
            isComputing = true;
            try {
                if (ev!=null)
                	ev.cancelBubble=true;
            	
                var i;
                isWidthChanged = false;
                for (i in divArray) {
                	try {
                    	var divWithText = divArray[i];
                    	if (!elementSet.has(divWithText)) {
                        	if (elementInViewport(divWithText)) {
                        		divSize(divWithText);
                        	}
                    	}
                    } catch (ex) {
                    }
                }
            } catch (e) {
            }
            isComputing = false;
        }
    }

                    function divSize(divWithText) {
                    	try {
                    		if (divWithText.className == "n") {
                    			var divWithTextFontHeight = divWithText.style.fontSize.replace("px", "");
                    			var divWithTextWidth = divWithText.style.width.replace("px", "");
                    			var divWithTextScrollWidth = divWithText.scrollWidth;
                    			var divWithTextHeight = divWithText.style.height.replace("px", "");
                    			var divWithTextScrollHeight = divWithText.scrollHeight;
                                var widthDiff=divWithTextScrollWidth-divWithTextWidth;
                                var heightDiff=divWithTextScrollHeight-divWithTextHeight;

                              if ((widthDiff&gt;0) || (heightDiff&gt;0)) {
                    				var updatedFontSizeWidth = divWithTextFontHeight * divWithTextWidth / divWithTextScrollWidth;
                    				var updatedFontSizeHeight = divWithTextFontHeight * divWithTextHeight / divWithTextScrollHeight;
                    				var updatedFontSize = Math.min(updatedFontSizeWidth, updatedFontSizeHeight);
                    				divWithText.style.fontSize = updatedFontSize + "px";
                          			elementSet.add(divWithText);
                    				isWidthChanged = true;
                    			}
                    		}
                    	}
                    	catch (e) {
                    	}
                    }

                    function elementInViewport(inputElement) {
                      	try{

                        var startInputElement=inputElement;  
                      	var top = inputElement.offsetTop;
                    	var height = inputElement.offsetHeight;
                    	while (inputElement.offsetParent) {
                    		inputElement = inputElement.offsetParent;
                    		top += inputElement.offsetTop;
                    	}
                        var windowPageYOffset=window.pageYOffset+scrollingDiv.scrollTop+divTop;
                        return (top &gt;= windowPageYOffset &amp;&amp; /*left &gt;= windowPageXOffset &amp;&amp;*/ (top + height) &lt;= (windowPageYOffset/10*15 + window.innerHeight) /*&amp;&amp; (left + width) &lt;= (windowPageXOffset + frameWindow.innerWidth)*/);
                        } catch (e){
                        	return false;
                        }
                    }

   
    function initOpacity() {
        var template = $('&lt;div class="toolbar-boundary"&gt;&lt;/div&gt;&lt;div class="opacity-control"&gt;&lt;label accesskey="c"&gt;Original document:&lt;/label&gt;&lt;input type="checkbox" id="checkInput" value="yes"/&gt;&lt;/div&gt;');
        $('.extraction-search').before(template);
        OpacityElements.image = $('.extraction-content img');
        OpacityElements.textContainer = $('.extraction-content page');
      	OpacityElements.image.css('opacity', 0);
        $('#checkInput').on('click', changeOpacity);
        document.getElementById('checkInput').focus();
        var divArray=scrollingDiv.getElementsByClassName("n");
        var i;
        for (i in divArray) {
          try{
          var divWithText = divArray[i];
          divWithText.style.opacity="1";
          } catch (e){
          }
        }
    }
   
    function changeOpacity() {
        try {
        var i;
        var divArray=scrollingDiv.getElementsByClassName("n");
      		if (this.checked) {
              OpacityElements.image.css('opacity', 1);
        	} else {
              OpacityElements.image.css('opacity', 0);
        	}
        for (i in divArray) {
          var divWithText = divArray[i];
      		if (this.checked) {
              divWithText.style.opacity="0";
        	} else {
              divWithText.style.opacity="1";
        	}
        }
        } catch (e){
        }
    }
   
    function preprocessAppendOrder() {
        var appendOrder = 0;
        var controllers = Answers.getTaggingControllers();
        controllers.forEach(function(controller) {
            var $tags = DocumentContainer.getControllerTag(controller);
            if ($tags.length) {
                for (var i = 0, l = $tags.length; i &lt; l; i++) {
                    $tags.eq(i).attr('appendorder', nextAppendOrder());
                }
            }
        });
       
        function nextAppendOrder () {
            return ++appendOrder;
        }
    }
&lt;/script&gt;
  
&lt;@instructions title="&lt;h3 id='TaggingOverOriginalDocument-Step6:[TOOD][HT][BASE]TaggingOverOriginalDocument'&gt;[TOOD][MT][BASE] Tagging Over Original Document&lt;/h3&gt;"&gt;
  &lt;!--- editable content --&gt;
  &lt;@editable id="__INSTRUCTIONS__"&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
&lt;/@instructions&gt;
&lt;@form&gt;
&lt;#if questions??&gt;
    &lt;div class="thumbnail"&gt;
    &lt;#list questions as question&gt;
      &lt;@report question=question includeAll=true/&gt;
      &lt;div style="position:relative;margin:2px 0px" class="block question"&gt;
           &lt;div style="position:absolute;top:0px;right:0px;background-color:#e0e0e0;padding:1px 4px;border: 1px solid #C0C0C0;border-radius: 0px" class="number"&gt;
                &lt;b&gt;${question_index + 1}&lt;/b&gt;
           &lt;/div&gt;
           &lt;div&gt;
               &lt;div class="place bg-dark"&gt;
                 &lt;@editable id="__DATA__"&gt;&lt;br data-mce-bogus="1"&gt;&lt;/@editable&gt;
               &lt;/div&gt;
               &lt;div class="place"&gt;
                 &lt;@answers question=question/&gt;
               &lt;/div&gt;
            &lt;/div&gt;
      &lt;/div&gt;
    &lt;/#list&gt;
    &lt;/div&gt;
&lt;/#if&gt;
&lt;@submit text="Submit" /&gt;
&lt;/@form&gt;
&lt;/@hit&gt;</content>
                              <name>[TOOD] Document Tagging Sample</name>
                              <origination>CREATED_AUTOMATICALLY</origination>
                              <status>ACTIVE</status>
                              <type>TASK</type>
                              <uuid>2d5c5ec6-bfdd-4532-8c4f-27ab54c8ce59</uuid>
                              <version>
                                 <componentUuid>31fd0d05-0791-4083-b461-db3324593e33</componentUuid>
                                 <incrementalVersion>1.23</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2018-06-27T14:12:43Z</lastModified>
                                 <versionUuid>631a1138-6347-4031-802c-6bee6d9a4db2</versionUuid>
                              </version>
                           </template>
                        </templates>
                        <title>[TOOD][MT][BASE] Tagging Over Original Document</title>
                        <useCommonHitCoordinates>false</useCommonHitCoordinates>
                        <uuid>4289a103-b3e8-47ef-9767-c5a4daa59649</uuid>
                        <version>
                           <componentUuid>bf1e2eae-20ae-4948-9aaa-43716e85d596</componentUuid>
                           <incrementalVersion>1.27</incrementalVersion>
                           <lastInChain>true</lastInChain>
                           <lastModified>2018-06-27T14:12:43Z</lastModified>
                           <versionUuid>2d036464-b378-4012-9977-8e150c89c359</versionUuid>
                        </version>
                        <workSetting>
                           <category>
                              <automation>false</automation>
                              <description/>
                              <enabled>true</enabled>
                              <executingType>HUMAN</executingType>
                              <name>Other</name>
                              <private>false</private>
                              <publicId>dd92f240-144b-4fef-8476-4ec0acbc1104</publicId>
                           </category>
                           <contentType>BLANK</contentType>
                           <description/>
                           <enabled>true</enabled>
                           <name>Miscellaneous Tasks</name>
                           <publicId>26e6e095-00bb-43fa-8c34-af0b18e71ac8</publicId>
                           <version>
                              <componentUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac8</componentUuid>
                              <incrementalVersion>1.0</incrementalVersion>
                              <lastInChain>true</lastInChain>
                              <lastModified>2018-05-14T06:50:48Z</lastModified>
                              <versionUuid>26e6e095-00bb-43fa-8c34-af0b18e71ac8</versionUuid>
                           </version>
                           <answers/>
                           <businessRules>
                              <businessRule>
                                 <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer(1);

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer(1);
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double(100/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 70 if gold accuracy goes up &lt; 75 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; (75/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 70);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 80 if gold accuracy goes up &gt;= 75 percents and &lt; 90"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (75/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; (90 / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 80);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every 5 gold question and set Accuracy based qualification score to 95 if gold accuracy goes up &gt;= 90 percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  5) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= (90 / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, 95);
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                 <name>Start with one assignment 1+0 pay all</name>
                                 <paramValues>{"NORMAL_ACCURACY_LEVEL_SCORE":"80","NORMAL_ACCURACY_LEVEL_UPPER_LIMIT":"90","WORST_ACCURACY_LEVEL_SCORE":"70","MAJORITY_HIT_THRESHOLD":"100","SUPER_ACCURACY_LEVEL_LOWER_LIMIT":"90","WORST_ACCURACY_LEVEL_UPPER_LIMIT":"75","SUPER_ACCURACY_LEVEL_SCORE":"95","NORMAL_ACCURACY_LEVEL_LOWER_LIMIT":"75","MAJORITY_VALUE":"1","CHECK_EVERY":"5","MAX_ASSIGNMENT_LIMIT":"1"}</paramValues>
                                 <ruleType>DROOLS</ruleType>
                                 <ruleTypeUI>Adjudication</ruleTypeUI>
                                 <template>
                                    <content>

package com.freedomoss.requester;

#list any import classes here.
import com.freedomoss.objective.model.RuleContext;
import com.freedomoss.objective.model.RuleContext.MajorityType;
import com.freedomoss.objective.model.RuleAssigmentContext;
import com.freedomoss.objective.model.RuleQuestionContext;
import com.freedomoss.requester.model.AwsHitQuestion;
import com.freedomoss.requester.model.AwsHitQuestionItem;
import com.freedomoss.requester.model.AwsHitQuestionAnswerItem;

import org.slf4j.Logger;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Map;
import java.util.Iterator;

#declare any global variables here
global RuleContext source
global Logger log
global Map params


rule "Rule context initialization"
auto-focus true
no-loop
dialect "mvel"
agenda-group "initialization-group"
	when
		$ctx:RuleContext(initialized == false);
	then
	    # set parameters

        $ctx.properties[RuleContext.MAJORITY_TYPE] =  RuleContext.MajorityType.COUNT;
        $ctx.properties[RuleContext.MAJORITY_VALUE] = new Integer({{MAJORITY_VALUE}});

        #$ctx.properties[RuleContext.MAX_ASSIGNMENT_LIMIT] = new Integer({{MAX_ASSIGNMENT_LIMIT}});
        $ctx.properties[RuleContext.MAJORITY_HIT_THRESHOLD] = new Double({{MAJORITY_HIT_THRESHOLD}}/100);
        $ctx.properties[RuleContext.ASSIGNMENT_APPROVE_THRESHOLD] = new Double(0.5);

        # insert processed facts into memory
        $ctx.updateWorkingMemory();
        # move to business rules
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("calculation").setFocus();
        $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Worst accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{WORST_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &lt; {{WORST_ACCURACY_LEVEL_UPPER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{WORST_ACCURACY_LEVEL_UPPER_LIMIT}}/100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{WORST_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Normal accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{NORMAL_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}} percents and &lt; {{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}}"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{NORMAL_ACCURACY_LEVEL_LOWER_LIMIT}}/ 100) &amp;&amp; $campaignStatistic.goldAccuracy &lt; ({{NORMAL_ACCURACY_LEVEL_UPPER_LIMIT}} / 100))
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{NORMAL_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "Super accuracy rule-Evaluate every {{CHECK_EVERY}} gold question and set Accuracy based qualification score to {{SUPER_ACCURACY_LEVEL_SCORE}} if gold accuracy goes up &gt;= {{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} percents"
agenda-group "calculation"
dialect "mvel"
salience 250
no-loop
 when
     $ctx:RuleContext(initialized == true)
     $rac:RuleAssigmentContext($campaignStatistic:campaignStatistic, runStatistic.totalGoldQuestions &gt; 0)
     #evaluate run average response time
     eval($campaignStatistic.totalGoldQuestions  &gt;  0 &amp;&amp;
         ($campaignStatistic.totalGoldQuestions  %  {{CHECK_EVERY}}) == 0 &amp;&amp;
          $campaignStatistic.goldAccuracy &gt;= ({{SUPER_ACCURACY_LEVEL_LOWER_LIMIT}} / 100) )
 then
     $rac.grandQualification(RuleContext.ACCURACY_BASED_QUALIFICATION, {{SUPER_ACCURACY_LEVEL_SCORE}});
     $ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "0. Check, if exist majority"
agenda-group "calculation"
dialect "mvel"
salience 100
no-loop
	when
	    $ctx:RuleContext (initialized == true, $gold:gold, $threshold:properties.MAJORITY_HIT_THRESHOLD)
        eval($ctx.majorityWithoutGold().size() &gt;= ($ctx.questions.size() - $gold.size()) *  $threshold)
	then
		insert(new String("MAJORITY_FOUND"));
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

rule "1. Approve question by majority"
agenda-group "calculation"
dialect "mvel"
salience 90
no-loop
	when
		((String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true))
		or
		(not String(toString == "MAJORITY_FOUND") and  $ctx:RuleContext (initialized == true, assignments.size == properties.MAX_ASSIGNMENT_LIMIT)))
		$rqc:RuleQuestionContext()
	then
		$rqc.approveQuestion($ctx.majority());
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rqc);
end

rule "3. Approve assignment (always)"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		$ctx:RuleContext(initialized == true, $threshold:properties.ASSIGNMENT_APPROVE_THRESHOLD)
		$rac:RuleAssigmentContext()
	then
	    insert(new String("ASSIGNMENT_PROCESSED"));
		$ctx.addApproved($rac);
		$ctx.logExecutedRule(kcontext.getRule().getName(), $rac);
end

rule "5. Extend HIT"
agenda-group "calculation"
dialect "mvel"
salience 50
no-loop
	when
		not String(toString == "MAJORITY_FOUND")
		$ctx:RuleContext(initialized == true, assignments.size &lt; properties.MAX_ASSIGNMENT_LIMIT);
	then
		$ctx.setExtendHit(true);
		$ctx.logExecutedRule(kcontext.getRule().getName());
end

</content>
                                    <description>Get qualified workers: pay if ${MAJORITY_VALUE} correct answers, start with 1 assignment, extend to maximum of ${MAX_ASSIGNMENT_LIMIT} assignments. Set qualification scores depending on gold accuracy.</description>
                                    <name>Start with 1 assignment X+0 rule (pay all)</name>
                                    <params>
                                       <param>
                                          <code>MAJORITY_HIT_THRESHOLD</code>
                                          <defaultValue>100</defaultValue>
                                          <description>Percent (from 0 to 100) of correct answers when  majority is found</description>
                                          <name>Percent of correct answers</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>NORMAL_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                          <defaultValue>75</defaultValue>
                                          <description>Normal accuracy level lower limit in percents inclusive</description>
                                          <name>Normal accuracy level lower limit</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>SUPER_ACCURACY_LEVEL_SCORE</code>
                                          <defaultValue>95</defaultValue>
                                          <description>Qualification score will be given to a worker who has demonstrated a super accuracy</description>
                                          <name>Super accuracy level score</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>NORMAL_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                          <defaultValue>90</defaultValue>
                                          <description>Normal accuracy level upper limit in percents exclusive</description>
                                          <name>Normal accuracy level upper limit</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>NORMAL_ACCURACY_LEVEL_SCORE</code>
                                          <defaultValue>80</defaultValue>
                                          <description>Qualification score will be given to a worker who has demonstrated a normal accuracy</description>
                                          <name>Normal accuracy level score</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>MAJORITY_VALUE</code>
                                          <defaultValue>1</defaultValue>
                                          <description>Number of correct answers</description>
                                          <name>Majority value</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>CHECK_EVERY</code>
                                          <defaultValue>5</defaultValue>
                                          <description>Check every i-th gold question when evaluating qualification score</description>
                                          <name>Check every i-th gold question</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>WORST_ACCURACY_LEVEL_SCORE</code>
                                          <defaultValue>70</defaultValue>
                                          <description>Qualification score will be given to a worker who has demonstrated a low accuracy</description>
                                          <name>Worst accuracy level score</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>SUPER_ACCURACY_LEVEL_LOWER_LIMIT</code>
                                          <defaultValue>90</defaultValue>
                                          <description>Super accuracy level lower limit in percents inclusive, upper limit is considered as 100</description>
                                          <name>Super accuracy level lower limit</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>WORST_ACCURACY_LEVEL_UPPER_LIMIT</code>
                                          <defaultValue>75</defaultValue>
                                          <description>Worst accuracy level upper limit in percents exclusive, lower limit is considered as 0</description>
                                          <name>Worst accuracy level upper limit</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                       <param>
                                          <code>MAX_ASSIGNMENT_LIMIT</code>
                                          <defaultValue>1</defaultValue>
                                          <description>Maximum number of assignments</description>
                                          <name>Max assignments limit</name>
                                          <type>INPUT_NUMBER</type>
                                       </param>
                                    </params>
                                 </template>
                                 <uuid>25d70ccd-5743-11e8-9976-0ae8ba3240ae</uuid>
                                 <workflowRuleMode>ADVANCED</workflowRuleMode>
                              </businessRule>
                           </businessRules>
                           <isPrivate>false</isPrivate>
                           <items>
                              <item>
                                 <type>TIME_PER_ASSIGNMENT</type>
                                 <value>1800000</value>
                              </item>
                              <item>
                                 <type>TITLE</type>
                                 <value>Miscellaneous Tasks</value>
                              </item>
                              <item>
                                 <type>HIT_EXPIRES_IN</type>
                                 <value>2592000000</value>
                              </item>
                              <item>
                                 <type>AUTOMATICALLY_APPROVED</type>
                                 <value>432000000</value>
                              </item>
                              <item>
                                 <type>RECOMMENDATION_TAGS</type>
                                 <value>["information_extraction"]</value>
                              </item>
                           </items>
                           <template>
                              <code/>
                              <content>&lt;#include "extras.ftl" parse=true/&gt;
&lt;#include "html.ftl" parse=true/&gt;
&lt;#include "answers.ftl" parse=true/&gt;
&lt;#assign FEEDBACK_ENABLED = true&gt;

&lt;@hit contentCss="${applicationResourceUrl}/workfusion-resources/saas/ms/ms.bootstrap.min.css"&gt;
&lt;@script src="${applicationResourceUrl}/workfusion-resources/bootstrap/js/bootstrap-tab.js"/&gt;  
  

  
&lt;@instructions title="&lt;h2&gt;BLANK&lt;/h2&gt;"&gt;
  &lt;!--- editable content --&gt;
  &lt;@editable id="__INSTRUCTIONS__"&gt;&lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
&lt;/@instructions&gt;
&lt;@form&gt;
&lt;#if questions??&gt;
    &lt;div class="thumbnail"&gt;
    &lt;#list questions as question&gt;
      &lt;@report question=question includeAll=true/&gt;
      &lt;div style="position:relative;margin:2px 0px" class="block question"&gt;
           &lt;div style="position:absolute;top:0px;right:0px;background-color:#e0e0e0;padding:1px 4px;border: 1px solid #C0C0C0;border-radius: 0px" class="number"&gt;
                &lt;b&gt;${question_index + 1}&lt;/b&gt;
           &lt;/div&gt;
           &lt;div&gt;
               &lt;div class="place bg-dark"&gt;
                 &lt;@editable id="__DATA__"&gt;${question.data.blank} &lt;br&gt;&lt;br&gt;&lt;/@editable&gt;
               &lt;/div&gt;
               &lt;div class="place"&gt;
                 &lt;@answers question=question/&gt;
               &lt;/div&gt;
            &lt;/div&gt;
      &lt;/div&gt;
    &lt;/#list&gt;
    &lt;/div&gt;
&lt;/#if&gt;
&lt;@submit text="Submit" /&gt;
&lt;/@form&gt;
&lt;/@hit&gt;</content>
                              <name>Blank</name>
                              <origination>CREATED_MANUALLY</origination>
                              <status>ACTIVE</status>
                              <type>BASE</type>
                              <uuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</uuid>
                              <version>
                                 <componentUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</componentUuid>
                                 <incrementalVersion>1.0</incrementalVersion>
                                 <lastInChain>true</lastInChain>
                                 <lastModified>2012-12-27T00:00:00Z</lastModified>
                                 <versionUuid>8f04bd99-7f51-4796-a528-d1a7c9ccfbc3</versionUuid>
                              </version>
                           </template>
                        </workSetting>
                     </question>
                     <requiresData>true</requiresData>
                     <status>ACTIVE</status>
                     <streamComplexRunThreshold>1</streamComplexRunThreshold>
                     <streamTimeInterval>Immediately</streamTimeInterval>
                     <streamTimeIntervalValue>0</streamTimeIntervalValue>
                     <streamValueType>Tasks</streamValueType>
                     <title>[BP][MASTER][OCR]v2.2</title>
                     <type>COMPOSITE</type>
                     <uuid>8ade37cc-8dff-435c-8ce6-33752e971a2f</uuid>
                     <validWorkflow>true</validWorkflow>
                     <version>
                        <componentUuid>40f3cc28-5ae7-4f7d-8753-f3ef6d95b1cd</componentUuid>
                        <incrementalVersion>1.151</incrementalVersion>
                        <lastInChain>true</lastInChain>
                        <lastModified>2018-06-27T14:12:44Z</lastModified>
                        <versionUuid>4859e71f-4fe5-47d0-a494-291980e724d3</versionUuid>
                     </version>
                     <workSettingBase>false</workSettingBase>
                  </campaign>
                  <description>
                     <automationSetup>
                        <automationUseCaseConfigs>
                           <automationUseCaseId>5</automationUseCaseId>
                           <automationUseCaseUuid>015804db-4696-4d9f-9199-ba861967c2b8</automationUseCaseUuid>
                           <modelCode>german-information-extraction</modelCode>
                           <modelType>Other</modelType>
                        </automationUseCaseConfigs>
                        <id>863</id>
                        <includeOriginalData>false</includeOriginalData>
                        <useCaseConfiguration>[{"automationUseCaseId":5,"automationUseCaseUuid":"015804db-4696-4d9f-9199-ba861967c2b8","modelType":"Other","modelCode":"german-information-extraction"}]</useCaseConfiguration>
                        <uuid>f67963fc-5135-4566-8cc8-f3b378f503fb</uuid>
                     </automationSetup>
                     <dynamicTaskRenderingDisabled>false</dynamicTaskRenderingDisabled>
                     <goldRun>false</goldRun>
                     <maximumProcessingCount>2</maximumProcessingCount>
                     <qualificationTraining>false</qualificationTraining>
                     <stepDescription>{"10f18572-06ac-4ca9-a7e9-5f44aaa6ccd9":{"campaignUUID":"10f18572-06ac-4ca9-a7e9-5f44aaa6ccd9","scheduleDateType":"DATE","workforceUUID":"29aa005d-5743-11e8-9976-0ae8ba3240ae","taskPriority":16,"includeOriginalData":false,"automationUseCaseConfigs":[{"automationUseCaseId":5,"automationUseCaseUuid":"015804db-4696-4d9f-9199-ba861967c2b8","modelType":"Other","modelCode":"german-information-extraction"}],"automationRecall":0.0,"crowdPrices":[]},"5260cf31-b176-416d-be26-170da732f9c5":{"campaignUUID":"5260cf31-b176-416d-be26-170da732f9c5","scheduleDateType":"DATE","workforceUUID":"29aa005d-5743-11e8-9976-0ae8ba3240ae","taskPriority":16,"includeOriginalData":false,"automationUseCaseConfigs":[{"automationUseCaseId":5,"automationUseCaseUuid":"015804db-4696-4d9f-9199-ba861967c2b8","modelType":"Other","modelCode":"german-information-extraction"}],"automationRecall":0.0,"crowdPrices":[{"crowdId":1,"price":0.0}]}}</stepDescription>
                     <streamingValue>1</streamingValue>
                     <streamingValueType>Tasks</streamingValueType>
                     <taskParams>{"values":{"NAME":"OCR Settings"}}</taskParams>
                     <uploadResults>false</uploadResults>
                     <uploadResultsType>CREATE</uploadResultsType>
                  </description>
                  <executingType>MACHINE</executingType>
                  <forceComplete>false</forceComplete>
                  <forceCompleteIdleTime>0</forceCompleteIdleTime>
                  <forceCompletePercent>100</forceCompletePercent>
                  <mixStrategy>
                     <additionalRows>0</additionalRows>
                     <blockSize>1</blockSize>
                     <goldItemSize>0</goldItemSize>
                     <goldPercentage>0</goldPercentage>
                     <goldRatio>true</goldRatio>
                     <mainRows>1</mainRows>
                     <repeated>false</repeated>
                  </mixStrategy>
                  <purged>false</purged>
                  <recordProcessingStatus>COMPLETED</recordProcessingStatus>
                  <recursiveCount>1</recursiveCount>
                  <rootRunUUID>80ca3157-c333-4e9f-a904-1e783023712d</rootRunUUID>
                  <runTags>
                     <value>no-region</value>
                  </runTags>
                  <runTags>
                     <value>two</value>
                  </runTags>
                  <runType>SIMPLE</runType>
                  <tags>no-region,two</tags>
                  <title>OCR Settings</title>
                  <uuid>80ca3157-c333-4e9f-a904-1e783023712d</uuid>
               </run>
            </runs>
            <automationUseCases/>
            <automationInfo/>
         </project>
         <hashCode>1053035046</hashCode>
      </objectContainer>
  </objects>
</objectListWrapper>